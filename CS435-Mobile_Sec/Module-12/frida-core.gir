<?xml version="1.0"?>
<!-- Frida-1.0.gir generated by valac-0.58 0.58.0-frida, do not modify. -->
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="FridaGDB" version="1.0"/>
<include name="GObject" version="2.0"/>
<include name="Gio" version="2.0"/>
<include name="Gee" version="0.8"/>
<include name="GLib" version="2.0"/>
<include name="FridaSuperSU" version="1.0"/>
<include name="FridaFruityInjector" version="1.0"/>
<include name="FridaGum" version="1.0"/>
<include name="FridaLLDB" version="1.0"/>
<include name="FridaFruity" version="1.0"/>
<include name="FridaDroidy" version="1.0"/>
<include name="FridaDroidyInjector" version="1.0"/>
<include name="FridaJDWP" version="1.0"/>
<include name="FridaAXML" version="1.0"/>
<include name="FridaBarebone" version="1.0"/>
<include name="Json" version="1.0"/>
<package name="frida-core"/>
<c:include name="frida-core.h"/>
<namespace name="Frida" version="1.0" c:prefix="Frida" c:identifier-prefixes="Frida" c:symbol-prefixes="frida">
	<enumeration name="GDBTargetArch" c:type="FridaGDBTargetArch" glib:type-name="FridaGDBTargetArch" glib:get-type="frida_gdb_target_arch_get_type">
		<member name="unknown" c:identifier="FRIDA_GDB_TARGET_ARCH_UNKNOWN" value="0"/>
		<member name="ia32" c:identifier="FRIDA_GDB_TARGET_ARCH_IA32" value="1"/>
		<member name="x64" c:identifier="FRIDA_GDB_TARGET_ARCH_X64" value="2"/>
		<member name="arm" c:identifier="FRIDA_GDB_TARGET_ARCH_ARM" value="3"/>
		<member name="arm64" c:identifier="FRIDA_GDB_TARGET_ARCH_ARM64" value="4"/>
		<member name="mips" c:identifier="FRIDA_GDB_TARGET_ARCH_MIPS" value="5"/>
	</enumeration>
	<function name="gdb_target_arch_from_nick" c:identifier="frida_gdb_target_arch_from_nick" throws="1">
		<return-value transfer-ownership="full">
			<type name="FridaGDB.TargetArch" c:type="FridaGDBTargetArch"/>
		</return-value>
		<parameters>
			<parameter name="nick" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="gdb_target_arch_to_nick" c:identifier="frida_gdb_target_arch_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="FridaGDB.TargetArch" c:type="FridaGDBTargetArch"/>
			</instance-parameter>
		</parameters>
	</function>
	<class name="GDBClient" c:type="FridaGDBClient" c:symbol-prefix="client" glib:type-name="FridaGDBClient" glib:get-type="frida_gdb_client_get_type" glib:type-struct="GDBClientClass" parent="GObject.Object">
		<implements name="Gio.AsyncInitable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GDBClientPrivate" c:type="FridaGDBClientPrivate*"/>
		</field>
		<constant name="NOTIFICATION_TYPE_EXIT_STATUS" c:identifier="FRIDA_GDB_CLIENT_NOTIFICATION_TYPE_EXIT_STATUS" value="W">
			<type name="gint8" c:type="gchar"/>
		</constant>
		<constant name="NOTIFICATION_TYPE_EXIT_SIGNAL" c:identifier="FRIDA_GDB_CLIENT_NOTIFICATION_TYPE_EXIT_SIGNAL" value="X">
			<type name="gint8" c:type="gchar"/>
		</constant>
		<constant name="NOTIFICATION_TYPE_STOP" c:identifier="FRIDA_GDB_CLIENT_NOTIFICATION_TYPE_STOP" value="S">
			<type name="gint8" c:type="gchar"/>
		</constant>
		<constant name="NOTIFICATION_TYPE_STOP_WITH_PROPERTIES" c:identifier="FRIDA_GDB_CLIENT_NOTIFICATION_TYPE_STOP_WITH_PROPERTIES" value="T">
			<type name="gint8" c:type="gchar"/>
		</constant>
		<constant name="NOTIFICATION_TYPE_OUTPUT" c:identifier="FRIDA_GDB_CLIENT_NOTIFICATION_TYPE_OUTPUT" value="O">
			<type name="gint8" c:type="gchar"/>
		</constant>
		<field name="supported_features" writable="1">
			<type name="Gee.Set" c:type="GeeSet*">
				<type name="utf8" c:type="gchar*"/>
			</type>
		</field>
		<field name="registers" writable="1" nullable="1">
			<type name="Gee.List" c:type="GeeList*">
				<type name="Frida.FridaGDBClientRegister" c:type="FridaGDBClientRegister*"/>
			</type>
		</field>
		<field name="register_by_name" writable="1" nullable="1">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="Frida.FridaGDBClientRegister" c:type="FridaGDBClientRegister*"/>
			</type>
		</field>
		<field name="breakpoints" writable="1">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="guint64" c:type="guint64*"/>
				<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
			</type>
		</field>
		<function name="open" c:identifier="frida_gdb_client_open">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.IOStream" c:type="GIOStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="open_finish" c:identifier="frida_gdb_client_open_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<method name="detect_vendor_features" c:identifier="frida_gdb_client_detect_vendor_features">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="detect_vendor_features_finish" c:identifier="frida_gdb_client_detect_vendor_features_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="detect_vendor_features" invoker="detect_vendor_features">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="detect_vendor_features_finish" invoker="detect_vendor_features_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="enable_extensions" c:identifier="frida_gdb_client_enable_extensions">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_extensions_finish" c:identifier="frida_gdb_client_enable_extensions_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="enable_extensions" invoker="enable_extensions">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="enable_extensions_finish" invoker="enable_extensions_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="close" c:identifier="frida_gdb_client_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_gdb_client_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="continue" c:identifier="frida_gdb_client_continue">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="continue_finish" c:identifier="frida_gdb_client_continue_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="continue_specific_threads" c:identifier="frida_gdb_client_continue_specific_threads">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="threads" transfer-ownership="none">
					<type name="Gee.Iterable" c:type="GeeIterable*">
						<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="continue_specific_threads_finish" c:identifier="frida_gdb_client_continue_specific_threads_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="continue_until_exception" c:identifier="frida_gdb_client_continue_until_exception">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="continue_until_exception_finish" c:identifier="frida_gdb_client_continue_until_exception_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop" c:identifier="frida_gdb_client_stop">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop_finish" c:identifier="frida_gdb_client_stop_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="detach" c:identifier="frida_gdb_client_detach">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="detach_finish" c:identifier="frida_gdb_client_detach_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="restart" c:identifier="frida_gdb_client_restart" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="kill" c:identifier="frida_gdb_client_kill">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="kill_finish" c:identifier="frida_gdb_client_kill_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="_step_thread" c:identifier="_frida_gdb_client_step_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="_step_thread_finish" c:identifier="_frida_gdb_client_step_thread_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="_step_thread_and_continue" c:identifier="_frida_gdb_client_step_thread_and_continue" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_byte_array" c:identifier="frida_gdb_client_read_byte_array">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="size" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_byte_array_finish" c:identifier="frida_gdb_client_read_byte_array_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_byte_array" invoker="read_byte_array">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="size" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="read_byte_array_finish" invoker="read_byte_array_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_byte_array" c:identifier="frida_gdb_client_write_byte_array">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="bytes" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_byte_array_finish" c:identifier="frida_gdb_client_write_byte_array_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_pointer" c:identifier="frida_gdb_client_read_pointer">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_pointer_finish" c:identifier="frida_gdb_client_read_pointer_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_pointer" c:identifier="frida_gdb_client_write_pointer">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_pointer_finish" c:identifier="frida_gdb_client_write_pointer_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_bool" c:identifier="frida_gdb_client_read_bool">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_bool_finish" c:identifier="frida_gdb_client_read_bool_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_bool" c:identifier="frida_gdb_client_write_bool">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_bool_finish" c:identifier="frida_gdb_client_write_bool_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="make_buffer_builder" c:identifier="frida_gdb_client_make_buffer_builder">
			<return-value transfer-ownership="full">
				<type name="Frida.BufferBuilder" c:type="FridaBufferBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="make_buffer" c:identifier="frida_gdb_client_make_buffer">
			<return-value transfer-ownership="full">
				<type name="Frida.Buffer" c:type="FridaBuffer*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="bytes" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_buffer" c:identifier="frida_gdb_client_read_buffer">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="size" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_buffer_finish" c:identifier="frida_gdb_client_read_buffer_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Buffer" c:type="FridaBuffer*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_breakpoint" c:identifier="frida_gdb_client_add_breakpoint">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="kind" transfer-ownership="none">
					<type name="Frida.FridaGDBBreakpointKind" c:type="FridaGDBBreakpointKind"/>
				</parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="size" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_breakpoint_finish" c:identifier="frida_gdb_client_add_breakpoint_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="run_remote_command" c:identifier="frida_gdb_client_run_remote_command">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="command" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="run_remote_command_finish" c:identifier="frida_gdb_client_run_remote_command_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="load_target_properties" c:identifier="frida_gdb_client_load_target_properties">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="load_target_properties_finish" c:identifier="frida_gdb_client_load_target_properties_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request_stop_info" c:identifier="frida_gdb_client_request_stop_info">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="execute_simple" c:identifier="frida_gdb_client_execute_simple">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="command" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="execute_simple_finish" c:identifier="frida_gdb_client_execute_simple_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="execute" c:identifier="frida_gdb_client_execute">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="command" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="execute_finish" c:identifier="frida_gdb_client_execute_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_simple" c:identifier="frida_gdb_client_query_simple">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="request" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_simple_finish" c:identifier="frida_gdb_client_query_simple_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientPacket" c:type="FridaGDBClientPacket*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_property" c:identifier="frida_gdb_client_query_property">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_property_finish" c:identifier="frida_gdb_client_query_property_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query" c:identifier="frida_gdb_client_query">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="request" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_finish" c:identifier="frida_gdb_client_query_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientPacket" c:type="FridaGDBClientPacket*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_with_predicate" c:identifier="frida_gdb_client_query_with_predicate">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="request" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="predicate" transfer-ownership="none" nullable="1" closure="2" scope="notified" destroy="3">
					<type name="Frida.FridaGDBClientResponsePredicate" c:type="FridaGDBClientResponsePredicate"/>
				</parameter>
				<parameter name="predicate_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="predicate_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_with_predicate_finish" c:identifier="frida_gdb_client_query_with_predicate_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientPacket" c:type="FridaGDBClientPacket*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="try_handle_notification" c:identifier="frida_gdb_client_try_handle_notification" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="packet" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacket" c:type="FridaGDBClientPacket*"/>
				</parameter>
			</parameters>
		</method>
		<method name="parse_stop" c:identifier="frida_gdb_client_parse_stop">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="signum" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="properties" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="parse_stop_finish" c:identifier="frida_gdb_client_parse_stop_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="exception" direction="out" transfer-ownership="full">
					<type name="FridaGDB.Exception" c:type="FridaGDBException**"/>
				</parameter>
				<parameter name="breakpoint" direction="out" transfer-ownership="full" optional="1">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint**"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="parse_stop" invoker="parse_stop">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="signum" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="properties" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="parse_stop_finish" invoker="parse_stop_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="exception" direction="out" transfer-ownership="full">
					<type name="FridaGDB.Exception" c:type="FridaGDBException**"/>
				</parameter>
				<parameter name="breakpoint" direction="out" transfer-ownership="full" optional="1">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint**"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="make_packet_builder_sized" c:identifier="frida_gdb_client_make_packet_builder_sized">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="capacity" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
			</parameters>
		</method>
		<property name="stream" writable="1" construct-only="1">
			<type name="Gio.IOStream" c:type="GIOStream*"/>
		</property>
		<method name="get_stream" c:identifier="frida_gdb_client_get_stream">
			<return-value transfer-ownership="none">
				<type name="Gio.IOStream" c:type="GIOStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="arch" writable="1">
			<type name="FridaGDB.TargetArch" c:type="FridaGDBTargetArch"/>
		</property>
		<method name="get_arch" c:identifier="frida_gdb_client_get_arch">
			<return-value transfer-ownership="none">
				<type name="FridaGDB.TargetArch" c:type="FridaGDBTargetArch"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_arch" c:identifier="frida_gdb_client_set_arch">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="FridaGDB.TargetArch" c:type="FridaGDBTargetArch"/>
				</parameter>
			</parameters>
		</method>
		<property name="pointer-size" writable="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_pointer_size" c:identifier="frida_gdb_client_get_pointer_size">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_pointer_size" c:identifier="frida_gdb_client_set_pointer_size">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<property name="byte-order" writable="1">
			<type name="GLib.ByteOrder" c:type="int"/>
		</property>
		<method name="get_byte_order" c:identifier="frida_gdb_client_get_byte_order">
			<return-value transfer-ownership="none">
				<type name="GLib.ByteOrder" c:type="int"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_byte_order" c:identifier="frida_gdb_client_set_byte_order">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.ByteOrder" c:type="int"/>
				</parameter>
			</parameters>
		</method>
		<property name="state">
			<type name="Frida.FridaGDBClientState" c:type="FridaGDBClientState"/>
		</property>
		<method name="get_state" c:identifier="frida_gdb_client_get_state">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientState" c:type="FridaGDBClientState"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="exception">
			<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
		</property>
		<method name="get_exception" c:identifier="frida_gdb_client_get_exception">
			<return-value transfer-ownership="none" nullable="1">
				<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="features">
			<type name="Gee.Set" c:type="GeeSet*">
				<type name="utf8" c:type="gchar*"/>
			</type>
		</property>
		<method name="get_features" c:identifier="frida_gdb_client_get_features">
			<return-value transfer-ownership="none">
				<type name="Gee.Set" c:type="GeeSet*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="closed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="console-output">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="bytes" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<callback name="ResponsePredicate" c:type="FridaGDBClientResponsePredicate">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientResponseAction" c:type="FridaGDBClientResponseAction"/>
			</return-value>
			<parameters>
				<parameter name="packet" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacket" c:type="FridaGDBClientPacket*"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
	</class>
	<record name="GDBClientClass" c:type="FridaGDBClientClass" glib:is-gtype-struct-for="GDBClient">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="detect_vendor_features">
			<callback name="detect_vendor_features" c:type="detect_vendor_features">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="detect_vendor_features_finish">
			<callback name="detect_vendor_features_finish" c:type="detect_vendor_features_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enable_extensions">
			<callback name="enable_extensions" c:type="enable_extensions">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enable_extensions_finish">
			<callback name="enable_extensions_finish" c:type="enable_extensions_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_byte_array">
			<callback name="read_byte_array" c:type="read_byte_array">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
					</parameter>
					<parameter name="address" transfer-ownership="none">
						<type name="guint64" c:type="guint64"/>
					</parameter>
					<parameter name="size" transfer-ownership="none">
						<type name="gulong" c:type="gsize"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_byte_array_finish">
			<callback name="read_byte_array_finish" c:type="read_byte_array_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="parse_stop">
			<callback name="parse_stop" c:type="parse_stop">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
					</parameter>
					<parameter name="signum" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="properties" transfer-ownership="none">
						<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="parse_stop_finish">
			<callback name="parse_stop_finish" c:type="parse_stop_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
					<parameter name="exception" direction="out" transfer-ownership="full">
						<type name="FridaGDB.Exception" c:type="FridaGDBException**"/>
					</parameter>
					<parameter name="breakpoint" direction="out" transfer-ownership="full" optional="1">
						<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint**"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="GDBClientPrivate" c:type="FridaGDBClientPrivate" disguised="1"/>
	<enumeration name="GDBClientState" c:type="FridaGDBClientState" glib:type-name="FridaGDBClientState" glib:get-type="frida_gdb_client_state_get_type">
		<member name="stopped" c:identifier="FRIDA_GDB_CLIENT_STATE_STOPPED" value="0"/>
		<member name="running" c:identifier="FRIDA_GDB_CLIENT_STATE_RUNNING" value="1"/>
		<member name="stopping" c:identifier="FRIDA_GDB_CLIENT_STATE_STOPPING" value="2"/>
		<member name="closed" c:identifier="FRIDA_GDB_CLIENT_STATE_CLOSED" value="3"/>
	</enumeration>
	<function name="gdb_client_state_to_nick" c:identifier="frida_gdb_client_state_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="Frida.FridaGDBClientState" c:type="FridaGDBClientState"/>
			</instance-parameter>
		</parameters>
	</function>
	<enumeration name="GDBClientChecksumType" c:type="FridaGDBClientChecksumType" glib:type-name="FridaGDBClientChecksumType" glib:get-type="frida_gdb_client_checksum_type_get_type">
		<member name="proper" c:identifier="FRIDA_GDB_CLIENT_CHECKSUM_TYPE_PROPER" value="0"/>
		<member name="zeroed" c:identifier="FRIDA_GDB_CLIENT_CHECKSUM_TYPE_ZEROED" value="1"/>
	</enumeration>
	<enumeration name="GDBClientResponseAction" c:type="FridaGDBClientResponseAction" glib:type-name="FridaGDBClientResponseAction" glib:get-type="frida_gdb_client_response_action_get_type">
		<member name="complete" c:identifier="FRIDA_GDB_CLIENT_RESPONSE_ACTION_COMPLETE" value="0"/>
		<member name="absorb" c:identifier="FRIDA_GDB_CLIENT_RESPONSE_ACTION_ABSORB" value="1"/>
		<member name="keep_trying" c:identifier="FRIDA_GDB_CLIENT_RESPONSE_ACTION_KEEP_TRYING" value="2"/>
	</enumeration>
	<class name="GDBClientPacket" c:type="FridaGDBClientPacket" c:symbol-prefix="packet" glib:type-name="FridaGDBClientPacket" glib:get-type="frida_gdb_client_packet_get_type" glib:type-struct="GDBClientPacketClass" glib:fundamental="1" glib:ref-func="frida_gdb_client_packet_ref" glib:unref-func="frida_gdb_client_packet_unref" glib:set-value-func="frida_gdb_client_value_set_packet" glib:get-value-func="frida_gdb_client_value_get_packet">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GDBClientPacketPrivate" c:type="FridaGDBClientPacketPrivate*"/>
		</field>
		<constant name="OVERHEAD" c:identifier="FRIDA_GDB_CLIENT_PACKET_OVERHEAD" value="(NULL)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constructor name="from_bytes" c:identifier="frida_gdb_client_packet_new_from_bytes">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientPacket" c:type="FridaGDBClientPacket*"/>
			</return-value>
			<parameters>
				<parameter name="payload_bytes" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="new" c:identifier="frida_gdb_client_packet_new">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientPacket" c:type="FridaGDBClientPacket*"/>
			</return-value>
		</constructor>
		<method name="get_payload" c:identifier="frida_gdb_client_packet_get_payload">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacket" c:type="FridaGDBClientPacket*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_payload_bytes" c:identifier="frida_gdb_client_packet_get_payload_bytes">
			<return-value transfer-ownership="none">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacket" c:type="FridaGDBClientPacket*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="GDBClientPacketClass" c:type="FridaGDBClientPacketClass" glib:is-gtype-struct-for="GDBClientPacket">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="GDBClientPacketPrivate" c:type="FridaGDBClientPacketPrivate" disguised="1"/>
	<class name="GDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder" c:symbol-prefix="packet_builder" glib:type-name="FridaGDBClientPacketBuilder" glib:get-type="frida_gdb_client_packet_builder_get_type" glib:type-struct="GDBClientPacketBuilderClass" glib:fundamental="1" glib:ref-func="frida_gdb_client_packet_builder_ref" glib:unref-func="frida_gdb_client_packet_builder_unref" glib:set-value-func="frida_gdb_client_value_set_packet_builder" glib:get-value-func="frida_gdb_client_value_get_packet_builder">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GDBClientPacketBuilderPrivate" c:type="FridaGDBClientPacketBuilderPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_gdb_client_packet_builder_new">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<parameter name="capacity" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="checksum_type" transfer-ownership="none">
					<type name="Frida.FridaGDBClientChecksumType" c:type="FridaGDBClientChecksumType"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="reset" c:identifier="frida_gdb_client_packet_builder_reset">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="append" c:identifier="frida_gdb_client_packet_builder_append">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_c" c:identifier="frida_gdb_client_packet_builder_append_c">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="c" transfer-ownership="none">
					<type name="gint8" c:type="gchar"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_escaped" c:identifier="frida_gdb_client_packet_builder_append_escaped">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_c_escaped" c:identifier="frida_gdb_client_packet_builder_append_c_escaped">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="c" transfer-ownership="none">
					<type name="gint8" c:type="gchar"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_address" c:identifier="frida_gdb_client_packet_builder_append_address">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_size" c:identifier="frida_gdb_client_packet_builder_append_size">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="size" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_uint" c:identifier="frida_gdb_client_packet_builder_append_uint">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_process_id" c:identifier="frida_gdb_client_packet_builder_append_process_id">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="process_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_register_id" c:identifier="frida_gdb_client_packet_builder_append_register_id">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="register_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_register_value" c:identifier="frida_gdb_client_packet_builder_append_register_value">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_hexbyte" c:identifier="frida_gdb_client_packet_builder_append_hexbyte">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="byte" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
			</parameters>
		</method>
		<method name="build" c:identifier="frida_gdb_client_packet_builder_build">
			<return-value transfer-ownership="full">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="GDBClientPacketBuilderClass" c:type="FridaGDBClientPacketBuilderClass" glib:is-gtype-struct-for="GDBClientPacketBuilder">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="GDBClientPacketBuilderPrivate" c:type="FridaGDBClientPacketBuilderPrivate" disguised="1"/>
	<class name="GDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary" c:symbol-prefix="property_dictionary" glib:type-name="FridaGDBClientPropertyDictionary" glib:get-type="frida_gdb_client_property_dictionary_get_type" glib:type-struct="GDBClientPropertyDictionaryClass" glib:fundamental="1" glib:ref-func="frida_gdb_client_property_dictionary_ref" glib:unref-func="frida_gdb_client_property_dictionary_unref" glib:set-value-func="frida_gdb_client_value_set_property_dictionary" glib:get-value-func="frida_gdb_client_value_get_property_dictionary">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GDBClientPropertyDictionaryPrivate" c:type="FridaGDBClientPropertyDictionaryPrivate*"/>
		</field>
		<function name="parse" c:identifier="frida_gdb_client_property_dictionary_parse" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
			</return-value>
			<parameters>
				<parameter name="raw_properties" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<method name="foreach" c:identifier="frida_gdb_client_property_dictionary_foreach">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</instance-parameter>
				<parameter name="f" transfer-ownership="none" closure="1" scope="call">
					<type name="Gee.ForallFunc" c:type="GeeForallFunc"/>
				</parameter>
				<parameter name="f_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="has" c:identifier="frida_gdb_client_property_dictionary_has">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_string" c:identifier="frida_gdb_client_property_dictionary_get_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_uint" c:identifier="frida_gdb_client_property_dictionary_get_uint" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_uint64" c:identifier="frida_gdb_client_property_dictionary_get_uint64" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_string_array" c:identifier="frida_gdb_client_property_dictionary_get_string_array" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.ArrayList" c:type="GeeArrayList*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_uint_array" c:identifier="frida_gdb_client_property_dictionary_get_uint_array" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.ArrayList" c:type="GeeArrayList*">
					<type name="guint" c:type="guint"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_uint64_array" c:identifier="frida_gdb_client_property_dictionary_get_uint64_array" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.ArrayList" c:type="GeeArrayList*">
					<type name="guint64" c:type="guint64*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_gdb_client_property_dictionary_new">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GDBClientPropertyDictionaryClass" c:type="FridaGDBClientPropertyDictionaryClass" glib:is-gtype-struct-for="GDBClientPropertyDictionary">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="GDBClientPropertyDictionaryPrivate" c:type="FridaGDBClientPropertyDictionaryPrivate" disguised="1"/>
	<class name="GDBClientRegister" c:type="FridaGDBClientRegister" c:symbol-prefix="register" glib:type-name="FridaGDBClientRegister" glib:get-type="frida_gdb_client_register_get_type" glib:type-struct="GDBClientRegisterClass" glib:fundamental="1" glib:ref-func="frida_gdb_client_register_ref" glib:unref-func="frida_gdb_client_register_unref" glib:set-value-func="frida_gdb_client_value_set_register" glib:get-value-func="frida_gdb_client_value_get_register">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GDBClientRegisterPrivate" c:type="FridaGDBClientRegisterPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_gdb_client_register_new">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientRegister" c:type="FridaGDBClientRegister*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="altname" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="bitsize" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_name" c:identifier="frida_gdb_client_register_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientRegister" c:type="FridaGDBClientRegister*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_altname" c:identifier="frida_gdb_client_register_get_altname">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientRegister" c:type="FridaGDBClientRegister*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_id" c:identifier="frida_gdb_client_register_get_id">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientRegister" c:type="FridaGDBClientRegister*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_bitsize" c:identifier="frida_gdb_client_register_get_bitsize">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientRegister" c:type="FridaGDBClientRegister*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="GDBClientRegisterClass" c:type="FridaGDBClientRegisterClass" glib:is-gtype-struct-for="GDBClientRegister">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="GDBClientRegisterPrivate" c:type="FridaGDBClientRegisterPrivate" disguised="1"/>
	<class name="GDBClientTargetSpec" c:type="FridaGDBClientTargetSpec" c:symbol-prefix="target_spec" glib:type-name="FridaGDBClientTargetSpec" glib:get-type="frida_gdb_client_target_spec_get_type" glib:type-struct="GDBClientTargetSpecClass" glib:fundamental="1" glib:ref-func="frida_gdb_client_target_spec_ref" glib:unref-func="frida_gdb_client_target_spec_unref" glib:set-value-func="frida_gdb_client_value_set_target_spec" glib:get-value-func="frida_gdb_client_value_get_target_spec">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GDBClientTargetSpecPrivate" c:type="FridaGDBClientTargetSpecPrivate*"/>
		</field>
		<field name="arch" writable="1">
			<type name="FridaGDB.TargetArch" c:type="FridaGDBTargetArch"/>
		</field>
		<field name="registers" writable="1">
			<type name="Gee.List" c:type="GeeList*">
				<type name="Frida.FridaGDBClientRegister" c:type="FridaGDBClientRegister*"/>
			</type>
		</field>
		<constructor name="new" c:identifier="frida_gdb_client_target_spec_new">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientTargetSpec" c:type="FridaGDBClientTargetSpec*"/>
			</return-value>
			<parameters>
				<parameter name="arch" transfer-ownership="none">
					<type name="FridaGDB.TargetArch" c:type="FridaGDBTargetArch"/>
				</parameter>
				<parameter name="registers" transfer-ownership="none">
					<type name="Gee.List" c:type="GeeList*">
						<type name="Frida.FridaGDBClientRegister" c:type="FridaGDBClientRegister*"/>
					</type>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GDBClientTargetSpecClass" c:type="FridaGDBClientTargetSpecClass" glib:is-gtype-struct-for="GDBClientTargetSpec">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="GDBClientTargetSpecPrivate" c:type="FridaGDBClientTargetSpecPrivate" disguised="1"/>
	<class name="GDBThread" c:type="FridaGDBThread" c:symbol-prefix="thread" glib:type-name="FridaGDBThread" glib:get-type="frida_gdb_thread_get_type" glib:type-struct="GDBThreadClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GDBThreadPrivate" c:type="FridaGDBThreadPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_gdb_thread_new">
			<return-value transfer-ownership="full">
				<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
			</return-value>
			<parameters>
				<parameter name="id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="client" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="step" c:identifier="frida_gdb_thread_step">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="step_finish" c:identifier="frida_gdb_thread_step_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="step_and_continue" c:identifier="frida_gdb_thread_step_and_continue" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="read_registers" c:identifier="frida_gdb_thread_read_registers">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_registers_finish" c:identifier="frida_gdb_thread_read_registers_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Variant" c:type="GVariant*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_registers" c:identifier="frida_gdb_thread_write_registers">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="regs" transfer-ownership="none">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_registers_finish" c:identifier="frida_gdb_thread_write_registers_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_register" c:identifier="frida_gdb_thread_read_register">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_register_finish" c:identifier="frida_gdb_thread_read_register_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_register" c:identifier="frida_gdb_thread_write_register">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_register_finish" c:identifier="frida_gdb_thread_write_register_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="id" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_id" c:identifier="frida_gdb_thread_get_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="name" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="frida_gdb_thread_get_name">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="client" writable="1" construct-only="1">
			<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
		</property>
		<method name="get_client" c:identifier="frida_gdb_thread_get_client">
			<return-value transfer-ownership="none">
				<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="GDBThreadClass" c:type="FridaGDBThreadClass" glib:is-gtype-struct-for="GDBThread">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GDBThreadPrivate" c:type="FridaGDBThreadPrivate" disguised="1"/>
	<class name="GDBException" c:type="FridaGDBException" c:symbol-prefix="exception" glib:type-name="FridaGDBException" glib:get-type="frida_gdb_exception_get_type" glib:type-struct="GDBExceptionClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GDBExceptionPrivate" c:type="FridaGDBExceptionPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_gdb_exception_new">
			<return-value transfer-ownership="full">
				<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
			</return-value>
			<parameters>
				<parameter name="signum" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="breakpoint" transfer-ownership="none" nullable="1">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="to_string" c:identifier="frida_gdb_exception_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="signum" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_signum" c:identifier="frida_gdb_exception_get_signum">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="breakpoint" writable="1" construct-only="1">
			<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
		</property>
		<method name="get_breakpoint" c:identifier="frida_gdb_exception_get_breakpoint">
			<return-value transfer-ownership="none" nullable="1">
				<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="thread" writable="1" construct-only="1">
			<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
		</property>
		<method name="get_thread" c:identifier="frida_gdb_exception_get_thread">
			<return-value transfer-ownership="none">
				<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="GDBExceptionClass" c:type="FridaGDBExceptionClass" glib:is-gtype-struct-for="GDBException">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="GDBExceptionPrivate" c:type="FridaGDBExceptionPrivate" disguised="1"/>
	<class name="GDBBreakpoint" c:type="FridaGDBBreakpoint" c:symbol-prefix="breakpoint" glib:type-name="FridaGDBBreakpoint" glib:get-type="frida_gdb_breakpoint_get_type" glib:type-struct="GDBBreakpointClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GDBBreakpointPrivate" c:type="FridaGDBBreakpointPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_gdb_breakpoint_new">
			<return-value transfer-ownership="full">
				<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
			</return-value>
			<parameters>
				<parameter name="kind" transfer-ownership="none">
					<type name="Frida.FridaGDBBreakpointKind" c:type="FridaGDBBreakpointKind"/>
				</parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="size" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="client" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="enable" c:identifier="frida_gdb_breakpoint_enable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_finish" c:identifier="frida_gdb_breakpoint_enable_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable" c:identifier="frida_gdb_breakpoint_disable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_finish" c:identifier="frida_gdb_breakpoint_disable_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove" c:identifier="frida_gdb_breakpoint_remove">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove_finish" c:identifier="frida_gdb_breakpoint_remove_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="kind" writable="1" construct-only="1">
			<type name="Frida.FridaGDBBreakpointKind" c:type="FridaGDBBreakpointKind"/>
		</property>
		<method name="get_kind" c:identifier="frida_gdb_breakpoint_get_kind">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBBreakpointKind" c:type="FridaGDBBreakpointKind"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="address" writable="1" construct-only="1">
			<type name="guint64" c:type="guint64"/>
		</property>
		<method name="get_address" c:identifier="frida_gdb_breakpoint_get_address">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="size" writable="1" construct-only="1">
			<type name="gulong" c:type="gsize"/>
		</property>
		<method name="get_size" c:identifier="frida_gdb_breakpoint_get_size">
			<return-value transfer-ownership="none">
				<type name="gulong" c:type="gsize"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="client" writable="1" construct-only="1">
			<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
		</property>
		<method name="get_client" c:identifier="frida_gdb_breakpoint_get_client">
			<return-value transfer-ownership="none">
				<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="removed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</class>
	<record name="GDBBreakpointClass" c:type="FridaGDBBreakpointClass" glib:is-gtype-struct-for="GDBBreakpoint">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GDBBreakpointPrivate" c:type="FridaGDBBreakpointPrivate" disguised="1"/>
	<enumeration name="GDBBreakpointKind" c:type="FridaGDBBreakpointKind" glib:type-name="FridaGDBBreakpointKind" glib:get-type="frida_gdb_breakpoint_kind_get_type">
		<member name="soft" c:identifier="FRIDA_GDB_BREAKPOINT_KIND_SOFT" value="0"/>
		<member name="hard" c:identifier="FRIDA_GDB_BREAKPOINT_KIND_HARD" value="1"/>
		<member name="write" c:identifier="FRIDA_GDB_BREAKPOINT_KIND_WRITE" value="2"/>
		<member name="read" c:identifier="FRIDA_GDB_BREAKPOINT_KIND_READ" value="3"/>
		<member name="access" c:identifier="FRIDA_GDB_BREAKPOINT_KIND_ACCESS" value="4"/>
	</enumeration>
	<function name="gdb_breakpoint_kind_from_nick" c:identifier="frida_gdb_breakpoint_kind_from_nick" throws="1">
		<return-value transfer-ownership="full">
			<type name="Frida.FridaGDBBreakpointKind" c:type="FridaGDBBreakpointKind"/>
		</return-value>
		<parameters>
			<parameter name="nick" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="gdb_breakpoint_kind_to_nick" c:identifier="frida_gdb_breakpoint_kind_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="Frida.FridaGDBBreakpointKind" c:type="FridaGDBBreakpointKind"/>
			</instance-parameter>
		</parameters>
	</function>
	<function name="system_get_frontmost_application" c:identifier="frida_system_get_frontmost_application" throws="1">
		<return-value transfer-ownership="none">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="options" transfer-ownership="none">
				<type name="Frida.FrontmostQueryOptions" c:type="FridaFrontmostQueryOptions*"/>
			</parameter>
			<parameter name="result" direction="out" transfer-ownership="full" caller-allocates="1">
				<type name="Frida.HostApplicationInfo" c:type="FridaHostApplicationInfo*"/>
			</parameter>
		</parameters>
	</function>
	<function name="system_enumerate_applications" c:identifier="frida_system_enumerate_applications">
		<return-value transfer-ownership="full">
			<array length="1" c:type="FridaHostApplicationInfo*">
				<type name="Frida.HostApplicationInfo" c:type="FridaHostApplicationInfo"/>
			</array>
		</return-value>
		<parameters>
			<parameter name="options" transfer-ownership="none">
				<type name="Frida.ApplicationQueryOptions" c:type="FridaApplicationQueryOptions*"/>
			</parameter>
			<parameter name="result_length1" direction="out" transfer-ownership="none">
				<type name="gint" c:type="gint*"/>
			</parameter>
		</parameters>
	</function>
	<function name="system_enumerate_processes" c:identifier="frida_system_enumerate_processes">
		<return-value transfer-ownership="full">
			<array length="1" c:type="FridaHostProcessInfo*">
				<type name="Frida.HostProcessInfo" c:type="FridaHostProcessInfo"/>
			</array>
		</return-value>
		<parameters>
			<parameter name="options" transfer-ownership="none">
				<type name="Frida.ProcessQueryOptions" c:type="FridaProcessQueryOptions*"/>
			</parameter>
			<parameter name="result_length1" direction="out" transfer-ownership="none">
				<type name="gint" c:type="gint*"/>
			</parameter>
		</parameters>
	</function>
	<function name="system_kill" c:identifier="frida_system_kill">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="pid" transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</parameter>
		</parameters>
	</function>
	<class name="SuperSUProcess" c:type="FridaSuperSUProcess" c:symbol-prefix="process" glib:type-name="FridaSuperSUProcess" glib:get-type="frida_super_su_process_get_type" glib:type-struct="SuperSUProcessClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SuperSUProcessPrivate" c:type="FridaSuperSUProcessPrivate*"/>
		</field>
		<method name="detach" c:identifier="frida_super_su_process_detach">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaSuperSU.Process" c:type="FridaSuperSUProcess*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="detach_finish" c:identifier="frida_super_su_process_detach_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaSuperSU.Process" c:type="FridaSuperSUProcess*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="wait" c:identifier="frida_super_su_process_wait">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaSuperSU.Process" c:type="FridaSuperSUProcess*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="wait_finish" c:identifier="frida_super_su_process_wait_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaSuperSU.Process" c:type="FridaSuperSUProcess*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="output">
			<type name="Gio.InputStream" c:type="GInputStream*"/>
		</property>
		<method name="get_output" c:identifier="frida_super_su_process_get_output">
			<return-value transfer-ownership="none">
				<type name="Gio.InputStream" c:type="GInputStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaSuperSU.Process" c:type="FridaSuperSUProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="exit-status">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_exit_status" c:identifier="frida_super_su_process_get_exit_status">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaSuperSU.Process" c:type="FridaSuperSUProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="SuperSUProcessClass" c:type="FridaSuperSUProcessClass" glib:is-gtype-struct-for="SuperSUProcess">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SuperSUProcessPrivate" c:type="FridaSuperSUProcessPrivate" disguised="1"/>
	<function name="super_su_spawn" c:identifier="frida_super_su_spawn">
		<return-value transfer-ownership="none">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="working_directory" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
			<parameter name="argv" transfer-ownership="none">
				<array length="2" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</parameter>
			<parameter name="argv_length1" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="envp" transfer-ownership="none" nullable="1">
				<array length="4" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</parameter>
			<parameter name="envp_length1" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="capture_output" transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</parameter>
			<parameter name="cancellable" transfer-ownership="none" nullable="1">
				<type name="Gio.Cancellable" c:type="GCancellable*"/>
			</parameter>
			<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="8" scope="async">
				<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
			</parameter>
			<parameter name="_callback__target" transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
	<function name="super_su_spawn_finish" c:identifier="frida_super_su_spawn_finish" throws="1">
		<return-value transfer-ownership="full">
			<type name="FridaSuperSU.Process" c:type="FridaSuperSUProcess*"/>
		</return-value>
		<parameters>
			<parameter name="_res_" transfer-ownership="none">
				<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
			</parameter>
		</parameters>
	</function>
	<enumeration name="FruityInjectorError" c:type="FridaFruityInjectorError" glib:type-name="FridaFruityInjectorError" glib:get-type="frida_fruity_injector_error_get_type" glib:error-domain="frida-fruity-injector-error-quark">
		<member name="unsupported" c:identifier="FRIDA_FRUITY_INJECTOR_ERROR_UNSUPPORTED" value="0"/>
	</enumeration>
	<class name="FruityInjectorGadgetDetails" c:type="FridaFruityInjectorGadgetDetails" c:symbol-prefix="gadget_details" glib:type-name="FridaFruityInjectorGadgetDetails" glib:get-type="frida_fruity_injector_gadget_details_get_type" glib:type-struct="FruityInjectorGadgetDetailsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityInjectorGadgetDetailsPrivate" c:type="FridaFruityInjectorGadgetDetailsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_injector_gadget_details_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruityInjector.GadgetDetails" c:type="FridaFruityInjectorGadgetDetails*"/>
			</return-value>
			<parameters>
				<parameter name="port" transfer-ownership="none">
					<type name="guint16" c:type="guint16"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="port" writable="1" construct-only="1">
			<type name="guint16" c:type="guint16"/>
		</property>
		<method name="get_port" c:identifier="frida_fruity_injector_gadget_details_get_port">
			<return-value transfer-ownership="none">
				<type name="guint16" c:type="guint16"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruityInjector.GadgetDetails" c:type="FridaFruityInjectorGadgetDetails*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityInjectorGadgetDetailsClass" c:type="FridaFruityInjectorGadgetDetailsClass" glib:is-gtype-struct-for="FruityInjectorGadgetDetails">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityInjectorGadgetDetailsPrivate" c:type="FridaFruityInjectorGadgetDetailsPrivate" disguised="1"/>
	<function name="fruity_injector_inject" c:identifier="frida_fruity_injector_inject">
		<return-value transfer-ownership="none">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="module" transfer-ownership="full">
				<type name="FridaGum.DarwinModule" c:type="GumDarwinModule*"/>
			</parameter>
			<parameter name="lldb" transfer-ownership="none">
				<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
			</parameter>
			<parameter name="channel_provider" transfer-ownership="none">
				<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
			</parameter>
			<parameter name="cancellable" transfer-ownership="none" nullable="1">
				<type name="Gio.Cancellable" c:type="GCancellable*"/>
			</parameter>
			<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
				<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
			</parameter>
			<parameter name="_callback__target" transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
	<function name="fruity_injector_inject_finish" c:identifier="frida_fruity_injector_inject_finish" throws="1">
		<return-value transfer-ownership="full">
			<type name="FridaFruityInjector.GadgetDetails" c:type="FridaFruityInjectorGadgetDetails*"/>
		</return-value>
		<parameters>
			<parameter name="_res_" transfer-ownership="none">
				<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
			</parameter>
		</parameters>
	</function>
	<function name="fruity_ns_keyed_archive_encode" c:identifier="frida_fruity_ns_keyed_archive_encode">
		<return-value transfer-ownership="full">
			<array length="1" c:type="guint8*">
				<type name="guint8" c:type="guint8"/>
			</array>
		</return-value>
		<parameters>
			<parameter name="obj" transfer-ownership="none" nullable="1">
				<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
			</parameter>
			<parameter name="result_length1" direction="out" transfer-ownership="none">
				<type name="gint" c:type="gint*"/>
			</parameter>
		</parameters>
	</function>
	<function name="fruity_ns_keyed_archive_decode" c:identifier="frida_fruity_ns_keyed_archive_decode" throws="1">
		<return-value transfer-ownership="full" nullable="1">
			<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
		</return-value>
		<parameters>
			<parameter name="data" transfer-ownership="none">
				<array length="1" c:type="guint8*">
					<type name="guint8" c:type="guint8"/>
				</array>
			</parameter>
			<parameter name="data_length1" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
		</parameters>
	</function>
	<enumeration name="FruityApplicationType" c:type="FridaFruityApplicationType" glib:type-name="FridaFruityApplicationType" glib:get-type="frida_fruity_application_type_get_type">
		<member name="system" c:identifier="FRIDA_FRUITY_APPLICATION_TYPE_SYSTEM" value="1"/>
		<member name="user" c:identifier="FRIDA_FRUITY_APPLICATION_TYPE_USER" value="0"/>
		<member name="plugin_kit" c:identifier="FRIDA_FRUITY_APPLICATION_TYPE_PLUGIN_KIT" value="1"/>
	</enumeration>
	<function name="fruity_application_type_from_nick" c:identifier="frida_fruity_application_type_from_nick" throws="1">
		<return-value transfer-ownership="full">
			<type name="FridaFruity.ApplicationType" c:type="FridaFruityApplicationType"/>
		</return-value>
		<parameters>
			<parameter name="nick" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="fruity_application_type_to_nick" c:identifier="frida_fruity_application_type_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="FridaFruity.ApplicationType" c:type="FridaFruityApplicationType"/>
			</instance-parameter>
		</parameters>
	</function>
	<enumeration name="FruityDTXMessageType" c:type="FridaFruityDTXMessageType" glib:type-name="FridaFruityDTXMessageType" glib:get-type="frida_fruity_dtx_message_type_get_type">
		<member name="ok" c:identifier="FRIDA_FRUITY_DTX_MESSAGE_TYPE_OK" value="0"/>
		<member name="invoke" c:identifier="FRIDA_FRUITY_DTX_MESSAGE_TYPE_INVOKE" value="2"/>
		<member name="result" c:identifier="FRIDA_FRUITY_DTX_MESSAGE_TYPE_RESULT" value="3"/>
		<member name="error" c:identifier="FRIDA_FRUITY_DTX_MESSAGE_TYPE_ERROR" value="4"/>
		<member name="barrier" c:identifier="FRIDA_FRUITY_DTX_MESSAGE_TYPE_BARRIER" value="5"/>
	</enumeration>
	<bitfield name="FruityDTXMessageTransportFlags" c:type="FridaFruityDTXMessageTransportFlags" glib:type-name="FridaFruityDTXMessageTransportFlags" glib:get-type="frida_fruity_dtx_message_transport_flags_get_type">
		<member name="none" c:identifier="FRIDA_FRUITY_DTX_MESSAGE_TRANSPORT_FLAGS_NONE" value="0"/>
		<member name="expects_reply" c:identifier="FRIDA_FRUITY_DTX_MESSAGE_TRANSPORT_FLAGS_EXPECTS_REPLY" value="(NULL)"/>
	</bitfield>
	<enumeration name="FruityConnectionType" c:type="FridaFruityConnectionType" glib:type-name="FridaFruityConnectionType" glib:get-type="frida_fruity_connection_type_get_type">
		<member name="usb" c:identifier="FRIDA_FRUITY_CONNECTION_TYPE_USB" value="0"/>
		<member name="network" c:identifier="FRIDA_FRUITY_CONNECTION_TYPE_NETWORK" value="1"/>
	</enumeration>
	<enumeration name="FruityLockdownError" c:type="FridaFruityLockdownError" glib:type-name="FridaFruityLockdownError" glib:get-type="frida_fruity_lockdown_error_get_type" glib:error-domain="frida-fruity-lockdown-error-quark">
		<member name="invalid_service" c:identifier="FRIDA_FRUITY_LOCKDOWN_ERROR_INVALID_SERVICE" value="0"/>
		<member name="not_paired" c:identifier="FRIDA_FRUITY_LOCKDOWN_ERROR_NOT_PAIRED" value="1"/>
		<member name="unsupported" c:identifier="FRIDA_FRUITY_LOCKDOWN_ERROR_UNSUPPORTED" value="2"/>
		<member name="protocol" c:identifier="FRIDA_FRUITY_LOCKDOWN_ERROR_PROTOCOL" value="3"/>
	</enumeration>
	<enumeration name="FruityInstallationProxyError" c:type="FridaFruityInstallationProxyError" glib:type-name="FridaFruityInstallationProxyError" glib:get-type="frida_fruity_installation_proxy_error_get_type" glib:error-domain="frida-fruity-installation-proxy-error-quark">
		<member name="invalid_argument" c:identifier="FRIDA_FRUITY_INSTALLATION_PROXY_ERROR_INVALID_ARGUMENT" value="0"/>
		<member name="protocol" c:identifier="FRIDA_FRUITY_INSTALLATION_PROXY_ERROR_PROTOCOL" value="1"/>
	</enumeration>
	<enumeration name="FruitySpringboardServicesError" c:type="FridaFruitySpringboardServicesError" glib:type-name="FridaFruitySpringboardServicesError" glib:get-type="frida_fruity_springboard_services_error_get_type" glib:error-domain="frida-fruity-springboard-services-error-quark">
		<member name="invalid_argument" c:identifier="FRIDA_FRUITY_SPRINGBOARD_SERVICES_ERROR_INVALID_ARGUMENT" value="0"/>
		<member name="protocol" c:identifier="FRIDA_FRUITY_SPRINGBOARD_SERVICES_ERROR_PROTOCOL" value="1"/>
	</enumeration>
	<enumeration name="FruityUsbmuxError" c:type="FridaFruityUsbmuxError" glib:type-name="FridaFruityUsbmuxError" glib:get-type="frida_fruity_usbmux_error_get_type" glib:error-domain="frida-fruity-usbmux-error-quark">
		<member name="daemon_not_running" c:identifier="FRIDA_FRUITY_USBMUX_ERROR_DAEMON_NOT_RUNNING" value="0"/>
		<member name="connection_refused" c:identifier="FRIDA_FRUITY_USBMUX_ERROR_CONNECTION_REFUSED" value="1"/>
		<member name="invalid_argument" c:identifier="FRIDA_FRUITY_USBMUX_ERROR_INVALID_ARGUMENT" value="2"/>
		<member name="protocol" c:identifier="FRIDA_FRUITY_USBMUX_ERROR_PROTOCOL" value="3"/>
	</enumeration>
	<enumeration name="FruityPlistError" c:type="FridaFruityPlistError" glib:type-name="FridaFruityPlistError" glib:get-type="frida_fruity_plist_error_get_type" glib:error-domain="frida-fruity-plist-error-quark">
		<member name="invalid_data" c:identifier="FRIDA_FRUITY_PLIST_ERROR_INVALID_DATA" value="0"/>
		<member name="key_not_found" c:identifier="FRIDA_FRUITY_PLIST_ERROR_KEY_NOT_FOUND" value="1"/>
		<member name="invalid_index" c:identifier="FRIDA_FRUITY_PLIST_ERROR_INVALID_INDEX" value="2"/>
		<member name="type_mismatch" c:identifier="FRIDA_FRUITY_PLIST_ERROR_TYPE_MISMATCH" value="3"/>
	</enumeration>
	<enumeration name="FruityPlistServiceError" c:type="FridaFruityPlistServiceError" glib:type-name="FridaFruityPlistServiceError" glib:get-type="frida_fruity_plist_service_error_get_type" glib:error-domain="frida-fruity-plist-service-error-quark">
		<member name="connection_closed" c:identifier="FRIDA_FRUITY_PLIST_SERVICE_ERROR_CONNECTION_CLOSED" value="0"/>
		<member name="protocol" c:identifier="FRIDA_FRUITY_PLIST_SERVICE_ERROR_PROTOCOL" value="1"/>
	</enumeration>
	<class name="FruityDeviceInfoService" c:type="FridaFruityDeviceInfoService" c:symbol-prefix="device_info_service" glib:type-name="FridaFruityDeviceInfoService" glib:get-type="frida_fruity_device_info_service_get_type" glib:type-struct="FruityDeviceInfoServiceClass" parent="GObject.Object">
		<implements name="Gio.AsyncInitable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityDeviceInfoServicePrivate" c:type="FridaFruityDeviceInfoServicePrivate*"/>
		</field>
		<function name="open" c:identifier="frida_fruity_device_info_service_open">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="channel_provider" transfer-ownership="none">
					<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="open_finish" c:identifier="frida_fruity_device_info_service_open_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.DeviceInfoService" c:type="FridaFruityDeviceInfoService*"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<method name="enumerate_processes" c:identifier="frida_fruity_device_info_service_enumerate_processes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DeviceInfoService" c:type="FridaFruityDeviceInfoService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_processes_finish" c:identifier="frida_fruity_device_info_service_enumerate_processes_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="FridaFruity.ProcessInfo" c:type="FridaFruityProcessInfo*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DeviceInfoService" c:type="FridaFruityDeviceInfoService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="channel-provider" writable="1" construct-only="1">
			<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
		</property>
		<method name="get_channel_provider" c:identifier="frida_fruity_device_info_service_get_channel_provider">
			<return-value transfer-ownership="none">
				<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DeviceInfoService" c:type="FridaFruityDeviceInfoService*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityDeviceInfoServiceClass" c:type="FridaFruityDeviceInfoServiceClass" glib:is-gtype-struct-for="FruityDeviceInfoService">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityDeviceInfoServicePrivate" c:type="FridaFruityDeviceInfoServicePrivate" disguised="1"/>
	<class name="FruityApplicationListingService" c:type="FridaFruityApplicationListingService" c:symbol-prefix="application_listing_service" glib:type-name="FridaFruityApplicationListingService" glib:get-type="frida_fruity_application_listing_service_get_type" glib:type-struct="FruityApplicationListingServiceClass" parent="GObject.Object">
		<implements name="Gio.AsyncInitable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityApplicationListingServicePrivate" c:type="FridaFruityApplicationListingServicePrivate*"/>
		</field>
		<function name="open" c:identifier="frida_fruity_application_listing_service_open">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="channel_provider" transfer-ownership="none">
					<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="open_finish" c:identifier="frida_fruity_application_listing_service_open_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.ApplicationListingService" c:type="FridaFruityApplicationListingService*"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<method name="enumerate_applications" c:identifier="frida_fruity_application_listing_service_enumerate_applications">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationListingService" c:type="FridaFruityApplicationListingService*"/>
				</instance-parameter>
				<parameter name="query" transfer-ownership="none" nullable="1">
					<type name="FridaFruity.NSDictionary" c:type="FridaFruityNSDictionary*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_applications_finish" c:identifier="frida_fruity_application_listing_service_enumerate_applications_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationListingService" c:type="FridaFruityApplicationListingService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="channel-provider" writable="1" construct-only="1">
			<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
		</property>
		<method name="get_channel_provider" c:identifier="frida_fruity_application_listing_service_get_channel_provider">
			<return-value transfer-ownership="none">
				<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationListingService" c:type="FridaFruityApplicationListingService*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityApplicationListingServiceClass" c:type="FridaFruityApplicationListingServiceClass" glib:is-gtype-struct-for="FruityApplicationListingService">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityApplicationListingServicePrivate" c:type="FridaFruityApplicationListingServicePrivate" disguised="1"/>
	<class name="FruityProcessControlService" c:type="FridaFruityProcessControlService" c:symbol-prefix="process_control_service" glib:type-name="FridaFruityProcessControlService" glib:get-type="frida_fruity_process_control_service_get_type" glib:type-struct="FruityProcessControlServiceClass" parent="GObject.Object">
		<implements name="Gio.AsyncInitable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityProcessControlServicePrivate" c:type="FridaFruityProcessControlServicePrivate*"/>
		</field>
		<function name="open" c:identifier="frida_fruity_process_control_service_open">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="channel_provider" transfer-ownership="none">
					<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="open_finish" c:identifier="frida_fruity_process_control_service_open_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.ProcessControlService" c:type="FridaFruityProcessControlService*"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<method name="kill" c:identifier="frida_fruity_process_control_service_kill">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ProcessControlService" c:type="FridaFruityProcessControlService*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="kill_finish" c:identifier="frida_fruity_process_control_service_kill_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ProcessControlService" c:type="FridaFruityProcessControlService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="channel-provider" writable="1" construct-only="1">
			<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
		</property>
		<method name="get_channel_provider" c:identifier="frida_fruity_process_control_service_get_channel_provider">
			<return-value transfer-ownership="none">
				<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ProcessControlService" c:type="FridaFruityProcessControlService*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityProcessControlServiceClass" c:type="FridaFruityProcessControlServiceClass" glib:is-gtype-struct-for="FruityProcessControlService">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityProcessControlServicePrivate" c:type="FridaFruityProcessControlServicePrivate" disguised="1"/>
	<class name="FruityProcessInfo" c:type="FridaFruityProcessInfo" c:symbol-prefix="process_info" glib:type-name="FridaFruityProcessInfo" glib:get-type="frida_fruity_process_info_get_type" glib:type-struct="FruityProcessInfoClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityProcessInfoPrivate" c:type="FridaFruityProcessInfoPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_process_info_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.ProcessInfo" c:type="FridaFruityProcessInfo*"/>
			</return-value>
		</constructor>
		<property name="pid" writable="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_pid" c:identifier="frida_fruity_process_info_get_pid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ProcessInfo" c:type="FridaFruityProcessInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_pid" c:identifier="frida_fruity_process_info_set_pid">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ProcessInfo" c:type="FridaFruityProcessInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="frida_fruity_process_info_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ProcessInfo" c:type="FridaFruityProcessInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_name" c:identifier="frida_fruity_process_info_set_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ProcessInfo" c:type="FridaFruityProcessInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="real-app-name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_real_app_name" c:identifier="frida_fruity_process_info_get_real_app_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ProcessInfo" c:type="FridaFruityProcessInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_real_app_name" c:identifier="frida_fruity_process_info_set_real_app_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ProcessInfo" c:type="FridaFruityProcessInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="is-application" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_application" c:identifier="frida_fruity_process_info_get_is_application">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ProcessInfo" c:type="FridaFruityProcessInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_is_application" c:identifier="frida_fruity_process_info_set_is_application">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ProcessInfo" c:type="FridaFruityProcessInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="foreground-running" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_foreground_running" c:identifier="frida_fruity_process_info_get_foreground_running">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ProcessInfo" c:type="FridaFruityProcessInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_foreground_running" c:identifier="frida_fruity_process_info_set_foreground_running">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ProcessInfo" c:type="FridaFruityProcessInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="start-date" writable="1">
			<type name="GLib.DateTime" c:type="GDateTime*"/>
		</property>
		<method name="get_start_date" c:identifier="frida_fruity_process_info_get_start_date">
			<return-value transfer-ownership="none" nullable="1">
				<type name="GLib.DateTime" c:type="GDateTime*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ProcessInfo" c:type="FridaFruityProcessInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_start_date" c:identifier="frida_fruity_process_info_set_start_date">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ProcessInfo" c:type="FridaFruityProcessInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="GLib.DateTime" c:type="GDateTime*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityProcessInfoClass" c:type="FridaFruityProcessInfoClass" glib:is-gtype-struct-for="FruityProcessInfo">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityProcessInfoPrivate" c:type="FridaFruityProcessInfoPrivate" disguised="1"/>
	<class name="FruityApplicationInfo" c:type="FridaFruityApplicationInfo" c:symbol-prefix="application_info" glib:type-name="FridaFruityApplicationInfo" glib:get-type="frida_fruity_application_info_get_type" glib:type-struct="FruityApplicationInfoClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityApplicationInfoPrivate" c:type="FridaFruityApplicationInfoPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_application_info_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
			</return-value>
		</constructor>
		<property name="app-type" writable="1">
			<type name="FridaFruity.ApplicationType" c:type="FridaFruityApplicationType"/>
		</property>
		<method name="get_app_type" c:identifier="frida_fruity_application_info_get_app_type">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.ApplicationType" c:type="FridaFruityApplicationType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_app_type" c:identifier="frida_fruity_application_info_set_app_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="FridaFruity.ApplicationType" c:type="FridaFruityApplicationType"/>
				</parameter>
			</parameters>
		</method>
		<property name="display-name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_display_name" c:identifier="frida_fruity_application_info_get_display_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_display_name" c:identifier="frida_fruity_application_info_set_display_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="bundle-identifier" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_bundle_identifier" c:identifier="frida_fruity_application_info_get_bundle_identifier">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_bundle_identifier" c:identifier="frida_fruity_application_info_set_bundle_identifier">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="bundle-path" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_bundle_path" c:identifier="frida_fruity_application_info_get_bundle_path">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_bundle_path" c:identifier="frida_fruity_application_info_set_bundle_path">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="version" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_version" c:identifier="frida_fruity_application_info_get_version">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_version" c:identifier="frida_fruity_application_info_set_version">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="placeholder" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_placeholder" c:identifier="frida_fruity_application_info_get_placeholder">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_placeholder" c:identifier="frida_fruity_application_info_set_placeholder">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="restricted" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_restricted" c:identifier="frida_fruity_application_info_get_restricted">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_restricted" c:identifier="frida_fruity_application_info_set_restricted">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="executable-name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_executable_name" c:identifier="frida_fruity_application_info_get_executable_name">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_executable_name" c:identifier="frida_fruity_application_info_set_executable_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="app-extension-uuids" writable="1">
			<array c:type="gchar**">
				<type name="utf8" c:type="gchar*"/>
			</array>
		</property>
		<method name="get_app_extension_uuids" c:identifier="frida_fruity_application_info_get_app_extension_uuids">
			<return-value transfer-ownership="none" nullable="1">
				<array length="0" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_app_extension_uuids" c:identifier="frida_fruity_application_info_set_app_extension_uuids">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<array length="1" c:type="gchar**">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="plugin-uuid" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_plugin_uuid" c:identifier="frida_fruity_application_info_get_plugin_uuid">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_plugin_uuid" c:identifier="frida_fruity_application_info_set_plugin_uuid">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="plugin-identifier" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_plugin_identifier" c:identifier="frida_fruity_application_info_get_plugin_identifier">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_plugin_identifier" c:identifier="frida_fruity_application_info_set_plugin_identifier">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="container-bundle-identifier" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_container_bundle_identifier" c:identifier="frida_fruity_application_info_get_container_bundle_identifier">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_container_bundle_identifier" c:identifier="frida_fruity_application_info_set_container_bundle_identifier">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="container-bundle-path" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_container_bundle_path" c:identifier="frida_fruity_application_info_get_container_bundle_path">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_container_bundle_path" c:identifier="frida_fruity_application_info_set_container_bundle_path">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationInfo" c:type="FridaFruityApplicationInfo*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityApplicationInfoClass" c:type="FridaFruityApplicationInfoClass" glib:is-gtype-struct-for="FruityApplicationInfo">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityApplicationInfoPrivate" c:type="FridaFruityApplicationInfoPrivate" disguised="1"/>
	<class name="FruityDTXConnection" c:type="FridaFruityDTXConnection" c:symbol-prefix="dtx_connection" glib:type-name="FridaFruityDTXConnection" glib:get-type="frida_fruity_dtx_connection_get_type" glib:type-struct="FruityDTXConnectionClass" parent="GObject.Object">
		<implements name="FridaFruity.DTXTransport"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityDTXConnectionPrivate" c:type="FridaFruityDTXConnectionPrivate*"/>
		</field>
		<function name="obtain" c:identifier="frida_fruity_dtx_connection_obtain">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="channel_provider" transfer-ownership="none">
					<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="obtain_finish" c:identifier="frida_fruity_dtx_connection_obtain_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.DTXConnection" c:type="FridaFruityDTXConnection*"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<function name="close_all" c:identifier="frida_fruity_dtx_connection_close_all">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="channel_provider" transfer-ownership="none">
					<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="close_all_finish" c:identifier="frida_fruity_dtx_connection_close_all_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<constructor name="new" c:identifier="frida_fruity_dtx_connection_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.DTXConnection" c:type="FridaFruityDTXConnection*"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.IOStream" c:type="GIOStream*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="make_channel" c:identifier="frida_fruity_dtx_connection_make_channel" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.DTXChannel" c:type="FridaFruityDTXChannel*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXConnection" c:type="FridaFruityDTXConnection*"/>
				</instance-parameter>
				<parameter name="identifier" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="stream" writable="1" construct-only="1">
			<type name="Gio.IOStream" c:type="GIOStream*"/>
		</property>
		<method name="get_stream" c:identifier="frida_fruity_dtx_connection_get_stream">
			<return-value transfer-ownership="none">
				<type name="Gio.IOStream" c:type="GIOStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXConnection" c:type="FridaFruityDTXConnection*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="state">
			<type name="Frida.FridaFruityDTXConnectionState" c:type="FridaFruityDTXConnectionState"/>
		</property>
		<method name="get_state" c:identifier="frida_fruity_dtx_connection_get_state">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaFruityDTXConnectionState" c:type="FridaFruityDTXConnectionState"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXConnection" c:type="FridaFruityDTXConnection*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityDTXConnectionClass" c:type="FridaFruityDTXConnectionClass" glib:is-gtype-struct-for="FruityDTXConnection">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityDTXConnectionPrivate" c:type="FridaFruityDTXConnectionPrivate" disguised="1"/>
	<enumeration name="FruityDTXConnectionState" c:type="FridaFruityDTXConnectionState" glib:type-name="FridaFruityDTXConnectionState" glib:get-type="frida_fruity_dtx_connection_state_get_type">
		<member name="open" c:identifier="FRIDA_FRUITY_DTX_CONNECTION_STATE_OPEN" value="0"/>
		<member name="closed" c:identifier="FRIDA_FRUITY_DTX_CONNECTION_STATE_CLOSED" value="1"/>
	</enumeration>
	<class name="FruityDTXChannel" c:type="FridaFruityDTXChannel" c:symbol-prefix="dtx_channel" glib:type-name="FridaFruityDTXChannel" glib:get-type="frida_fruity_dtx_channel_get_type" glib:type-struct="FruityDTXChannelClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityDTXChannelPrivate" c:type="FridaFruityDTXChannelPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_dtx_channel_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.DTXChannel" c:type="FridaFruityDTXChannel*"/>
			</return-value>
			<parameters>
				<parameter name="code" transfer-ownership="none">
					<type name="gint32" c:type="gint32"/>
				</parameter>
				<parameter name="transport" transfer-ownership="none">
					<type name="FridaFruity.DTXTransport" c:type="FridaFruityDTXTransport*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="invoke" c:identifier="frida_fruity_dtx_channel_invoke">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXChannel" c:type="FridaFruityDTXChannel*"/>
				</instance-parameter>
				<parameter name="method_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="args" transfer-ownership="none" nullable="1">
					<type name="FridaFruity.DTXArgumentListBuilder" c:type="FridaFruityDTXArgumentListBuilder*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="invoke_finish" c:identifier="frida_fruity_dtx_channel_invoke_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXChannel" c:type="FridaFruityDTXChannel*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="invoke_without_reply" c:identifier="frida_fruity_dtx_channel_invoke_without_reply" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXChannel" c:type="FridaFruityDTXChannel*"/>
				</instance-parameter>
				<parameter name="method_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="args" transfer-ownership="none" nullable="1">
					<type name="FridaFruity.DTXArgumentListBuilder" c:type="FridaFruityDTXArgumentListBuilder*"/>
				</parameter>
			</parameters>
		</method>
		<property name="code" writable="1" construct-only="1">
			<type name="gint32" c:type="gint32"/>
		</property>
		<method name="get_code" c:identifier="frida_fruity_dtx_channel_get_code">
			<return-value transfer-ownership="none">
				<type name="gint32" c:type="gint32"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXChannel" c:type="FridaFruityDTXChannel*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="transport" writable="1" construct-only="1">
			<type name="FridaFruity.DTXTransport" c:type="FridaFruityDTXTransport*"/>
		</property>
		<method name="get_transport" c:identifier="frida_fruity_dtx_channel_get_transport">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.DTXTransport" c:type="FridaFruityDTXTransport*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXChannel" c:type="FridaFruityDTXChannel*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="state">
			<type name="Frida.FridaFruityDTXChannelState" c:type="FridaFruityDTXChannelState"/>
		</property>
		<method name="get_state" c:identifier="frida_fruity_dtx_channel_get_state">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaFruityDTXChannelState" c:type="FridaFruityDTXChannelState"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXChannel" c:type="FridaFruityDTXChannel*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="invocation">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="method_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="args" transfer-ownership="none">
					<type name="FridaFruity.DTXArgumentList" c:type="FridaFruityDTXArgumentList*"/>
				</parameter>
				<parameter name="transport_flags" transfer-ownership="none">
					<type name="FridaFruity.DTXMessageTransportFlags" c:type="FridaFruityDTXMessageTransportFlags"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="notification">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="dict" transfer-ownership="none">
					<type name="FridaFruity.NSDictionary" c:type="FridaFruityNSDictionary*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="barrier">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</class>
	<record name="FruityDTXChannelClass" c:type="FridaFruityDTXChannelClass" glib:is-gtype-struct-for="FruityDTXChannel">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityDTXChannelPrivate" c:type="FridaFruityDTXChannelPrivate" disguised="1"/>
	<enumeration name="FruityDTXChannelState" c:type="FridaFruityDTXChannelState" glib:type-name="FridaFruityDTXChannelState" glib:get-type="frida_fruity_dtx_channel_state_get_type">
		<member name="open" c:identifier="FRIDA_FRUITY_DTX_CHANNEL_STATE_OPEN" value="0"/>
		<member name="closed" c:identifier="FRIDA_FRUITY_DTX_CHANNEL_STATE_CLOSED" value="1"/>
	</enumeration>
	<class name="FruityDTXArgumentList" c:type="FridaFruityDTXArgumentList" c:symbol-prefix="dtx_argument_list" glib:type-name="FridaFruityDTXArgumentList" glib:get-type="frida_fruity_dtx_argument_list_get_type" glib:type-struct="FruityDTXArgumentListClass" glib:fundamental="1" glib:ref-func="frida_fruity_dtx_argument_list_ref" glib:unref-func="frida_fruity_dtx_argument_list_unref" glib:set-value-func="frida_fruity_value_set_dtx_argument_list" glib:get-value-func="frida_fruity_value_get_dtx_argument_list">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityDTXArgumentListPrivate" c:type="FridaFruityDTXArgumentListPrivate*"/>
		</field>
		<function name="parse" c:identifier="frida_fruity_dtx_argument_list_parse" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.DTXArgumentList" c:type="FridaFruityDTXArgumentList*"/>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="none">
					<array length="1" c:type="guint8*">
						<type name="guint8" c:type="guint8"/>
					</array>
				</parameter>
				<parameter name="data_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</function>
	</class>
	<record name="FruityDTXArgumentListClass" c:type="FridaFruityDTXArgumentListClass" glib:is-gtype-struct-for="FruityDTXArgumentList">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="FruityDTXArgumentListPrivate" c:type="FridaFruityDTXArgumentListPrivate" disguised="1"/>
	<class name="FruityDTXArgumentListBuilder" c:type="FridaFruityDTXArgumentListBuilder" c:symbol-prefix="dtx_argument_list_builder" glib:type-name="FridaFruityDTXArgumentListBuilder" glib:get-type="frida_fruity_dtx_argument_list_builder_get_type" glib:type-struct="FruityDTXArgumentListBuilderClass" glib:fundamental="1" glib:ref-func="frida_fruity_dtx_argument_list_builder_ref" glib:unref-func="frida_fruity_dtx_argument_list_builder_unref" glib:set-value-func="frida_fruity_value_set_dtx_argument_list_builder" glib:get-value-func="frida_fruity_value_get_dtx_argument_list_builder">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityDTXArgumentListBuilderPrivate" c:type="FridaFruityDTXArgumentListBuilderPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_dtx_argument_list_builder_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.DTXArgumentListBuilder" c:type="FridaFruityDTXArgumentListBuilder*"/>
			</return-value>
		</constructor>
		<method name="append_string" c:identifier="frida_fruity_dtx_argument_list_builder_append_string">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.DTXArgumentListBuilder" c:type="FridaFruityDTXArgumentListBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXArgumentListBuilder" c:type="FridaFruityDTXArgumentListBuilder*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_object" c:identifier="frida_fruity_dtx_argument_list_builder_append_object">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.DTXArgumentListBuilder" c:type="FridaFruityDTXArgumentListBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXArgumentListBuilder" c:type="FridaFruityDTXArgumentListBuilder*"/>
				</instance-parameter>
				<parameter name="obj" transfer-ownership="none" nullable="1">
					<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_int32" c:identifier="frida_fruity_dtx_argument_list_builder_append_int32">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.DTXArgumentListBuilder" c:type="FridaFruityDTXArgumentListBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXArgumentListBuilder" c:type="FridaFruityDTXArgumentListBuilder*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gint32" c:type="gint32"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_int64" c:identifier="frida_fruity_dtx_argument_list_builder_append_int64">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.DTXArgumentListBuilder" c:type="FridaFruityDTXArgumentListBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXArgumentListBuilder" c:type="FridaFruityDTXArgumentListBuilder*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_double" c:identifier="frida_fruity_dtx_argument_list_builder_append_double">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.DTXArgumentListBuilder" c:type="FridaFruityDTXArgumentListBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXArgumentListBuilder" c:type="FridaFruityDTXArgumentListBuilder*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
		<method name="build" c:identifier="frida_fruity_dtx_argument_list_builder_build">
			<return-value transfer-ownership="full">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXArgumentListBuilder" c:type="FridaFruityDTXArgumentListBuilder*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityDTXArgumentListBuilderClass" c:type="FridaFruityDTXArgumentListBuilderClass" glib:is-gtype-struct-for="FruityDTXArgumentListBuilder">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="FruityDTXArgumentListBuilderPrivate" c:type="FridaFruityDTXArgumentListBuilderPrivate" disguised="1"/>
	<class name="FruityLockdownClient" c:type="FridaFruityLockdownClient" c:symbol-prefix="lockdown_client" glib:type-name="FridaFruityLockdownClient" glib:get-type="frida_fruity_lockdown_client_get_type" glib:type-struct="FruityLockdownClientClass" parent="GObject.Object">
		<implements name="Gio.AsyncInitable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityLockdownClientPrivate" c:type="FridaFruityLockdownClientPrivate*"/>
		</field>
		<function name="open" c:identifier="frida_fruity_lockdown_client_open">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="device_details" transfer-ownership="none">
					<type name="FridaFruity.DeviceDetails" c:type="FridaFruityDeviceDetails*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="open_finish" c:identifier="frida_fruity_lockdown_client_open_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<method name="close" c:identifier="frida_fruity_lockdown_client_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_fruity_lockdown_client_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="start_session" c:identifier="frida_fruity_lockdown_client_start_session">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="start_session_finish" c:identifier="frida_fruity_lockdown_client_start_session_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_value" c:identifier="frida_fruity_lockdown_client_get_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
				</instance-parameter>
				<parameter name="domain" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_value_finish" c:identifier="frida_fruity_lockdown_client_get_value_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.Plist" c:type="FridaFruityPlist*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="start_service" c:identifier="frida_fruity_lockdown_client_start_service">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
				</instance-parameter>
				<parameter name="name_with_options" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="start_service_finish" c:identifier="frida_fruity_lockdown_client_start_service_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.IOStream" c:type="GIOStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unpair" c:identifier="frida_fruity_lockdown_client_unpair">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unpair_finish" c:identifier="frida_fruity_lockdown_client_unpair_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="device-details" writable="1" construct-only="1">
			<type name="FridaFruity.DeviceDetails" c:type="FridaFruityDeviceDetails*"/>
		</property>
		<method name="get_device_details" c:identifier="frida_fruity_lockdown_client_get_device_details">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.DeviceDetails" c:type="FridaFruityDeviceDetails*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="stream">
			<type name="Gio.IOStream" c:type="GIOStream*"/>
		</property>
		<method name="get_stream" c:identifier="frida_fruity_lockdown_client_get_stream">
			<return-value transfer-ownership="none">
				<type name="Gio.IOStream" c:type="GIOStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="closed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</class>
	<record name="FruityLockdownClientClass" c:type="FridaFruityLockdownClientClass" glib:is-gtype-struct-for="FruityLockdownClient">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityLockdownClientPrivate" c:type="FridaFruityLockdownClientPrivate" disguised="1"/>
	<class name="FruityInstallationProxyClient" c:type="FridaFruityInstallationProxyClient" c:symbol-prefix="installation_proxy_client" glib:type-name="FridaFruityInstallationProxyClient" glib:get-type="frida_fruity_installation_proxy_client_get_type" glib:type-struct="FruityInstallationProxyClientClass" parent="GObject.Object">
		<implements name="Gio.AsyncInitable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityInstallationProxyClientPrivate" c:type="FridaFruityInstallationProxyClientPrivate*"/>
		</field>
		<function name="open" c:identifier="frida_fruity_installation_proxy_client_open">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="lockdown" transfer-ownership="none">
					<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="open_finish" c:identifier="frida_fruity_installation_proxy_client_open_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.InstallationProxyClient" c:type="FridaFruityInstallationProxyClient*"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<method name="close" c:identifier="frida_fruity_installation_proxy_client_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.InstallationProxyClient" c:type="FridaFruityInstallationProxyClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_fruity_installation_proxy_client_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.InstallationProxyClient" c:type="FridaFruityInstallationProxyClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="browse" c:identifier="frida_fruity_installation_proxy_client_browse">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.InstallationProxyClient" c:type="FridaFruityInstallationProxyClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="browse_finish" c:identifier="frida_fruity_installation_proxy_client_browse_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.ArrayList" c:type="GeeArrayList*">
					<type name="FridaFruity.ApplicationDetails" c:type="FridaFruityApplicationDetails*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.InstallationProxyClient" c:type="FridaFruityInstallationProxyClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="lookup" c:identifier="frida_fruity_installation_proxy_client_lookup">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.InstallationProxyClient" c:type="FridaFruityInstallationProxyClient*"/>
				</instance-parameter>
				<parameter name="query" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="lookup_finish" c:identifier="frida_fruity_installation_proxy_client_lookup_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.HashMap" c:type="GeeHashMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="FridaFruity.ApplicationDetails" c:type="FridaFruityApplicationDetails*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.InstallationProxyClient" c:type="FridaFruityInstallationProxyClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="lockdown" writable="1" construct-only="1">
			<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
		</property>
		<method name="get_lockdown" c:identifier="frida_fruity_installation_proxy_client_get_lockdown">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.InstallationProxyClient" c:type="FridaFruityInstallationProxyClient*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityInstallationProxyClientClass" c:type="FridaFruityInstallationProxyClientClass" glib:is-gtype-struct-for="FruityInstallationProxyClient">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityInstallationProxyClientPrivate" c:type="FridaFruityInstallationProxyClientPrivate" disguised="1"/>
	<class name="FruityApplicationDetails" c:type="FridaFruityApplicationDetails" c:symbol-prefix="application_details" glib:type-name="FridaFruityApplicationDetails" glib:get-type="frida_fruity_application_details_get_type" glib:type-struct="FruityApplicationDetailsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityApplicationDetailsPrivate" c:type="FridaFruityApplicationDetailsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_application_details_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.ApplicationDetails" c:type="FridaFruityApplicationDetails*"/>
			</return-value>
			<parameters>
				<parameter name="identifier" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="version" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="build" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="containers" transfer-ownership="none">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="utf8" c:type="gchar*"/>
					</type>
				</parameter>
				<parameter name="debuggable" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="identifier" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_identifier" c:identifier="frida_fruity_application_details_get_identifier">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationDetails" c:type="FridaFruityApplicationDetails*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="name" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="frida_fruity_application_details_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationDetails" c:type="FridaFruityApplicationDetails*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="version" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_version" c:identifier="frida_fruity_application_details_get_version">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationDetails" c:type="FridaFruityApplicationDetails*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="build" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_build" c:identifier="frida_fruity_application_details_get_build">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationDetails" c:type="FridaFruityApplicationDetails*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="path" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_path" c:identifier="frida_fruity_application_details_get_path">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationDetails" c:type="FridaFruityApplicationDetails*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="containers" writable="1" construct-only="1">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="utf8" c:type="gchar*"/>
			</type>
		</property>
		<method name="get_containers" c:identifier="frida_fruity_application_details_get_containers">
			<return-value transfer-ownership="none">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationDetails" c:type="FridaFruityApplicationDetails*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="debuggable" writable="1" construct-only="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_debuggable" c:identifier="frida_fruity_application_details_get_debuggable">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.ApplicationDetails" c:type="FridaFruityApplicationDetails*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityApplicationDetailsClass" c:type="FridaFruityApplicationDetailsClass" glib:is-gtype-struct-for="FruityApplicationDetails">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityApplicationDetailsPrivate" c:type="FridaFruityApplicationDetailsPrivate" disguised="1"/>
	<class name="FruitySpringboardServicesClient" c:type="FridaFruitySpringboardServicesClient" c:symbol-prefix="springboard_services_client" glib:type-name="FridaFruitySpringboardServicesClient" glib:get-type="frida_fruity_springboard_services_client_get_type" glib:type-struct="FruitySpringboardServicesClientClass" parent="GObject.Object">
		<implements name="Gio.AsyncInitable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruitySpringboardServicesClientPrivate" c:type="FridaFruitySpringboardServicesClientPrivate*"/>
		</field>
		<function name="open" c:identifier="frida_fruity_springboard_services_client_open">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="lockdown" transfer-ownership="none">
					<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="open_finish" c:identifier="frida_fruity_springboard_services_client_open_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.SpringboardServicesClient" c:type="FridaFruitySpringboardServicesClient*"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<method name="close" c:identifier="frida_fruity_springboard_services_client_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.SpringboardServicesClient" c:type="FridaFruitySpringboardServicesClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_fruity_springboard_services_client_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.SpringboardServicesClient" c:type="FridaFruitySpringboardServicesClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_icon_png_data" c:identifier="frida_fruity_springboard_services_client_get_icon_png_data">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.SpringboardServicesClient" c:type="FridaFruitySpringboardServicesClient*"/>
				</instance-parameter>
				<parameter name="bundle_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_icon_png_data_finish" c:identifier="frida_fruity_springboard_services_client_get_icon_png_data_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.SpringboardServicesClient" c:type="FridaFruitySpringboardServicesClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_icon_png_data_batch" c:identifier="frida_fruity_springboard_services_client_get_icon_png_data_batch">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.SpringboardServicesClient" c:type="FridaFruitySpringboardServicesClient*"/>
				</instance-parameter>
				<parameter name="bundle_ids" transfer-ownership="none">
					<array length="1" c:type="gchar**">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="bundle_ids_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_icon_png_data_batch_finish" c:identifier="frida_fruity_springboard_services_client_get_icon_png_data_batch_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.HashMap" c:type="GeeHashMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.SpringboardServicesClient" c:type="FridaFruitySpringboardServicesClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="lockdown" writable="1" construct-only="1">
			<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
		</property>
		<method name="get_lockdown" c:identifier="frida_fruity_springboard_services_client_get_lockdown">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.SpringboardServicesClient" c:type="FridaFruitySpringboardServicesClient*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruitySpringboardServicesClientClass" c:type="FridaFruitySpringboardServicesClientClass" glib:is-gtype-struct-for="FruitySpringboardServicesClient">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruitySpringboardServicesClientPrivate" c:type="FridaFruitySpringboardServicesClientPrivate" disguised="1"/>
	<class name="FruityUsbmuxClient" c:type="FridaFruityUsbmuxClient" c:symbol-prefix="usbmux_client" glib:type-name="FridaFruityUsbmuxClient" glib:get-type="frida_fruity_usbmux_client_get_type" glib:type-struct="FruityUsbmuxClientClass" parent="GObject.Object">
		<implements name="Gio.AsyncInitable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityUsbmuxClientPrivate" c:type="FridaFruityUsbmuxClientPrivate*"/>
		</field>
		<function name="open" c:identifier="frida_fruity_usbmux_client_open">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="open_finish" c:identifier="frida_fruity_usbmux_client_open_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.UsbmuxClient" c:type="FridaFruityUsbmuxClient*"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<method name="close" c:identifier="frida_fruity_usbmux_client_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.UsbmuxClient" c:type="FridaFruityUsbmuxClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_fruity_usbmux_client_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.UsbmuxClient" c:type="FridaFruityUsbmuxClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_listen_mode" c:identifier="frida_fruity_usbmux_client_enable_listen_mode">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.UsbmuxClient" c:type="FridaFruityUsbmuxClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_listen_mode_finish" c:identifier="frida_fruity_usbmux_client_enable_listen_mode_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.UsbmuxClient" c:type="FridaFruityUsbmuxClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="connect_to_port" c:identifier="frida_fruity_usbmux_client_connect_to_port">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.UsbmuxClient" c:type="FridaFruityUsbmuxClient*"/>
				</instance-parameter>
				<parameter name="device_id" transfer-ownership="none">
					<type name="FridaFruity.DeviceId" c:type="FridaFruityDeviceId"/>
				</parameter>
				<parameter name="port" transfer-ownership="none">
					<type name="guint16" c:type="guint16"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="connect_to_port_finish" c:identifier="frida_fruity_usbmux_client_connect_to_port_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.UsbmuxClient" c:type="FridaFruityUsbmuxClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_pair_record" c:identifier="frida_fruity_usbmux_client_read_pair_record">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.UsbmuxClient" c:type="FridaFruityUsbmuxClient*"/>
				</instance-parameter>
				<parameter name="udid" transfer-ownership="none">
					<type name="FridaFruity.Udid" c:type="FridaFruityUdid"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_pair_record_finish" c:identifier="frida_fruity_usbmux_client_read_pair_record_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.Plist" c:type="FridaFruityPlist*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.UsbmuxClient" c:type="FridaFruityUsbmuxClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="delete_pair_record" c:identifier="frida_fruity_usbmux_client_delete_pair_record">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.UsbmuxClient" c:type="FridaFruityUsbmuxClient*"/>
				</instance-parameter>
				<parameter name="udid" transfer-ownership="none">
					<type name="FridaFruity.Udid" c:type="FridaFruityUdid"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="delete_pair_record_finish" c:identifier="frida_fruity_usbmux_client_delete_pair_record_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.UsbmuxClient" c:type="FridaFruityUsbmuxClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_fruity_usbmux_client_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.UsbmuxClient" c:type="FridaFruityUsbmuxClient*"/>
			</return-value>
		</constructor>
		<property name="connection" writable="1">
			<type name="Gio.SocketConnection" c:type="GSocketConnection*"/>
		</property>
		<method name="get_connection" c:identifier="frida_fruity_usbmux_client_get_connection">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Gio.SocketConnection" c:type="GSocketConnection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.UsbmuxClient" c:type="FridaFruityUsbmuxClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="device-attached">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="details" transfer-ownership="none">
					<type name="FridaFruity.DeviceDetails" c:type="FridaFruityDeviceDetails*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="device-detached">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="id" transfer-ownership="none">
					<type name="FridaFruity.DeviceId" c:type="FridaFruityDeviceId"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="FruityUsbmuxClientClass" c:type="FridaFruityUsbmuxClientClass" glib:is-gtype-struct-for="FruityUsbmuxClient">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityUsbmuxClientPrivate" c:type="FridaFruityUsbmuxClientPrivate" disguised="1"/>
	<class name="FruityDeviceDetails" c:type="FridaFruityDeviceDetails" c:symbol-prefix="device_details" glib:type-name="FridaFruityDeviceDetails" glib:get-type="frida_fruity_device_details_get_type" glib:type-struct="FruityDeviceDetailsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityDeviceDetailsPrivate" c:type="FridaFruityDeviceDetailsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_device_details_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.DeviceDetails" c:type="FridaFruityDeviceDetails*"/>
			</return-value>
			<parameters>
				<parameter name="connection_type" transfer-ownership="none">
					<type name="FridaFruity.ConnectionType" c:type="FridaFruityConnectionType"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="FridaFruity.DeviceId" c:type="FridaFruityDeviceId"/>
				</parameter>
				<parameter name="product_id" transfer-ownership="none">
					<type name="FridaFruity.ProductId" c:type="FridaFruityProductId"/>
				</parameter>
				<parameter name="udid" transfer-ownership="none">
					<type name="FridaFruity.Udid" c:type="FridaFruityUdid"/>
				</parameter>
				<parameter name="network_address" transfer-ownership="none" nullable="1">
					<type name="Gio.InetSocketAddress" c:type="GInetSocketAddress*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="connection-type" writable="1" construct-only="1">
			<type name="FridaFruity.ConnectionType" c:type="FridaFruityConnectionType"/>
		</property>
		<method name="get_connection_type" c:identifier="frida_fruity_device_details_get_connection_type">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.ConnectionType" c:type="FridaFruityConnectionType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DeviceDetails" c:type="FridaFruityDeviceDetails*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="id" writable="1" construct-only="1">
			<type name="FridaFruity.DeviceId" c:type="FridaFruityDeviceId"/>
		</property>
		<method name="get_id" c:identifier="frida_fruity_device_details_get_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DeviceDetails" c:type="FridaFruityDeviceDetails*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaFruity.DeviceId" c:type="FridaFruityDeviceId*"/>
				</parameter>
			</parameters>
		</method>
		<property name="product-id" writable="1" construct-only="1">
			<type name="FridaFruity.ProductId" c:type="FridaFruityProductId"/>
		</property>
		<method name="get_product_id" c:identifier="frida_fruity_device_details_get_product_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DeviceDetails" c:type="FridaFruityDeviceDetails*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaFruity.ProductId" c:type="FridaFruityProductId*"/>
				</parameter>
			</parameters>
		</method>
		<property name="udid" writable="1" construct-only="1">
			<type name="FridaFruity.Udid" c:type="FridaFruityUdid"/>
		</property>
		<method name="get_udid" c:identifier="frida_fruity_device_details_get_udid">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DeviceDetails" c:type="FridaFruityDeviceDetails*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaFruity.Udid" c:type="FridaFruityUdid*"/>
				</parameter>
			</parameters>
		</method>
		<property name="network-address" writable="1" construct-only="1">
			<type name="Gio.InetSocketAddress" c:type="GInetSocketAddress*"/>
		</property>
		<method name="get_network_address" c:identifier="frida_fruity_device_details_get_network_address">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Gio.InetSocketAddress" c:type="GInetSocketAddress*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DeviceDetails" c:type="FridaFruityDeviceDetails*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityDeviceDetailsClass" c:type="FridaFruityDeviceDetailsClass" glib:is-gtype-struct-for="FruityDeviceDetails">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityDeviceDetailsPrivate" c:type="FridaFruityDeviceDetailsPrivate" disguised="1"/>
	<class name="FruityNSObject" c:type="FridaFruityNSObject" c:symbol-prefix="ns_object" glib:type-name="FridaFruityNSObject" glib:get-type="frida_fruity_ns_object_get_type" glib:type-struct="FruityNSObjectClass" glib:fundamental="1" glib:ref-func="frida_fruity_ns_object_ref" glib:unref-func="frida_fruity_ns_object_unref" glib:set-value-func="frida_fruity_value_set_ns_object" glib:get-value-func="frida_fruity_value_get_ns_object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityNSObjectPrivate" c:type="FridaFruityNSObjectPrivate*"/>
		</field>
		<method name="hash" c:identifier="frida_fruity_ns_object_hash">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="hash" invoker="hash">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="is_equal_to" c:identifier="frida_fruity_ns_object_is_equal_to">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
				</instance-parameter>
				<parameter name="other" transfer-ownership="none">
					<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="is_equal_to" invoker="is_equal_to">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
				</instance-parameter>
				<parameter name="other" transfer-ownership="none">
					<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="to_string" c:identifier="frida_fruity_ns_object_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<function name="hash_func" c:identifier="frida_fruity_ns_object_hash_func">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
				</parameter>
			</parameters>
		</function>
		<function name="equal_func" c:identifier="frida_fruity_ns_object_equal_func">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="a" transfer-ownership="none">
					<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
				</parameter>
				<parameter name="b" transfer-ownership="none">
					<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
				</parameter>
			</parameters>
		</function>
		<constructor name="new" c:identifier="frida_fruity_ns_object_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
			</return-value>
		</constructor>
	</class>
	<record name="FruityNSObjectClass" c:type="FridaFruityNSObjectClass" glib:is-gtype-struct-for="FruityNSObject">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
		<field name="hash">
			<callback name="hash" c:type="hash">
				<return-value transfer-ownership="full">
					<type name="guint" c:type="guint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="is_equal_to">
			<callback name="is_equal_to" c:type="is_equal_to">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
					</parameter>
					<parameter name="other" transfer-ownership="none">
						<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="FruityNSObjectPrivate" c:type="FridaFruityNSObjectPrivate" disguised="1"/>
	<class name="FruityNSNumber" c:type="FridaFruityNSNumber" c:symbol-prefix="ns_number" glib:type-name="FridaFruityNSNumber" glib:get-type="frida_fruity_ns_number_get_type" glib:type-struct="FruityNSNumberClass" parent="FridaFruity.NSObject">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityNSNumberPrivate" c:type="FridaFruityNSNumberPrivate*"/>
		</field>
		<constructor name="from_boolean" c:identifier="frida_fruity_ns_number_new_from_boolean">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.NSNumber" c:type="FridaFruityNSNumber*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_integer" c:identifier="frida_fruity_ns_number_new_from_integer">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.NSNumber" c:type="FridaFruityNSNumber*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="new" c:identifier="frida_fruity_ns_number_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.NSNumber" c:type="FridaFruityNSNumber*"/>
			</return-value>
		</constructor>
		<method name="get_boolean" c:identifier="frida_fruity_ns_number_get_boolean">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSNumber" c:type="FridaFruityNSNumber*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_integer" c:identifier="frida_fruity_ns_number_get_integer">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSNumber" c:type="FridaFruityNSNumber*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityNSNumberClass" c:type="FridaFruityNSNumberClass" glib:is-gtype-struct-for="FruityNSNumber">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaFruity.NSObjectClass" c:type="FridaFruityNSObjectClass"/>
		</field>
	</record>
	<record name="FruityNSNumberPrivate" c:type="FridaFruityNSNumberPrivate" disguised="1"/>
	<class name="FruityNSString" c:type="FridaFruityNSString" c:symbol-prefix="ns_string" glib:type-name="FridaFruityNSString" glib:get-type="frida_fruity_ns_string_get_type" glib:type-struct="FruityNSStringClass" parent="FridaFruity.NSObject">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityNSStringPrivate" c:type="FridaFruityNSStringPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_ns_string_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.NSString" c:type="FridaFruityNSString*"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_str" c:identifier="frida_fruity_ns_string_get_str">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSString" c:type="FridaFruityNSString*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityNSStringClass" c:type="FridaFruityNSStringClass" glib:is-gtype-struct-for="FruityNSString">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaFruity.NSObjectClass" c:type="FridaFruityNSObjectClass"/>
		</field>
	</record>
	<record name="FruityNSStringPrivate" c:type="FridaFruityNSStringPrivate" disguised="1"/>
	<class name="FruityNSDictionary" c:type="FridaFruityNSDictionary" c:symbol-prefix="ns_dictionary" glib:type-name="FridaFruityNSDictionary" glib:get-type="frida_fruity_ns_dictionary_get_type" glib:type-struct="FruityNSDictionaryClass" parent="FridaFruity.NSObject">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityNSDictionaryPrivate" c:type="FridaFruityNSDictionaryPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_ns_dictionary_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.NSDictionary" c:type="FridaFruityNSDictionary*"/>
			</return-value>
			<parameters>
				<parameter name="storage" transfer-ownership="none" nullable="1">
					<type name="Gee.HashMap" c:type="GeeHashMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
					</type>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_value" c:identifier="frida_fruity_ns_dictionary_get_value" throws="1">
			<return-value transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSDictionary" c:type="FridaFruityNSDictionary*"/>
				</instance-parameter>
				<parameter name="t_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="t_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="t_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_optional_value" c:identifier="frida_fruity_ns_dictionary_get_optional_value" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSDictionary" c:type="FridaFruityNSDictionary*"/>
				</instance-parameter>
				<parameter name="t_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="t_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="t_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" direction="out" transfer-ownership="none" optional="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_value" c:identifier="frida_fruity_ns_dictionary_set_value">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSDictionary" c:type="FridaFruityNSDictionary*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_size" c:identifier="frida_fruity_ns_dictionary_get_size">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSDictionary" c:type="FridaFruityNSDictionary*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_entries" c:identifier="frida_fruity_ns_dictionary_get_entries">
			<return-value transfer-ownership="full">
				<type name="Gee.Set" c:type="GeeSet*">
					<type name="Gee.MapEntry" c:type="GeeMapEntry*">
						<type name="utf8" c:type="gchar*"/>
						<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
					</type>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSDictionary" c:type="FridaFruityNSDictionary*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_keys" c:identifier="frida_fruity_ns_dictionary_get_keys">
			<return-value transfer-ownership="full">
				<type name="Gee.Iterable" c:type="GeeIterable*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSDictionary" c:type="FridaFruityNSDictionary*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_values" c:identifier="frida_fruity_ns_dictionary_get_values">
			<return-value transfer-ownership="full">
				<type name="Gee.Iterable" c:type="GeeIterable*">
					<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSDictionary" c:type="FridaFruityNSDictionary*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityNSDictionaryClass" c:type="FridaFruityNSDictionaryClass" glib:is-gtype-struct-for="FruityNSDictionary">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaFruity.NSObjectClass" c:type="FridaFruityNSObjectClass"/>
		</field>
	</record>
	<record name="FruityNSDictionaryPrivate" c:type="FridaFruityNSDictionaryPrivate" disguised="1"/>
	<class name="FruityNSDictionaryRaw" c:type="FridaFruityNSDictionaryRaw" c:symbol-prefix="ns_dictionary_raw" glib:type-name="FridaFruityNSDictionaryRaw" glib:get-type="frida_fruity_ns_dictionary_raw_get_type" glib:type-struct="FruityNSDictionaryRawClass" parent="FridaFruity.NSObject">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityNSDictionaryRawPrivate" c:type="FridaFruityNSDictionaryRawPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_ns_dictionary_raw_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.NSDictionaryRaw" c:type="FridaFruityNSDictionaryRaw*"/>
			</return-value>
			<parameters>
				<parameter name="storage" transfer-ownership="none" nullable="1">
					<type name="Gee.HashMap" c:type="GeeHashMap*">
						<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
						<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
					</type>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_size" c:identifier="frida_fruity_ns_dictionary_raw_get_size">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSDictionaryRaw" c:type="FridaFruityNSDictionaryRaw*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_entries" c:identifier="frida_fruity_ns_dictionary_raw_get_entries">
			<return-value transfer-ownership="full">
				<type name="Gee.Set" c:type="GeeSet*">
					<type name="Gee.MapEntry" c:type="GeeMapEntry*">
						<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
						<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
					</type>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSDictionaryRaw" c:type="FridaFruityNSDictionaryRaw*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_keys" c:identifier="frida_fruity_ns_dictionary_raw_get_keys">
			<return-value transfer-ownership="full">
				<type name="Gee.Iterable" c:type="GeeIterable*">
					<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSDictionaryRaw" c:type="FridaFruityNSDictionaryRaw*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_values" c:identifier="frida_fruity_ns_dictionary_raw_get_values">
			<return-value transfer-ownership="full">
				<type name="Gee.Iterable" c:type="GeeIterable*">
					<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSDictionaryRaw" c:type="FridaFruityNSDictionaryRaw*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityNSDictionaryRawClass" c:type="FridaFruityNSDictionaryRawClass" glib:is-gtype-struct-for="FruityNSDictionaryRaw">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaFruity.NSObjectClass" c:type="FridaFruityNSObjectClass"/>
		</field>
	</record>
	<record name="FruityNSDictionaryRawPrivate" c:type="FridaFruityNSDictionaryRawPrivate" disguised="1"/>
	<class name="FruityNSArray" c:type="FridaFruityNSArray" c:symbol-prefix="ns_array" glib:type-name="FridaFruityNSArray" glib:get-type="frida_fruity_ns_array_get_type" glib:type-struct="FruityNSArrayClass" parent="FridaFruity.NSObject">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityNSArrayPrivate" c:type="FridaFruityNSArrayPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_ns_array_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.NSArray" c:type="FridaFruityNSArray*"/>
			</return-value>
			<parameters>
				<parameter name="storage" transfer-ownership="none" nullable="1">
					<type name="Gee.ArrayList" c:type="GeeArrayList*">
						<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
					</type>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_length" c:identifier="frida_fruity_ns_array_get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSArray" c:type="FridaFruityNSArray*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_elements" c:identifier="frida_fruity_ns_array_get_elements">
			<return-value transfer-ownership="full">
				<type name="Gee.Iterable" c:type="GeeIterable*">
					<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSArray" c:type="FridaFruityNSArray*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityNSArrayClass" c:type="FridaFruityNSArrayClass" glib:is-gtype-struct-for="FruityNSArray">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaFruity.NSObjectClass" c:type="FridaFruityNSObjectClass"/>
		</field>
	</record>
	<record name="FruityNSArrayPrivate" c:type="FridaFruityNSArrayPrivate" disguised="1"/>
	<class name="FruityNSDate" c:type="FridaFruityNSDate" c:symbol-prefix="ns_date" glib:type-name="FridaFruityNSDate" glib:get-type="frida_fruity_ns_date_get_type" glib:type-struct="FruityNSDateClass" parent="FridaFruity.NSObject">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityNSDatePrivate" c:type="FridaFruityNSDatePrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_ns_date_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.NSDate" c:type="FridaFruityNSDate*"/>
			</return-value>
			<parameters>
				<parameter name="time" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="to_date_time" c:identifier="frida_fruity_ns_date_to_date_time">
			<return-value transfer-ownership="full">
				<type name="GLib.DateTime" c:type="GDateTime*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSDate" c:type="FridaFruityNSDate*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_time" c:identifier="frida_fruity_ns_date_get_time">
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSDate" c:type="FridaFruityNSDate*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityNSDateClass" c:type="FridaFruityNSDateClass" glib:is-gtype-struct-for="FruityNSDate">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaFruity.NSObjectClass" c:type="FridaFruityNSObjectClass"/>
		</field>
	</record>
	<record name="FruityNSDatePrivate" c:type="FridaFruityNSDatePrivate" disguised="1"/>
	<class name="FruityNSError" c:type="FridaFruityNSError" c:symbol-prefix="ns_error" glib:type-name="FridaFruityNSError" glib:get-type="frida_fruity_ns_error_get_type" glib:type-struct="FruityNSErrorClass" parent="FridaFruity.NSObject">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaFruity.NSObject" c:type="FridaFruityNSObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityNSErrorPrivate" c:type="FridaFruityNSErrorPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_ns_error_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.NSError" c:type="FridaFruityNSError*"/>
			</return-value>
			<parameters>
				<parameter name="domain" transfer-ownership="none">
					<type name="FridaFruity.NSString" c:type="FridaFruityNSString*"/>
				</parameter>
				<parameter name="code" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
				<parameter name="user_info" transfer-ownership="none">
					<type name="FridaFruity.NSDictionary" c:type="FridaFruityNSDictionary*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_domain" c:identifier="frida_fruity_ns_error_get_domain">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.NSString" c:type="FridaFruityNSString*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSError" c:type="FridaFruityNSError*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_code" c:identifier="frida_fruity_ns_error_get_code">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSError" c:type="FridaFruityNSError*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_user_info" c:identifier="frida_fruity_ns_error_get_user_info">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.NSDictionary" c:type="FridaFruityNSDictionary*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.NSError" c:type="FridaFruityNSError*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityNSErrorClass" c:type="FridaFruityNSErrorClass" glib:is-gtype-struct-for="FruityNSError">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaFruity.NSObjectClass" c:type="FridaFruityNSObjectClass"/>
		</field>
	</record>
	<record name="FruityNSErrorPrivate" c:type="FridaFruityNSErrorPrivate" disguised="1"/>
	<class name="FruityPlist" c:type="FridaFruityPlist" c:symbol-prefix="plist" glib:type-name="FridaFruityPlist" glib:get-type="frida_fruity_plist_get_type" glib:type-struct="FruityPlistClass" parent="FridaFruity.PlistDict">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityPlistPrivate" c:type="FridaFruityPlistPrivate*"/>
		</field>
		<constructor name="from_binary" c:identifier="frida_fruity_plist_new_from_binary" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.Plist" c:type="FridaFruityPlist*"/>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="none">
					<array length="1" c:type="guint8*">
						<type name="guint8" c:type="guint8"/>
					</array>
				</parameter>
				<parameter name="data_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_xml" c:identifier="frida_fruity_plist_new_from_xml" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.Plist" c:type="FridaFruityPlist*"/>
			</return-value>
			<parameters>
				<parameter name="xml" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_data" c:identifier="frida_fruity_plist_new_from_data" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.Plist" c:type="FridaFruityPlist*"/>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="none">
					<array length="1" c:type="guint8*">
						<type name="guint8" c:type="guint8"/>
					</array>
				</parameter>
				<parameter name="data_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="format" transfer-ownership="none">
					<type name="Frida.FridaFruityPlistFormat" c:type="FridaFruityPlistFormat"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="to_binary" c:identifier="frida_fruity_plist_to_binary">
			<return-value transfer-ownership="full">
				<array length="0" c:type="guint8*">
					<type name="guint8" c:type="guint8"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.Plist" c:type="FridaFruityPlist*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_xml" c:identifier="frida_fruity_plist_to_xml">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.Plist" c:type="FridaFruityPlist*"/>
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_fruity_plist_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.Plist" c:type="FridaFruityPlist*"/>
			</return-value>
		</constructor>
	</class>
	<record name="FruityPlistClass" c:type="FridaFruityPlistClass" glib:is-gtype-struct-for="FruityPlist">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaFruity.PlistDictClass" c:type="FridaFruityPlistDictClass"/>
		</field>
	</record>
	<record name="FruityPlistPrivate" c:type="FridaFruityPlistPrivate" disguised="1"/>
	<enumeration name="FruityPlistFormat" c:type="FridaFruityPlistFormat" glib:type-name="FridaFruityPlistFormat" glib:get-type="frida_fruity_plist_format_get_type">
		<member name="auto" c:identifier="FRIDA_FRUITY_PLIST_FORMAT_AUTO" value="0"/>
		<member name="binary" c:identifier="FRIDA_FRUITY_PLIST_FORMAT_BINARY" value="1"/>
		<member name="xml" c:identifier="FRIDA_FRUITY_PLIST_FORMAT_XML" value="2"/>
	</enumeration>
	<class name="FruityPlistDict" c:type="FridaFruityPlistDict" c:symbol-prefix="plist_dict" glib:type-name="FridaFruityPlistDict" glib:get-type="frida_fruity_plist_dict_get_type" glib:type-struct="FruityPlistDictClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityPlistDictPrivate" c:type="FridaFruityPlistDictPrivate*"/>
		</field>
		<method name="clone" c:identifier="frida_fruity_plist_dict_clone">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="clear" c:identifier="frida_fruity_plist_dict_clear">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="remove" c:identifier="frida_fruity_plist_dict_remove">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="has" c:identifier="frida_fruity_plist_dict_has">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_boolean" c:identifier="frida_fruity_plist_dict_get_boolean" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_boolean" c:identifier="frida_fruity_plist_dict_set_boolean">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_integer" c:identifier="frida_fruity_plist_dict_get_integer" throws="1">
			<return-value transfer-ownership="full">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_integer" c:identifier="frida_fruity_plist_dict_set_integer">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_float" c:identifier="frida_fruity_plist_dict_get_float" throws="1">
			<return-value transfer-ownership="full">
				<type name="gfloat" c:type="gfloat"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_float" c:identifier="frida_fruity_plist_dict_set_float">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gfloat" c:type="gfloat"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_double" c:identifier="frida_fruity_plist_dict_get_double" throws="1">
			<return-value transfer-ownership="full">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_double" c:identifier="frida_fruity_plist_dict_set_double">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_string" c:identifier="frida_fruity_plist_dict_get_string" throws="1">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_string" c:identifier="frida_fruity_plist_dict_set_string">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_bytes" c:identifier="frida_fruity_plist_dict_get_bytes" throws="1">
			<return-value transfer-ownership="none">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_bytes_as_string" c:identifier="frida_fruity_plist_dict_get_bytes_as_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_bytes" c:identifier="frida_fruity_plist_dict_set_bytes">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_dict" c:identifier="frida_fruity_plist_dict_get_dict" throws="1">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_dict" c:identifier="frida_fruity_plist_dict_set_dict">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="dict" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_array" c:identifier="frida_fruity_plist_dict_get_array" throws="1">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_array" c:identifier="frida_fruity_plist_dict_set_array">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="array" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_uid" c:identifier="frida_fruity_plist_dict_get_uid" throws="1">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.PlistUid" c:type="FridaFruityPlistUid*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_uid" c:identifier="frida_fruity_plist_dict_set_uid">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="uid" transfer-ownership="none">
					<type name="FridaFruity.PlistUid" c:type="FridaFruityPlistUid*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_value" c:identifier="frida_fruity_plist_dict_get_value" throws="1">
			<return-value transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="GValue*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="expected_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_value" c:identifier="frida_fruity_plist_dict_set_value">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="full" nullable="1">
					<type name="GObject.Value" c:type="GValue*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_raw_value" c:identifier="frida_fruity_plist_dict_set_raw_value">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="GValue*"/>
				</parameter>
			</parameters>
		</method>
		<method name="steal_all" c:identifier="frida_fruity_plist_dict_steal_all">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
				<parameter name="dict" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_fruity_plist_dict_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
			</return-value>
		</constructor>
		<property name="is-empty">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_empty" c:identifier="frida_fruity_plist_dict_get_is_empty">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="size">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_size" c:identifier="frida_fruity_plist_dict_get_size">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="entries">
			<type name="Gee.Set" c:type="GeeSet*">
				<type name="Gee.MapEntry" c:type="GeeMapEntry*">
					<type name="utf8" c:type="gchar*"/>
					<type name="gpointer" c:type="GValue*"/>
				</type>
			</type>
		</property>
		<method name="get_entries" c:identifier="frida_fruity_plist_dict_get_entries">
			<return-value transfer-ownership="full">
				<type name="Gee.Set" c:type="GeeSet*">
					<type name="Gee.MapEntry" c:type="GeeMapEntry*">
						<type name="utf8" c:type="gchar*"/>
						<type name="gpointer" c:type="GValue*"/>
					</type>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="keys">
			<type name="Gee.Iterable" c:type="GeeIterable*">
				<type name="utf8" c:type="gchar*"/>
			</type>
		</property>
		<method name="get_keys" c:identifier="frida_fruity_plist_dict_get_keys">
			<return-value transfer-ownership="full">
				<type name="Gee.Iterable" c:type="GeeIterable*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="values">
			<type name="Gee.Iterable" c:type="GeeIterable*">
				<type name="gpointer" c:type="GValue*"/>
			</type>
		</property>
		<method name="get_values" c:identifier="frida_fruity_plist_dict_get_values">
			<return-value transfer-ownership="container">
				<type name="Gee.Iterable" c:type="GeeIterable*">
					<type name="gpointer" c:type="GValue*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityPlistDictClass" c:type="FridaFruityPlistDictClass" glib:is-gtype-struct-for="FruityPlistDict">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityPlistDictPrivate" c:type="FridaFruityPlistDictPrivate" disguised="1"/>
	<class name="FruityPlistArray" c:type="FridaFruityPlistArray" c:symbol-prefix="plist_array" glib:type-name="FridaFruityPlistArray" glib:get-type="frida_fruity_plist_array_get_type" glib:type-struct="FruityPlistArrayClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityPlistArrayPrivate" c:type="FridaFruityPlistArrayPrivate*"/>
		</field>
		<method name="clear" c:identifier="frida_fruity_plist_array_clear">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="remove_at" c:identifier="frida_fruity_plist_array_remove_at" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_boolean" c:identifier="frida_fruity_plist_array_get_boolean" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_boolean" c:identifier="frida_fruity_plist_array_add_boolean">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_integer" c:identifier="frida_fruity_plist_array_get_integer" throws="1">
			<return-value transfer-ownership="full">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_integer" c:identifier="frida_fruity_plist_array_add_integer">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_float" c:identifier="frida_fruity_plist_array_get_float" throws="1">
			<return-value transfer-ownership="full">
				<type name="gfloat" c:type="gfloat"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_float" c:identifier="frida_fruity_plist_array_add_float">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gfloat" c:type="gfloat"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_double" c:identifier="frida_fruity_plist_array_get_double" throws="1">
			<return-value transfer-ownership="full">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_double" c:identifier="frida_fruity_plist_array_add_double">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_string" c:identifier="frida_fruity_plist_array_get_string" throws="1">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_string" c:identifier="frida_fruity_plist_array_add_string">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_bytes" c:identifier="frida_fruity_plist_array_get_bytes" throws="1">
			<return-value transfer-ownership="none">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_bytes_as_string" c:identifier="frida_fruity_plist_array_get_bytes_as_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_bytes" c:identifier="frida_fruity_plist_array_add_bytes">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_dict" c:identifier="frida_fruity_plist_array_get_dict" throws="1">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_dict" c:identifier="frida_fruity_plist_array_add_dict">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="dict" transfer-ownership="none">
					<type name="FridaFruity.PlistDict" c:type="FridaFruityPlistDict*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_array" c:identifier="frida_fruity_plist_array_get_array" throws="1">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_array" c:identifier="frida_fruity_plist_array_add_array">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="array" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_uid" c:identifier="frida_fruity_plist_array_get_uid" throws="1">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.PlistUid" c:type="FridaFruityPlistUid*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_uid" c:identifier="frida_fruity_plist_array_add_uid">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="uid" transfer-ownership="none">
					<type name="FridaFruity.PlistUid" c:type="FridaFruityPlistUid*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_value" c:identifier="frida_fruity_plist_array_get_value" throws="1">
			<return-value transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="GValue*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="expected_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_value" c:identifier="frida_fruity_plist_array_add_value">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="full" nullable="1">
					<type name="GObject.Value" c:type="GValue*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_fruity_plist_array_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
			</return-value>
		</constructor>
		<property name="is-empty">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_empty" c:identifier="frida_fruity_plist_array_get_is_empty">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="length">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_length" c:identifier="frida_fruity_plist_array_get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="elements">
			<type name="Gee.Iterable" c:type="GeeIterable*">
				<type name="gpointer" c:type="GValue*"/>
			</type>
		</property>
		<method name="get_elements" c:identifier="frida_fruity_plist_array_get_elements">
			<return-value transfer-ownership="none">
				<type name="Gee.Iterable" c:type="GeeIterable*">
					<type name="gpointer" c:type="GValue*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistArray" c:type="FridaFruityPlistArray*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityPlistArrayClass" c:type="FridaFruityPlistArrayClass" glib:is-gtype-struct-for="FruityPlistArray">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityPlistArrayPrivate" c:type="FridaFruityPlistArrayPrivate" disguised="1"/>
	<class name="FruityPlistNull" c:type="FridaFruityPlistNull" c:symbol-prefix="plist_null" glib:type-name="FridaFruityPlistNull" glib:get-type="frida_fruity_plist_null_get_type" glib:type-struct="FruityPlistNullClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityPlistNullPrivate" c:type="FridaFruityPlistNullPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_plist_null_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.PlistNull" c:type="FridaFruityPlistNull*"/>
			</return-value>
		</constructor>
	</class>
	<record name="FruityPlistNullClass" c:type="FridaFruityPlistNullClass" glib:is-gtype-struct-for="FruityPlistNull">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityPlistNullPrivate" c:type="FridaFruityPlistNullPrivate" disguised="1"/>
	<class name="FruityPlistDate" c:type="FridaFruityPlistDate" c:symbol-prefix="plist_date" glib:type-name="FridaFruityPlistDate" glib:get-type="frida_fruity_plist_date_get_type" glib:type-struct="FruityPlistDateClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityPlistDatePrivate" c:type="FridaFruityPlistDatePrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_plist_date_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.PlistDate" c:type="FridaFruityPlistDate*"/>
			</return-value>
			<parameters>
				<parameter name="time" transfer-ownership="none">
					<type name="GLib.DateTime" c:type="GDateTime*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_time" c:identifier="frida_fruity_plist_date_get_time">
			<return-value transfer-ownership="full">
				<type name="GLib.DateTime" c:type="GDateTime*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistDate" c:type="FridaFruityPlistDate*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityPlistDateClass" c:type="FridaFruityPlistDateClass" glib:is-gtype-struct-for="FruityPlistDate">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityPlistDatePrivate" c:type="FridaFruityPlistDatePrivate" disguised="1"/>
	<class name="FruityPlistUid" c:type="FridaFruityPlistUid" c:symbol-prefix="plist_uid" glib:type-name="FridaFruityPlistUid" glib:get-type="frida_fruity_plist_uid_get_type" glib:type-struct="FruityPlistUidClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityPlistUidPrivate" c:type="FridaFruityPlistUidPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_plist_uid_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.PlistUid" c:type="FridaFruityPlistUid*"/>
			</return-value>
			<parameters>
				<parameter name="uid" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="uid" writable="1" construct-only="1">
			<type name="guint64" c:type="guint64"/>
		</property>
		<method name="get_uid" c:identifier="frida_fruity_plist_uid_get_uid">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistUid" c:type="FridaFruityPlistUid*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityPlistUidClass" c:type="FridaFruityPlistUidClass" glib:is-gtype-struct-for="FruityPlistUid">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityPlistUidPrivate" c:type="FridaFruityPlistUidPrivate" disguised="1"/>
	<class name="FruityPlistServiceClient" c:type="FridaFruityPlistServiceClient" c:symbol-prefix="plist_service_client" glib:type-name="FridaFruityPlistServiceClient" glib:get-type="frida_fruity_plist_service_client_get_type" glib:type-struct="FruityPlistServiceClientClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityPlistServiceClientPrivate" c:type="FridaFruityPlistServiceClientPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_plist_service_client_new">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.PlistServiceClient" c:type="FridaFruityPlistServiceClient*"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.IOStream" c:type="GIOStream*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="close" c:identifier="frida_fruity_plist_service_client_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistServiceClient" c:type="FridaFruityPlistServiceClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_fruity_plist_service_client_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistServiceClient" c:type="FridaFruityPlistServiceClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query" c:identifier="frida_fruity_plist_service_client_query">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistServiceClient" c:type="FridaFruityPlistServiceClient*"/>
				</instance-parameter>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaFruity.Plist" c:type="FridaFruityPlist*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_finish" c:identifier="frida_fruity_plist_service_client_query_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.Plist" c:type="FridaFruityPlist*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistServiceClient" c:type="FridaFruityPlistServiceClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_message" c:identifier="frida_fruity_plist_service_client_write_message">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistServiceClient" c:type="FridaFruityPlistServiceClient*"/>
				</instance-parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="FridaFruity.Plist" c:type="FridaFruityPlist*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_message" c:identifier="frida_fruity_plist_service_client_read_message">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistServiceClient" c:type="FridaFruityPlistServiceClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_message_finish" c:identifier="frida_fruity_plist_service_client_read_message_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.Plist" c:type="FridaFruityPlist*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistServiceClient" c:type="FridaFruityPlistServiceClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_messages" c:identifier="frida_fruity_plist_service_client_read_messages">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistServiceClient" c:type="FridaFruityPlistServiceClient*"/>
				</instance-parameter>
				<parameter name="limit" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_messages_finish" c:identifier="frida_fruity_plist_service_client_read_messages_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="FridaFruity.Plist" c:type="FridaFruityPlist*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistServiceClient" c:type="FridaFruityPlistServiceClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="stream" writable="1">
			<type name="Gio.IOStream" c:type="GIOStream*"/>
		</property>
		<method name="get_stream" c:identifier="frida_fruity_plist_service_client_get_stream">
			<return-value transfer-ownership="none">
				<type name="Gio.IOStream" c:type="GIOStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistServiceClient" c:type="FridaFruityPlistServiceClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_stream" c:identifier="frida_fruity_plist_service_client_set_stream">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.PlistServiceClient" c:type="FridaFruityPlistServiceClient*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gio.IOStream" c:type="GIOStream*"/>
				</parameter>
			</parameters>
		</method>
		<glib:signal name="closed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</class>
	<record name="FruityPlistServiceClientClass" c:type="FridaFruityPlistServiceClientClass" glib:is-gtype-struct-for="FruityPlistServiceClient">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityPlistServiceClientPrivate" c:type="FridaFruityPlistServiceClientPrivate" disguised="1"/>
	<interface name="FruityDTXTransport" c:type="FridaFruityDTXTransport" c:symbol-prefix="dtx_transport" glib:type-name="FridaFruityDTXTransport" glib:get-type="frida_fruity_dtx_transport_get_type" glib:type-struct="FruityDTXTransportIface">
		<prerequisite name="GObject.Object"/>
		<method name="send_message" c:identifier="frida_fruity_dtx_transport_send_message">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXTransport" c:type="FridaFruityDTXTransport*"/>
				</instance-parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="FridaFruity.DTXMessage" c:type="FridaFruityDTXMessage"/>
				</parameter>
				<parameter name="identifier" direction="out" transfer-ownership="full">
					<type name="guint32" c:type="guint32*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="send_message" invoker="send_message">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXTransport" c:type="FridaFruityDTXTransport*"/>
				</instance-parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="FridaFruity.DTXMessage" c:type="FridaFruityDTXMessage"/>
				</parameter>
				<parameter name="identifier" direction="out" transfer-ownership="full">
					<type name="guint32" c:type="guint32*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_channel" c:identifier="frida_fruity_dtx_transport_remove_channel">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXTransport" c:type="FridaFruityDTXTransport*"/>
				</instance-parameter>
				<parameter name="channel" transfer-ownership="none">
					<type name="FridaFruity.DTXChannel" c:type="FridaFruityDTXChannel*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_channel" invoker="remove_channel">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaFruity.DTXTransport" c:type="FridaFruityDTXTransport*"/>
				</instance-parameter>
				<parameter name="channel" transfer-ownership="none">
					<type name="FridaFruity.DTXChannel" c:type="FridaFruityDTXChannel*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="FruityDTXTransportIface" c:type="FridaFruityDTXTransportIface" glib:is-gtype-struct-for="FruityDTXTransport">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="send_message">
			<callback name="send_message" c:type="send_message">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaFruity.DTXTransport" c:type="FridaFruityDTXTransport*"/>
					</parameter>
					<parameter name="message" transfer-ownership="none">
						<type name="FridaFruity.DTXMessage" c:type="FridaFruityDTXMessage"/>
					</parameter>
					<parameter name="identifier" direction="out" transfer-ownership="full">
						<type name="guint32" c:type="guint32*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_channel">
			<callback name="remove_channel" c:type="remove_channel">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaFruity.DTXTransport" c:type="FridaFruityDTXTransport*"/>
					</parameter>
					<parameter name="channel" transfer-ownership="none">
						<type name="FridaFruity.DTXChannel" c:type="FridaFruityDTXChannel*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="FruityDTXMessage" c:type="FridaFruityDTXMessage" c:symbol-prefix="dtx_message" glib:type-name="FridaFruityDTXMessage" glib:get-type="frida_fruity_dtx_message_get_type">
		<field name="type" writable="1">
			<type name="FridaFruity.DTXMessageType" c:type="FridaFruityDTXMessageType"/>
		</field>
		<field name="identifier" writable="1">
			<type name="guint32" c:type="guint32"/>
		</field>
		<field name="conversation_index" writable="1">
			<type name="guint32" c:type="guint32"/>
		</field>
		<field name="channel_code" writable="1">
			<type name="gint32" c:type="gint32"/>
		</field>
		<field name="transport_flags" writable="1">
			<type name="FridaFruity.DTXMessageTransportFlags" c:type="FridaFruityDTXMessageTransportFlags"/>
		</field>
		<field name="aux_data" writable="1">
			<array c:type="guint8*">
				<type name="guint8" c:type="guint8"/>
			</array>
		</field>
		<field name="aux_data_length1">
			<type name="gint" c:type="gint"/>
		</field>
		<field name="payload_data" writable="1">
			<array c:type="guint8*">
				<type name="guint8" c:type="guint8"/>
			</array>
		</field>
		<field name="payload_data_length1">
			<type name="gint" c:type="gint"/>
		</field>
	</record>
	<record name="FruityDeviceId" c:type="FridaFruityDeviceId" c:symbol-prefix="device_id" glib:type-name="FridaFruityDeviceId" glib:get-type="frida_fruity_device_id_get_type">
		<field name="_raw_value" writable="1">
			<type name="guint" c:type="guint"/>
		</field>
		<method name="init" c:identifier="frida_fruity_device_id_init">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaFruity.DeviceId" c:type="FridaFruityDeviceId*"/>
				</instance-parameter>
				<parameter name="raw_value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_raw_value" c:identifier="frida_fruity_device_id_get_raw_value">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaFruity.DeviceId" c:type="FridaFruityDeviceId*"/>
				</instance-parameter>
			</parameters>
		</method>
	</record>
	<record name="FruityProductId" c:type="FridaFruityProductId" c:symbol-prefix="product_id" glib:type-name="FridaFruityProductId" glib:get-type="frida_fruity_product_id_get_type">
		<field name="_raw_value" writable="1">
			<type name="gint" c:type="gint"/>
		</field>
		<method name="init" c:identifier="frida_fruity_product_id_init">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaFruity.ProductId" c:type="FridaFruityProductId*"/>
				</instance-parameter>
				<parameter name="raw_value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_raw_value" c:identifier="frida_fruity_product_id_get_raw_value">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaFruity.ProductId" c:type="FridaFruityProductId*"/>
				</instance-parameter>
			</parameters>
		</method>
	</record>
	<record name="FruityUdid" c:type="FridaFruityUdid" c:symbol-prefix="udid" glib:type-name="FridaFruityUdid" glib:get-type="frida_fruity_udid_get_type">
		<field name="_raw_value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<method name="init" c:identifier="frida_fruity_udid_init">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaFruity.Udid" c:type="FridaFruityUdid*"/>
				</instance-parameter>
				<parameter name="raw_value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_raw_value" c:identifier="frida_fruity_udid_get_raw_value">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaFruity.Udid" c:type="FridaFruityUdid*"/>
				</instance-parameter>
			</parameters>
		</method>
	</record>
	<enumeration name="LLDBASLR" c:type="FridaLLDBASLR" glib:type-name="FridaLLDBASLR" glib:get-type="frida_lldb_aslr_get_type">
		<member name="auto" c:identifier="FRIDA_LLDB_ASLR_AUTO" value="0"/>
		<member name="disable" c:identifier="FRIDA_LLDB_ASLR_DISABLE" value="1"/>
	</enumeration>
	<function name="lldb_aslr_from_nick" c:identifier="frida_lldb_aslr_from_nick" throws="1">
		<return-value transfer-ownership="full">
			<type name="FridaLLDB.ASLR" c:type="FridaLLDBASLR"/>
		</return-value>
		<parameters>
			<parameter name="nick" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<enumeration name="LLDBDarwinCpuArchType" c:type="FridaLLDBDarwinCpuArchType" glib:type-name="FridaLLDBDarwinCpuArchType" glib:get-type="frida_lldb_darwin_cpu_arch_type_get_type">
		<member name="abi64" c:identifier="FRIDA_LLDB_DARWIN_CPU_ARCH_TYPE_ABI64" value="0x01000000"/>
		<member name="abi64_32" c:identifier="FRIDA_LLDB_DARWIN_CPU_ARCH_TYPE_ABI64_32" value="0x02000000"/>
	</enumeration>
	<enumeration name="LLDBDarwinCpuType" c:type="FridaLLDBDarwinCpuType" glib:type-name="FridaLLDBDarwinCpuType" glib:get-type="frida_lldb_darwin_cpu_type_get_type">
		<member name="x86" c:identifier="FRIDA_LLDB_DARWIN_CPU_TYPE_X86" value="7"/>
		<member name="x86_64" c:identifier="FRIDA_LLDB_DARWIN_CPU_TYPE_X86_64" value="(NULL)"/>
		<member name="arm" c:identifier="FRIDA_LLDB_DARWIN_CPU_TYPE_ARM" value="12"/>
		<member name="arm64" c:identifier="FRIDA_LLDB_DARWIN_CPU_TYPE_ARM64" value="(NULL)"/>
		<member name="arm64_32" c:identifier="FRIDA_LLDB_DARWIN_CPU_TYPE_ARM64_32" value="(NULL)"/>
	</enumeration>
	<enumeration name="LLDBDarwinCpuSubtype" c:type="FridaLLDBDarwinCpuSubtype" glib:type-name="FridaLLDBDarwinCpuSubtype" glib:get-type="frida_lldb_darwin_cpu_subtype_get_type">
		<member name="arm64e" c:identifier="FRIDA_LLDB_DARWIN_CPU_SUBTYPE_ARM64E" value="2"/>
	</enumeration>
	<enumeration name="LLDBSignal" c:type="FridaLLDBSignal" glib:type-name="FridaLLDBSignal" glib:get-type="frida_lldb_signal_get_type">
		<member name="sighup" c:identifier="FRIDA_LLDB_SIGNAL_SIGHUP" value="1"/>
		<member name="sigint" c:identifier="FRIDA_LLDB_SIGNAL_SIGINT" value="0"/>
		<member name="sigquit" c:identifier="FRIDA_LLDB_SIGNAL_SIGQUIT" value="1"/>
		<member name="sigill" c:identifier="FRIDA_LLDB_SIGNAL_SIGILL" value="2"/>
		<member name="sigtrap" c:identifier="FRIDA_LLDB_SIGNAL_SIGTRAP" value="3"/>
		<member name="sigabrt" c:identifier="FRIDA_LLDB_SIGNAL_SIGABRT" value="4"/>
		<member name="sigemt" c:identifier="FRIDA_LLDB_SIGNAL_SIGEMT" value="5"/>
		<member name="sigfpe" c:identifier="FRIDA_LLDB_SIGNAL_SIGFPE" value="6"/>
		<member name="sigkill" c:identifier="FRIDA_LLDB_SIGNAL_SIGKILL" value="7"/>
		<member name="sigbus" c:identifier="FRIDA_LLDB_SIGNAL_SIGBUS" value="8"/>
		<member name="sigsegv" c:identifier="FRIDA_LLDB_SIGNAL_SIGSEGV" value="9"/>
		<member name="sigsys" c:identifier="FRIDA_LLDB_SIGNAL_SIGSYS" value="10"/>
		<member name="sigpipe" c:identifier="FRIDA_LLDB_SIGNAL_SIGPIPE" value="11"/>
		<member name="sigalrm" c:identifier="FRIDA_LLDB_SIGNAL_SIGALRM" value="12"/>
		<member name="sigterm" c:identifier="FRIDA_LLDB_SIGNAL_SIGTERM" value="13"/>
		<member name="sigurg" c:identifier="FRIDA_LLDB_SIGNAL_SIGURG" value="14"/>
		<member name="sigstop" c:identifier="FRIDA_LLDB_SIGNAL_SIGSTOP" value="15"/>
		<member name="sigtstp" c:identifier="FRIDA_LLDB_SIGNAL_SIGTSTP" value="16"/>
		<member name="sigcont" c:identifier="FRIDA_LLDB_SIGNAL_SIGCONT" value="17"/>
		<member name="sigchld" c:identifier="FRIDA_LLDB_SIGNAL_SIGCHLD" value="18"/>
		<member name="sigttin" c:identifier="FRIDA_LLDB_SIGNAL_SIGTTIN" value="19"/>
		<member name="sigttou" c:identifier="FRIDA_LLDB_SIGNAL_SIGTTOU" value="20"/>
		<member name="sigio" c:identifier="FRIDA_LLDB_SIGNAL_SIGIO" value="21"/>
		<member name="sigxcpu" c:identifier="FRIDA_LLDB_SIGNAL_SIGXCPU" value="22"/>
		<member name="sigxfsz" c:identifier="FRIDA_LLDB_SIGNAL_SIGXFSZ" value="23"/>
		<member name="sigvtalrm" c:identifier="FRIDA_LLDB_SIGNAL_SIGVTALRM" value="24"/>
		<member name="sigprof" c:identifier="FRIDA_LLDB_SIGNAL_SIGPROF" value="25"/>
		<member name="sigwinch" c:identifier="FRIDA_LLDB_SIGNAL_SIGWINCH" value="26"/>
		<member name="siginfo" c:identifier="FRIDA_LLDB_SIGNAL_SIGINFO" value="27"/>
		<member name="sigusr1" c:identifier="FRIDA_LLDB_SIGNAL_SIGUSR1" value="28"/>
		<member name="sigusr2" c:identifier="FRIDA_LLDB_SIGNAL_SIGUSR2" value="29"/>
		<member name="target_exc_bad_access" c:identifier="FRIDA_LLDB_SIGNAL_TARGET_EXC_BAD_ACCESS" value="0x91"/>
		<member name="target_exc_bad_instruction" c:identifier="FRIDA_LLDB_SIGNAL_TARGET_EXC_BAD_INSTRUCTION" value="30"/>
		<member name="target_exc_arithmetic" c:identifier="FRIDA_LLDB_SIGNAL_TARGET_EXC_ARITHMETIC" value="31"/>
		<member name="target_exc_emulation" c:identifier="FRIDA_LLDB_SIGNAL_TARGET_EXC_EMULATION" value="32"/>
		<member name="target_exc_software" c:identifier="FRIDA_LLDB_SIGNAL_TARGET_EXC_SOFTWARE" value="33"/>
		<member name="target_exc_breakpoint" c:identifier="FRIDA_LLDB_SIGNAL_TARGET_EXC_BREAKPOINT" value="34"/>
	</enumeration>
	<function name="lldb_signal_from_nick" c:identifier="frida_lldb_signal_from_nick" throws="1">
		<return-value transfer-ownership="full">
			<type name="FridaLLDB.Signal" c:type="FridaLLDBSignal"/>
		</return-value>
		<parameters>
			<parameter name="nick" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="lldb_signal_to_nick" c:identifier="frida_lldb_signal_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="FridaLLDB.Signal" c:type="FridaLLDBSignal"/>
			</instance-parameter>
		</parameters>
	</function>
	<function name="lldb_signal_to_name" c:identifier="frida_lldb_signal_to_name">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="FridaLLDB.Signal" c:type="FridaLLDBSignal"/>
			</instance-parameter>
		</parameters>
	</function>
	<enumeration name="LLDBMachExceptionType" c:type="FridaLLDBMachExceptionType" glib:type-name="FridaLLDBMachExceptionType" glib:get-type="frida_lldb_mach_exception_type_get_type">
		<member name="none" c:identifier="FRIDA_LLDB_MACH_EXCEPTION_TYPE_NONE" value="0"/>
		<member name="exc_bad_access" c:identifier="FRIDA_LLDB_MACH_EXCEPTION_TYPE_EXC_BAD_ACCESS" value="1"/>
		<member name="exc_bad_instruction" c:identifier="FRIDA_LLDB_MACH_EXCEPTION_TYPE_EXC_BAD_INSTRUCTION" value="2"/>
		<member name="exc_arithmetic" c:identifier="FRIDA_LLDB_MACH_EXCEPTION_TYPE_EXC_ARITHMETIC" value="3"/>
		<member name="exc_emulation" c:identifier="FRIDA_LLDB_MACH_EXCEPTION_TYPE_EXC_EMULATION" value="4"/>
		<member name="exc_software" c:identifier="FRIDA_LLDB_MACH_EXCEPTION_TYPE_EXC_SOFTWARE" value="5"/>
		<member name="exc_breakpoint" c:identifier="FRIDA_LLDB_MACH_EXCEPTION_TYPE_EXC_BREAKPOINT" value="6"/>
		<member name="exc_syscall" c:identifier="FRIDA_LLDB_MACH_EXCEPTION_TYPE_EXC_SYSCALL" value="7"/>
		<member name="exc_mach_syscall" c:identifier="FRIDA_LLDB_MACH_EXCEPTION_TYPE_EXC_MACH_SYSCALL" value="8"/>
		<member name="exc_rpc_alert" c:identifier="FRIDA_LLDB_MACH_EXCEPTION_TYPE_EXC_RPC_ALERT" value="9"/>
		<member name="exc_crash" c:identifier="FRIDA_LLDB_MACH_EXCEPTION_TYPE_EXC_CRASH" value="10"/>
		<member name="exc_resource" c:identifier="FRIDA_LLDB_MACH_EXCEPTION_TYPE_EXC_RESOURCE" value="11"/>
		<member name="exc_guard" c:identifier="FRIDA_LLDB_MACH_EXCEPTION_TYPE_EXC_GUARD" value="12"/>
		<member name="exc_corpse_notify" c:identifier="FRIDA_LLDB_MACH_EXCEPTION_TYPE_EXC_CORPSE_NOTIFY" value="13"/>
	</enumeration>
	<function name="lldb_mach_exception_type_from_nick" c:identifier="frida_lldb_mach_exception_type_from_nick" throws="1">
		<return-value transfer-ownership="full">
			<type name="FridaLLDB.MachExceptionType" c:type="FridaLLDBMachExceptionType"/>
		</return-value>
		<parameters>
			<parameter name="nick" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="lldb_mach_exception_type_to_nick" c:identifier="frida_lldb_mach_exception_type_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="FridaLLDB.MachExceptionType" c:type="FridaLLDBMachExceptionType"/>
			</instance-parameter>
		</parameters>
	</function>
	<function name="lldb_mach_exception_type_to_name" c:identifier="frida_lldb_mach_exception_type_to_name">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="FridaLLDB.MachExceptionType" c:type="FridaLLDBMachExceptionType"/>
			</instance-parameter>
		</parameters>
	</function>
	<class name="LLDBClient" c:type="FridaLLDBClient" c:symbol-prefix="client" glib:type-name="FridaLLDBClient" glib:get-type="frida_lldb_client_get_type" glib:type-struct="LLDBClientClass" parent="FridaGDB.Client">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaGDB.Client" c:type="FridaGDBClient"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LLDBClientPrivate" c:type="FridaLLDBClientPrivate*"/>
		</field>
		<function name="open" c:identifier="frida_lldb_client_open">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.IOStream" c:type="GIOStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="open_finish" c:identifier="frida_lldb_client_open_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<method name="launch" c:identifier="frida_lldb_client_launch">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</instance-parameter>
				<parameter name="argv" transfer-ownership="none">
					<array length="1" c:type="gchar**">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="argv_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaLLDB.LaunchOptions" c:type="FridaLLDBLaunchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="launch_finish" c:identifier="frida_lldb_client_launch_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="attach_by_name" c:identifier="frida_lldb_client_attach_by_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="attach_by_name_finish" c:identifier="frida_lldb_client_attach_by_name_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="attach_by_pid" c:identifier="frida_lldb_client_attach_by_pid">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="attach_by_pid_finish" c:identifier="frida_lldb_client_attach_by_pid_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_threads" c:identifier="frida_lldb_client_enumerate_threads">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</instance-parameter>
				<parameter name="func" transfer-ownership="none" closure="1" scope="call">
					<type name="Frida.FridaLLDBClientFoundThreadFunc" c:type="FridaLLDBClientFoundThreadFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_threads_finish" c:identifier="frida_lldb_client_enumerate_threads_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_modules" c:identifier="frida_lldb_client_enumerate_modules">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</instance-parameter>
				<parameter name="func" transfer-ownership="none" closure="1" scope="call">
					<type name="Frida.FridaLLDBClientFoundModuleFunc" c:type="FridaLLDBClientFoundModuleFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_modules_finish" c:identifier="frida_lldb_client_enumerate_modules_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="allocate" c:identifier="frida_lldb_client_allocate">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</instance-parameter>
				<parameter name="size" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="protection" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="allocate_finish" c:identifier="frida_lldb_client_allocate_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deallocate" c:identifier="frida_lldb_client_deallocate">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deallocate_finish" c:identifier="frida_lldb_client_deallocate_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_apple_dyld_fields" c:identifier="frida_lldb_client_get_apple_dyld_fields">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</instance-parameter>
				<parameter name="cache_policy" transfer-ownership="none">
					<type name="Frida.FridaLLDBClientCachePolicy" c:type="FridaLLDBClientCachePolicy"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_apple_dyld_fields_finish" c:identifier="frida_lldb_client_get_apple_dyld_fields_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaLLDB.AppleDyldFields" c:type="FridaLLDBAppleDyldFields*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="strip_code_address" c:identifier="frida_lldb_client_strip_code_address">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</method>
		<property name="process">
			<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
		</property>
		<method name="get_process" c:identifier="frida_lldb_client_get_process">
			<return-value transfer-ownership="none" nullable="1">
				<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<callback name="FoundThreadFunc" c:type="FridaLLDBClientFoundThreadFunc">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaLLDB.Thread" c:type="FridaLLDBThread*"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
		<callback name="FoundModuleFunc" c:type="FridaLLDBClientFoundModuleFunc">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="module" transfer-ownership="none">
					<type name="FridaLLDB.Module" c:type="FridaLLDBModule*"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
	</class>
	<record name="LLDBClientClass" c:type="FridaLLDBClientClass" glib:is-gtype-struct-for="LLDBClient">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaGDB.ClientClass" c:type="FridaGDBClientClass"/>
		</field>
	</record>
	<record name="LLDBClientPrivate" c:type="FridaLLDBClientPrivate" disguised="1"/>
	<enumeration name="LLDBClientCachePolicy" c:type="FridaLLDBClientCachePolicy" glib:type-name="FridaLLDBClientCachePolicy" glib:get-type="frida_lldb_client_cache_policy_get_type">
		<member name="allow_cache" c:identifier="FRIDA_LLDB_CLIENT_CACHE_POLICY_ALLOW_CACHE" value="0"/>
		<member name="bypass_cache" c:identifier="FRIDA_LLDB_CLIENT_CACHE_POLICY_BYPASS_CACHE" value="1"/>
	</enumeration>
	<class name="LLDBLaunchOptions" c:type="FridaLLDBLaunchOptions" c:symbol-prefix="launch_options" glib:type-name="FridaLLDBLaunchOptions" glib:get-type="frida_lldb_launch_options_get_type" glib:type-struct="LLDBLaunchOptionsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LLDBLaunchOptionsPrivate" c:type="FridaLLDBLaunchOptionsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_lldb_launch_options_new">
			<return-value transfer-ownership="full">
				<type name="FridaLLDB.LaunchOptions" c:type="FridaLLDBLaunchOptions*"/>
			</return-value>
		</constructor>
		<property name="env" writable="1">
			<array c:type="gchar**">
				<type name="utf8" c:type="gchar*"/>
			</array>
		</property>
		<method name="get_env" c:identifier="frida_lldb_launch_options_get_env">
			<return-value transfer-ownership="none">
				<array length="0" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.LaunchOptions" c:type="FridaLLDBLaunchOptions*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_env" c:identifier="frida_lldb_launch_options_set_env">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.LaunchOptions" c:type="FridaLLDBLaunchOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<array length="1" c:type="gchar**">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="arch" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_arch" c:identifier="frida_lldb_launch_options_get_arch">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.LaunchOptions" c:type="FridaLLDBLaunchOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_arch" c:identifier="frida_lldb_launch_options_set_arch">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.LaunchOptions" c:type="FridaLLDBLaunchOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="aslr" writable="1">
			<type name="FridaLLDB.ASLR" c:type="FridaLLDBASLR"/>
		</property>
		<method name="get_aslr" c:identifier="frida_lldb_launch_options_get_aslr">
			<return-value transfer-ownership="none">
				<type name="FridaLLDB.ASLR" c:type="FridaLLDBASLR"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.LaunchOptions" c:type="FridaLLDBLaunchOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_aslr" c:identifier="frida_lldb_launch_options_set_aslr">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.LaunchOptions" c:type="FridaLLDBLaunchOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="FridaLLDB.ASLR" c:type="FridaLLDBASLR"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="LLDBLaunchOptionsClass" c:type="FridaLLDBLaunchOptionsClass" glib:is-gtype-struct-for="LLDBLaunchOptions">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="LLDBLaunchOptionsPrivate" c:type="FridaLLDBLaunchOptionsPrivate" disguised="1"/>
	<class name="LLDBProcess" c:type="FridaLLDBProcess" c:symbol-prefix="process" glib:type-name="FridaLLDBProcess" glib:get-type="frida_lldb_process_get_type" glib:type-struct="LLDBProcessClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LLDBProcessPrivate" c:type="FridaLLDBProcessPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_lldb_process_new">
			<return-value transfer-ownership="full">
				<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
			</return-value>
		</constructor>
		<property name="pid" writable="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_pid" c:identifier="frida_lldb_process_get_pid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_pid" c:identifier="frida_lldb_process_set_pid">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<property name="parent-pid" writable="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_parent_pid" c:identifier="frida_lldb_process_get_parent_pid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_parent_pid" c:identifier="frida_lldb_process_set_parent_pid">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<property name="real-uid" writable="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_real_uid" c:identifier="frida_lldb_process_get_real_uid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_real_uid" c:identifier="frida_lldb_process_set_real_uid">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<property name="real-gid" writable="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_real_gid" c:identifier="frida_lldb_process_get_real_gid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_real_gid" c:identifier="frida_lldb_process_set_real_gid">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<property name="effective-uid" writable="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_effective_uid" c:identifier="frida_lldb_process_get_effective_uid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_effective_uid" c:identifier="frida_lldb_process_set_effective_uid">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<property name="effective-gid" writable="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_effective_gid" c:identifier="frida_lldb_process_get_effective_gid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_effective_gid" c:identifier="frida_lldb_process_set_effective_gid">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<property name="cpu-type" writable="1">
			<type name="FridaLLDB.DarwinCpuType" c:type="FridaLLDBDarwinCpuType"/>
		</property>
		<method name="get_cpu_type" c:identifier="frida_lldb_process_get_cpu_type">
			<return-value transfer-ownership="none">
				<type name="FridaLLDB.DarwinCpuType" c:type="FridaLLDBDarwinCpuType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_cpu_type" c:identifier="frida_lldb_process_set_cpu_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="FridaLLDB.DarwinCpuType" c:type="FridaLLDBDarwinCpuType"/>
				</parameter>
			</parameters>
		</method>
		<property name="cpu-subtype" writable="1">
			<type name="FridaLLDB.DarwinCpuSubtype" c:type="FridaLLDBDarwinCpuSubtype"/>
		</property>
		<method name="get_cpu_subtype" c:identifier="frida_lldb_process_get_cpu_subtype">
			<return-value transfer-ownership="none">
				<type name="FridaLLDB.DarwinCpuSubtype" c:type="FridaLLDBDarwinCpuSubtype"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_cpu_subtype" c:identifier="frida_lldb_process_set_cpu_subtype">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="FridaLLDB.DarwinCpuSubtype" c:type="FridaLLDBDarwinCpuSubtype"/>
				</parameter>
			</parameters>
		</method>
		<property name="pointer-size" writable="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_pointer_size" c:identifier="frida_lldb_process_get_pointer_size">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_pointer_size" c:identifier="frida_lldb_process_set_pointer_size">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<property name="os-type" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_os_type" c:identifier="frida_lldb_process_get_os_type">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_os_type" c:identifier="frida_lldb_process_set_os_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="vendor" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_vendor" c:identifier="frida_lldb_process_get_vendor">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_vendor" c:identifier="frida_lldb_process_set_vendor">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="byte-order" writable="1">
			<type name="GLib.ByteOrder" c:type="int"/>
		</property>
		<method name="get_byte_order" c:identifier="frida_lldb_process_get_byte_order">
			<return-value transfer-ownership="none">
				<type name="GLib.ByteOrder" c:type="int"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_byte_order" c:identifier="frida_lldb_process_set_byte_order">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.ByteOrder" c:type="int"/>
				</parameter>
			</parameters>
		</method>
		<property name="observed-state" writable="1">
			<type name="Frida.FridaLLDBProcessObservedState" c:type="FridaLLDBProcessObservedState"/>
		</property>
		<method name="get_observed_state" c:identifier="frida_lldb_process_get_observed_state">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaLLDBProcessObservedState" c:type="FridaLLDBProcessObservedState"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_observed_state" c:identifier="frida_lldb_process_set_observed_state">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Process" c:type="FridaLLDBProcess*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Frida.FridaLLDBProcessObservedState" c:type="FridaLLDBProcessObservedState"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="LLDBProcessClass" c:type="FridaLLDBProcessClass" glib:is-gtype-struct-for="LLDBProcess">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="LLDBProcessPrivate" c:type="FridaLLDBProcessPrivate" disguised="1"/>
	<enumeration name="LLDBProcessObservedState" c:type="FridaLLDBProcessObservedState" glib:type-name="FridaLLDBProcessObservedState" glib:get-type="frida_lldb_process_observed_state_get_type">
		<member name="freshly_created" c:identifier="FRIDA_LLDB_PROCESS_OBSERVED_STATE_FRESHLY_CREATED" value="0"/>
		<member name="already_running" c:identifier="FRIDA_LLDB_PROCESS_OBSERVED_STATE_ALREADY_RUNNING" value="1"/>
	</enumeration>
	<class name="LLDBThread" c:type="FridaLLDBThread" c:symbol-prefix="thread" glib:type-name="FridaLLDBThread" glib:get-type="frida_lldb_thread_get_type" glib:type-struct="LLDBThreadClass" parent="FridaGDB.Thread">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaGDB.Thread" c:type="FridaGDBThread"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LLDBThreadPrivate" c:type="FridaLLDBThreadPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_lldb_thread_new">
			<return-value transfer-ownership="full">
				<type name="FridaLLDB.Thread" c:type="FridaLLDBThread*"/>
			</return-value>
			<parameters>
				<parameter name="id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="client" transfer-ownership="none">
					<type name="FridaLLDB.Client" c:type="FridaLLDBClient*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="save_register_state" c:identifier="frida_lldb_thread_save_register_state">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Thread" c:type="FridaLLDBThread*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="save_register_state_finish" c:identifier="frida_lldb_thread_save_register_state_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaLLDBThreadSnapshot" c:type="FridaLLDBThreadSnapshot*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Thread" c:type="FridaLLDBThread*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="restore_register_state" c:identifier="frida_lldb_thread_restore_register_state">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Thread" c:type="FridaLLDBThread*"/>
				</instance-parameter>
				<parameter name="snapshot" transfer-ownership="none">
					<type name="Frida.FridaLLDBThreadSnapshot" c:type="FridaLLDBThreadSnapshot*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="restore_register_state_finish" c:identifier="frida_lldb_thread_restore_register_state_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Thread" c:type="FridaLLDBThread*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="generate_backtrace" c:identifier="frida_lldb_thread_generate_backtrace">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Thread" c:type="FridaLLDBThread*"/>
				</instance-parameter>
				<parameter name="stack" transfer-ownership="none" nullable="1">
					<type name="Frida.FridaLLDBThreadStackBounds" c:type="FridaLLDBThreadStackBounds*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="generate_backtrace_finish" c:identifier="frida_lldb_thread_generate_backtrace_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.ArrayList" c:type="GeeArrayList*">
					<type name="Frida.FridaLLDBThreadFrame" c:type="FridaLLDBThreadFrame*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Thread" c:type="FridaLLDBThread*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="LLDBThreadClass" c:type="FridaLLDBThreadClass" glib:is-gtype-struct-for="LLDBThread">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaGDB.ThreadClass" c:type="FridaGDBThreadClass"/>
		</field>
	</record>
	<record name="LLDBThreadPrivate" c:type="FridaLLDBThreadPrivate" disguised="1"/>
	<class name="LLDBThreadSnapshot" c:type="FridaLLDBThreadSnapshot" c:symbol-prefix="snapshot" glib:type-name="FridaLLDBThreadSnapshot" glib:get-type="frida_lldb_thread_snapshot_get_type" glib:type-struct="LLDBThreadSnapshotClass" glib:fundamental="1" glib:ref-func="frida_lldb_thread_snapshot_ref" glib:unref-func="frida_lldb_thread_snapshot_unref" glib:set-value-func="frida_lldb_thread_value_set_snapshot" glib:get-value-func="frida_lldb_thread_value_get_snapshot">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LLDBThreadSnapshotPrivate" c:type="FridaLLDBThreadSnapshotPrivate*"/>
		</field>
		<method name="get_handle" c:identifier="frida_lldb_thread_snapshot_get_handle">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaLLDBThreadSnapshot" c:type="FridaLLDBThreadSnapshot*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="LLDBThreadSnapshotClass" c:type="FridaLLDBThreadSnapshotClass" glib:is-gtype-struct-for="LLDBThreadSnapshot">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="LLDBThreadSnapshotPrivate" c:type="FridaLLDBThreadSnapshotPrivate" disguised="1"/>
	<class name="LLDBThreadFrame" c:type="FridaLLDBThreadFrame" c:symbol-prefix="frame" glib:type-name="FridaLLDBThreadFrame" glib:get-type="frida_lldb_thread_frame_get_type" glib:type-struct="LLDBThreadFrameClass" glib:fundamental="1" glib:ref-func="frida_lldb_thread_frame_ref" glib:unref-func="frida_lldb_thread_frame_unref" glib:set-value-func="frida_lldb_thread_value_set_frame" glib:get-value-func="frida_lldb_thread_value_get_frame">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LLDBThreadFramePrivate" c:type="FridaLLDBThreadFramePrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_lldb_thread_frame_new">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaLLDBThreadFrame" c:type="FridaLLDBThreadFrame*"/>
			</return-value>
			<parameters>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="stack_location" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_address" c:identifier="frida_lldb_thread_frame_get_address">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaLLDBThreadFrame" c:type="FridaLLDBThreadFrame*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_stack_location" c:identifier="frida_lldb_thread_frame_get_stack_location">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaLLDBThreadFrame" c:type="FridaLLDBThreadFrame*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="LLDBThreadFrameClass" c:type="FridaLLDBThreadFrameClass" glib:is-gtype-struct-for="LLDBThreadFrame">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="LLDBThreadFramePrivate" c:type="FridaLLDBThreadFramePrivate" disguised="1"/>
	<record name="LLDBThreadStackBounds" c:type="FridaLLDBThreadStackBounds" c:symbol-prefix="stack_bounds" glib:type-name="FridaLLDBThreadStackBounds" glib:get-type="frida_lldb_thread_stack_bounds_get_type">
		<field name="bottom" writable="1">
			<type name="guint64" c:type="guint64"/>
		</field>
		<field name="top" writable="1">
			<type name="guint64" c:type="guint64"/>
		</field>
		<method name="init" c:identifier="frida_lldb_thread_stack_bounds_init">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="Frida.FridaLLDBThreadStackBounds" c:type="FridaLLDBThreadStackBounds*"/>
				</instance-parameter>
				<parameter name="bottom" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="top" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</method>
	</record>
	<class name="LLDBModule" c:type="FridaLLDBModule" c:symbol-prefix="module" glib:type-name="FridaLLDBModule" glib:get-type="frida_lldb_module_get_type" glib:type-struct="LLDBModuleClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LLDBModulePrivate" c:type="FridaLLDBModulePrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_lldb_module_new">
			<return-value transfer-ownership="full">
				<type name="FridaLLDB.Module" c:type="FridaLLDBModule*"/>
			</return-value>
			<parameters>
				<parameter name="load_address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="pathname" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="segments" transfer-ownership="full">
					<type name="Gee.ArrayList" c:type="GeeArrayList*">
						<type name="Frida.FridaLLDBModuleSegment" c:type="FridaLLDBModuleSegment*"/>
					</type>
				</parameter>
			</parameters>
		</constructor>
		<property name="load-address" writable="1" construct-only="1">
			<type name="guint64" c:type="guint64"/>
		</property>
		<method name="get_load_address" c:identifier="frida_lldb_module_get_load_address">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Module" c:type="FridaLLDBModule*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="pathname" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_pathname" c:identifier="frida_lldb_module_get_pathname">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Module" c:type="FridaLLDBModule*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="segments" writable="1" construct-only="1">
			<type name="Gee.ArrayList" c:type="GeeArrayList*">
				<type name="Frida.FridaLLDBModuleSegment" c:type="FridaLLDBModuleSegment*"/>
			</type>
		</property>
		<method name="get_segments" c:identifier="frida_lldb_module_get_segments">
			<return-value transfer-ownership="none">
				<type name="Gee.ArrayList" c:type="GeeArrayList*">
					<type name="Frida.FridaLLDBModuleSegment" c:type="FridaLLDBModuleSegment*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Module" c:type="FridaLLDBModule*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="LLDBModuleClass" c:type="FridaLLDBModuleClass" glib:is-gtype-struct-for="LLDBModule">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="LLDBModulePrivate" c:type="FridaLLDBModulePrivate" disguised="1"/>
	<class name="LLDBModuleSegment" c:type="FridaLLDBModuleSegment" c:symbol-prefix="segment" glib:type-name="FridaLLDBModuleSegment" glib:get-type="frida_lldb_module_segment_get_type" glib:type-struct="LLDBModuleSegmentClass" glib:fundamental="1" glib:ref-func="frida_lldb_module_segment_ref" glib:unref-func="frida_lldb_module_segment_unref" glib:set-value-func="frida_lldb_module_value_set_segment" glib:get-value-func="frida_lldb_module_value_get_segment">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LLDBModuleSegmentPrivate" c:type="FridaLLDBModuleSegmentPrivate*"/>
		</field>
		<field name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="vmaddr" writable="1">
			<type name="guint64" c:type="guint64"/>
		</field>
		<field name="vmsize" writable="1">
			<type name="guint64" c:type="guint64"/>
		</field>
		<field name="fileoff" writable="1">
			<type name="guint64" c:type="guint64"/>
		</field>
		<field name="filesize" writable="1">
			<type name="guint64" c:type="guint64"/>
		</field>
		<constructor name="new" c:identifier="frida_lldb_module_segment_new">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaLLDBModuleSegment" c:type="FridaLLDBModuleSegment*"/>
			</return-value>
		</constructor>
	</class>
	<record name="LLDBModuleSegmentClass" c:type="FridaLLDBModuleSegmentClass" glib:is-gtype-struct-for="LLDBModuleSegment">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="LLDBModuleSegmentPrivate" c:type="FridaLLDBModuleSegmentPrivate" disguised="1"/>
	<class name="LLDBException" c:type="FridaLLDBException" c:symbol-prefix="exception" glib:type-name="FridaLLDBException" glib:get-type="frida_lldb_exception_get_type" glib:type-struct="LLDBExceptionClass" parent="FridaGDB.Exception">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaGDB.Exception" c:type="FridaGDBException"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LLDBExceptionPrivate" c:type="FridaLLDBExceptionPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_lldb_exception_new">
			<return-value transfer-ownership="full">
				<type name="FridaLLDB.Exception" c:type="FridaLLDBException*"/>
			</return-value>
			<parameters>
				<parameter name="signum" transfer-ownership="none">
					<type name="FridaLLDB.Signal" c:type="FridaLLDBSignal"/>
				</parameter>
				<parameter name="metype" transfer-ownership="none">
					<type name="FridaLLDB.MachExceptionType" c:type="FridaLLDBMachExceptionType"/>
				</parameter>
				<parameter name="medata" transfer-ownership="none">
					<type name="Gee.ArrayList" c:type="GeeArrayList*">
						<type name="guint64" c:type="guint64*"/>
					</type>
				</parameter>
				<parameter name="breakpoint" transfer-ownership="none" nullable="1">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaLLDB.Thread" c:type="FridaLLDBThread*"/>
				</parameter>
				<parameter name="context" transfer-ownership="none">
					<type name="Gee.HashMap" c:type="GeeHashMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="guint64" c:type="guint64*"/>
					</type>
				</parameter>
			</parameters>
		</constructor>
		<property name="metype" writable="1" construct-only="1">
			<type name="FridaLLDB.MachExceptionType" c:type="FridaLLDBMachExceptionType"/>
		</property>
		<method name="get_metype" c:identifier="frida_lldb_exception_get_metype">
			<return-value transfer-ownership="none">
				<type name="FridaLLDB.MachExceptionType" c:type="FridaLLDBMachExceptionType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Exception" c:type="FridaLLDBException*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="medata" writable="1" construct-only="1">
			<type name="Gee.ArrayList" c:type="GeeArrayList*">
				<type name="guint64" c:type="guint64*"/>
			</type>
		</property>
		<method name="get_medata" c:identifier="frida_lldb_exception_get_medata">
			<return-value transfer-ownership="none">
				<type name="Gee.ArrayList" c:type="GeeArrayList*">
					<type name="guint64" c:type="guint64*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Exception" c:type="FridaLLDBException*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="context" writable="1" construct-only="1">
			<type name="Gee.HashMap" c:type="GeeHashMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="guint64" c:type="guint64*"/>
			</type>
		</property>
		<method name="get_context" c:identifier="frida_lldb_exception_get_context">
			<return-value transfer-ownership="none">
				<type name="Gee.HashMap" c:type="GeeHashMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="guint64" c:type="guint64*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.Exception" c:type="FridaLLDBException*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="LLDBExceptionClass" c:type="FridaLLDBExceptionClass" glib:is-gtype-struct-for="LLDBException">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaGDB.ExceptionClass" c:type="FridaGDBExceptionClass"/>
		</field>
	</record>
	<record name="LLDBExceptionPrivate" c:type="FridaLLDBExceptionPrivate" disguised="1"/>
	<class name="LLDBAppleDyldFields" c:type="FridaLLDBAppleDyldFields" c:symbol-prefix="apple_dyld_fields" glib:type-name="FridaLLDBAppleDyldFields" glib:get-type="frida_lldb_apple_dyld_fields_get_type" glib:type-struct="LLDBAppleDyldFieldsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LLDBAppleDyldFieldsPrivate" c:type="FridaLLDBAppleDyldFieldsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_lldb_apple_dyld_fields_new">
			<return-value transfer-ownership="full">
				<type name="FridaLLDB.AppleDyldFields" c:type="FridaLLDBAppleDyldFields*"/>
			</return-value>
			<parameters>
				<parameter name="all_image_info" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="notification_callback" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="libsystem_initialized" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="dyld_load_address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="all-image-info" writable="1" construct-only="1">
			<type name="guint64" c:type="guint64"/>
		</property>
		<method name="get_all_image_info" c:identifier="frida_lldb_apple_dyld_fields_get_all_image_info">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.AppleDyldFields" c:type="FridaLLDBAppleDyldFields*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="notification-callback" writable="1" construct-only="1">
			<type name="guint64" c:type="guint64"/>
		</property>
		<method name="get_notification_callback" c:identifier="frida_lldb_apple_dyld_fields_get_notification_callback">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.AppleDyldFields" c:type="FridaLLDBAppleDyldFields*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="libsystem-initialized" writable="1" construct-only="1">
			<type name="guint64" c:type="guint64"/>
		</property>
		<method name="get_libsystem_initialized" c:identifier="frida_lldb_apple_dyld_fields_get_libsystem_initialized">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.AppleDyldFields" c:type="FridaLLDBAppleDyldFields*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="dyld-load-address" writable="1" construct-only="1">
			<type name="guint64" c:type="guint64"/>
		</property>
		<method name="get_dyld_load_address" c:identifier="frida_lldb_apple_dyld_fields_get_dyld_load_address">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaLLDB.AppleDyldFields" c:type="FridaLLDBAppleDyldFields*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="LLDBAppleDyldFieldsClass" c:type="FridaLLDBAppleDyldFieldsClass" glib:is-gtype-struct-for="LLDBAppleDyldFields">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="LLDBAppleDyldFieldsPrivate" c:type="FridaLLDBAppleDyldFieldsPrivate" disguised="1"/>
	<function name="droidy_shell_command_run" c:identifier="frida_droidy_shell_command_run">
		<return-value transfer-ownership="none">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="command" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
			<parameter name="device_serial" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
			<parameter name="cancellable" transfer-ownership="none" nullable="1">
				<type name="Gio.Cancellable" c:type="GCancellable*"/>
			</parameter>
			<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
				<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
			</parameter>
			<parameter name="_callback__target" transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
	<function name="droidy_shell_command_run_finish" c:identifier="frida_droidy_shell_command_run_finish" throws="1">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<parameter name="_res_" transfer-ownership="none">
				<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
			</parameter>
		</parameters>
	</function>
	<function name="droidy_file_sync_send" c:identifier="frida_droidy_file_sync_send">
		<return-value transfer-ownership="none">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="content" transfer-ownership="none">
				<type name="Gio.InputStream" c:type="GInputStream*"/>
			</parameter>
			<parameter name="metadata" transfer-ownership="none">
				<type name="FridaDroidy.FileMetadata" c:type="FridaDroidyFileMetadata*"/>
			</parameter>
			<parameter name="remote_path" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
			<parameter name="device_serial" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
			<parameter name="cancellable" transfer-ownership="none" nullable="1">
				<type name="Gio.Cancellable" c:type="GCancellable*"/>
			</parameter>
			<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
				<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
			</parameter>
			<parameter name="_callback__target" transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
	<function name="droidy_file_sync_send_finish" c:identifier="frida_droidy_file_sync_send_finish" throws="1">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="_res_" transfer-ownership="none">
				<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
			</parameter>
		</parameters>
	</function>
	<class name="DroidyInjectorGadgetDetails" c:type="FridaDroidyInjectorGadgetDetails" c:symbol-prefix="gadget_details" glib:type-name="FridaDroidyInjectorGadgetDetails" glib:get-type="frida_droidy_injector_gadget_details_get_type" glib:type-struct="DroidyInjectorGadgetDetailsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DroidyInjectorGadgetDetailsPrivate" c:type="FridaDroidyInjectorGadgetDetailsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_droidy_injector_gadget_details_new">
			<return-value transfer-ownership="full">
				<type name="FridaDroidyInjector.GadgetDetails" c:type="FridaDroidyInjectorGadgetDetails*"/>
			</return-value>
			<parameters>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="unix_socket_path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="jdwp" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="pid" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_pid" c:identifier="frida_droidy_injector_gadget_details_get_pid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidyInjector.GadgetDetails" c:type="FridaDroidyInjectorGadgetDetails*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="unix-socket-path" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_unix_socket_path" c:identifier="frida_droidy_injector_gadget_details_get_unix_socket_path">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidyInjector.GadgetDetails" c:type="FridaDroidyInjectorGadgetDetails*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="jdwp" writable="1" construct-only="1">
			<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
		</property>
		<method name="get_jdwp" c:identifier="frida_droidy_injector_gadget_details_get_jdwp">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidyInjector.GadgetDetails" c:type="FridaDroidyInjectorGadgetDetails*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="DroidyInjectorGadgetDetailsClass" c:type="FridaDroidyInjectorGadgetDetailsClass" glib:is-gtype-struct-for="DroidyInjectorGadgetDetails">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DroidyInjectorGadgetDetailsPrivate" c:type="FridaDroidyInjectorGadgetDetailsPrivate" disguised="1"/>
	<function name="droidy_injector_inject" c:identifier="frida_droidy_injector_inject">
		<return-value transfer-ownership="none">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="gadget" transfer-ownership="none">
				<type name="Gio.InputStream" c:type="GInputStream*"/>
			</parameter>
			<parameter name="package" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
			<parameter name="device_serial" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
			<parameter name="cancellable" transfer-ownership="none" nullable="1">
				<type name="Gio.Cancellable" c:type="GCancellable*"/>
			</parameter>
			<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
				<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
			</parameter>
			<parameter name="_callback__target" transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
	<function name="droidy_injector_inject_finish" c:identifier="frida_droidy_injector_inject_finish" throws="1">
		<return-value transfer-ownership="full">
			<type name="FridaDroidyInjector.GadgetDetails" c:type="FridaDroidyInjectorGadgetDetails*"/>
		</return-value>
		<parameters>
			<parameter name="_res_" transfer-ownership="none">
				<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
			</parameter>
		</parameters>
	</function>
	<enumeration name="DroidyStdioPipe" c:type="FridaDroidyStdioPipe" glib:type-name="FridaDroidyStdioPipe" glib:get-type="frida_droidy_stdio_pipe_get_type">
		<member name="stdout" c:identifier="FRIDA_DROIDY_STDIO_PIPE_STDOUT" value="0"/>
		<member name="stderr" c:identifier="FRIDA_DROIDY_STDIO_PIPE_STDERR" value="1"/>
	</enumeration>
	<class name="DroidyDeviceTracker" c:type="FridaDroidyDeviceTracker" c:symbol-prefix="device_tracker" glib:type-name="FridaDroidyDeviceTracker" glib:get-type="frida_droidy_device_tracker_get_type" glib:type-struct="DroidyDeviceTrackerClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DroidyDeviceTrackerPrivate" c:type="FridaDroidyDeviceTrackerPrivate*"/>
		</field>
		<method name="open" c:identifier="frida_droidy_device_tracker_open">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.DeviceTracker" c:type="FridaDroidyDeviceTracker*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="open_finish" c:identifier="frida_droidy_device_tracker_open_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.DeviceTracker" c:type="FridaDroidyDeviceTracker*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close" c:identifier="frida_droidy_device_tracker_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.DeviceTracker" c:type="FridaDroidyDeviceTracker*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_droidy_device_tracker_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.DeviceTracker" c:type="FridaDroidyDeviceTracker*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_droidy_device_tracker_new">
			<return-value transfer-ownership="full">
				<type name="FridaDroidy.DeviceTracker" c:type="FridaDroidyDeviceTracker*"/>
			</return-value>
		</constructor>
		<glib:signal name="device-attached">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="details" transfer-ownership="none">
					<type name="FridaDroidy.DeviceDetails" c:type="FridaDroidyDeviceDetails*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="device-detached">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="serial" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="DroidyDeviceTrackerClass" c:type="FridaDroidyDeviceTrackerClass" glib:is-gtype-struct-for="DroidyDeviceTracker">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DroidyDeviceTrackerPrivate" c:type="FridaDroidyDeviceTrackerPrivate" disguised="1"/>
	<class name="DroidyDeviceDetails" c:type="FridaDroidyDeviceDetails" c:symbol-prefix="device_details" glib:type-name="FridaDroidyDeviceDetails" glib:get-type="frida_droidy_device_details_get_type" glib:type-struct="DroidyDeviceDetailsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DroidyDeviceDetailsPrivate" c:type="FridaDroidyDeviceDetailsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_droidy_device_details_new">
			<return-value transfer-ownership="full">
				<type name="FridaDroidy.DeviceDetails" c:type="FridaDroidyDeviceDetails*"/>
			</return-value>
			<parameters>
				<parameter name="serial" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="serial" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_serial" c:identifier="frida_droidy_device_details_get_serial">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.DeviceDetails" c:type="FridaDroidyDeviceDetails*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="name" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="frida_droidy_device_details_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.DeviceDetails" c:type="FridaDroidyDeviceDetails*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="DroidyDeviceDetailsClass" c:type="FridaDroidyDeviceDetailsClass" glib:is-gtype-struct-for="DroidyDeviceDetails">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DroidyDeviceDetailsPrivate" c:type="FridaDroidyDeviceDetailsPrivate" disguised="1"/>
	<class name="DroidyShellSession" c:type="FridaDroidyShellSession" c:symbol-prefix="shell_session" glib:type-name="FridaDroidyShellSession" glib:get-type="frida_droidy_shell_session_get_type" glib:type-struct="DroidyShellSessionClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DroidyShellSessionPrivate" c:type="FridaDroidyShellSessionPrivate*"/>
		</field>
		<method name="open" c:identifier="frida_droidy_shell_session_open">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.ShellSession" c:type="FridaDroidyShellSession*"/>
				</instance-parameter>
				<parameter name="device_serial" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="open_finish" c:identifier="frida_droidy_shell_session_open_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.ShellSession" c:type="FridaDroidyShellSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close" c:identifier="frida_droidy_shell_session_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.ShellSession" c:type="FridaDroidyShellSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_droidy_shell_session_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.ShellSession" c:type="FridaDroidyShellSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="check_call" c:identifier="frida_droidy_shell_session_check_call">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.ShellSession" c:type="FridaDroidyShellSession*"/>
				</instance-parameter>
				<parameter name="command" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="check_call_finish" c:identifier="frida_droidy_shell_session_check_call_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.ShellSession" c:type="FridaDroidyShellSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="check_output" c:identifier="frida_droidy_shell_session_check_output">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.ShellSession" c:type="FridaDroidyShellSession*"/>
				</instance-parameter>
				<parameter name="command" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="check_output_finish" c:identifier="frida_droidy_shell_session_check_output_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.ShellSession" c:type="FridaDroidyShellSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="run" c:identifier="frida_droidy_shell_session_run">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.ShellSession" c:type="FridaDroidyShellSession*"/>
				</instance-parameter>
				<parameter name="command" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="run_finish" c:identifier="frida_droidy_shell_session_run_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaDroidy.ShellCommandResult" c:type="FridaDroidyShellCommandResult*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.ShellSession" c:type="FridaDroidyShellSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="send_command" c:identifier="frida_droidy_shell_session_send_command" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.ShellSession" c:type="FridaDroidyShellSession*"/>
				</instance-parameter>
				<parameter name="command" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_droidy_shell_session_new">
			<return-value transfer-ownership="full">
				<type name="FridaDroidy.ShellSession" c:type="FridaDroidyShellSession*"/>
			</return-value>
		</constructor>
		<glib:signal name="output">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pipe" transfer-ownership="none">
					<type name="FridaDroidy.StdioPipe" c:type="FridaDroidyStdioPipe"/>
				</parameter>
				<parameter name="bytes" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="closed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</class>
	<record name="DroidyShellSessionClass" c:type="FridaDroidyShellSessionClass" glib:is-gtype-struct-for="DroidyShellSession">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DroidyShellSessionPrivate" c:type="FridaDroidyShellSessionPrivate" disguised="1"/>
	<class name="DroidyShellCommandResult" c:type="FridaDroidyShellCommandResult" c:symbol-prefix="shell_command_result" glib:type-name="FridaDroidyShellCommandResult" glib:get-type="frida_droidy_shell_command_result_get_type" glib:type-struct="DroidyShellCommandResultClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DroidyShellCommandResultPrivate" c:type="FridaDroidyShellCommandResultPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_droidy_shell_command_result_new">
			<return-value transfer-ownership="full">
				<type name="FridaDroidy.ShellCommandResult" c:type="FridaDroidyShellCommandResult*"/>
			</return-value>
			<parameters>
				<parameter name="status" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
				<parameter name="stdout_bytes" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="stderr_bytes" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="status" writable="1" construct-only="1">
			<type name="guint8" c:type="guint8"/>
		</property>
		<method name="get_status" c:identifier="frida_droidy_shell_command_result_get_status">
			<return-value transfer-ownership="none">
				<type name="guint8" c:type="guint8"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.ShellCommandResult" c:type="FridaDroidyShellCommandResult*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="stdout-text">
			<type name="utf8" c:type="const gchar*"/>
		</property>
		<method name="get_stdout_text" c:identifier="frida_droidy_shell_command_result_get_stdout_text">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.ShellCommandResult" c:type="FridaDroidyShellCommandResult*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="stdout-bytes" writable="1" construct-only="1">
			<type name="GLib.Bytes" c:type="GBytes*"/>
		</property>
		<method name="get_stdout_bytes" c:identifier="frida_droidy_shell_command_result_get_stdout_bytes">
			<return-value transfer-ownership="none">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.ShellCommandResult" c:type="FridaDroidyShellCommandResult*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="stderr-text">
			<type name="utf8" c:type="const gchar*"/>
		</property>
		<method name="get_stderr_text" c:identifier="frida_droidy_shell_command_result_get_stderr_text">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.ShellCommandResult" c:type="FridaDroidyShellCommandResult*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="stderr-bytes" writable="1" construct-only="1">
			<type name="GLib.Bytes" c:type="GBytes*"/>
		</property>
		<method name="get_stderr_bytes" c:identifier="frida_droidy_shell_command_result_get_stderr_bytes">
			<return-value transfer-ownership="none">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.ShellCommandResult" c:type="FridaDroidyShellCommandResult*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="DroidyShellCommandResultClass" c:type="FridaDroidyShellCommandResultClass" glib:is-gtype-struct-for="DroidyShellCommandResult">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DroidyShellCommandResultPrivate" c:type="FridaDroidyShellCommandResultPrivate" disguised="1"/>
	<class name="DroidyFileMetadata" c:type="FridaDroidyFileMetadata" c:symbol-prefix="file_metadata" glib:type-name="FridaDroidyFileMetadata" glib:get-type="frida_droidy_file_metadata_get_type" glib:type-struct="DroidyFileMetadataClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DroidyFileMetadataPrivate" c:type="FridaDroidyFileMetadataPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_droidy_file_metadata_new">
			<return-value transfer-ownership="full">
				<type name="FridaDroidy.FileMetadata" c:type="FridaDroidyFileMetadata*"/>
			</return-value>
		</constructor>
		<property name="mode" writable="1">
			<type name="guint32" c:type="guint32"/>
		</property>
		<method name="get_mode" c:identifier="frida_droidy_file_metadata_get_mode">
			<return-value transfer-ownership="none">
				<type name="guint32" c:type="guint32"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.FileMetadata" c:type="FridaDroidyFileMetadata*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_mode" c:identifier="frida_droidy_file_metadata_set_mode">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.FileMetadata" c:type="FridaDroidyFileMetadata*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint32" c:type="guint32"/>
				</parameter>
			</parameters>
		</method>
		<property name="time-modified" writable="1">
			<type name="GLib.DateTime" c:type="GDateTime*"/>
		</property>
		<method name="get_time_modified" c:identifier="frida_droidy_file_metadata_get_time_modified">
			<return-value transfer-ownership="none">
				<type name="GLib.DateTime" c:type="GDateTime*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.FileMetadata" c:type="FridaDroidyFileMetadata*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_time_modified" c:identifier="frida_droidy_file_metadata_set_time_modified">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.FileMetadata" c:type="FridaDroidyFileMetadata*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.DateTime" c:type="GDateTime*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="DroidyFileMetadataClass" c:type="FridaDroidyFileMetadataClass" glib:is-gtype-struct-for="DroidyFileMetadata">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DroidyFileMetadataPrivate" c:type="FridaDroidyFileMetadataPrivate" disguised="1"/>
	<class name="DroidyJDWPTracker" c:type="FridaDroidyJDWPTracker" c:symbol-prefix="jdwp_tracker" glib:type-name="FridaDroidyJDWPTracker" glib:get-type="frida_droidy_jdwp_tracker_get_type" glib:type-struct="DroidyJDWPTrackerClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DroidyJDWPTrackerPrivate" c:type="FridaDroidyJDWPTrackerPrivate*"/>
		</field>
		<method name="open" c:identifier="frida_droidy_jdwp_tracker_open">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.JDWPTracker" c:type="FridaDroidyJDWPTracker*"/>
				</instance-parameter>
				<parameter name="device_serial" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="open_finish" c:identifier="frida_droidy_jdwp_tracker_open_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.JDWPTracker" c:type="FridaDroidyJDWPTracker*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close" c:identifier="frida_droidy_jdwp_tracker_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.JDWPTracker" c:type="FridaDroidyJDWPTracker*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_droidy_jdwp_tracker_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.JDWPTracker" c:type="FridaDroidyJDWPTracker*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_droidy_jdwp_tracker_new">
			<return-value transfer-ownership="full">
				<type name="FridaDroidy.JDWPTracker" c:type="FridaDroidyJDWPTracker*"/>
			</return-value>
		</constructor>
		<glib:signal name="debugger-attached">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="debugger-detached">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="DroidyJDWPTrackerClass" c:type="FridaDroidyJDWPTrackerClass" glib:is-gtype-struct-for="DroidyJDWPTracker">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DroidyJDWPTrackerPrivate" c:type="FridaDroidyJDWPTrackerPrivate" disguised="1"/>
	<class name="DroidyClient" c:type="FridaDroidyClient" c:symbol-prefix="client" glib:type-name="FridaDroidyClient" glib:get-type="frida_droidy_client_get_type" glib:type-struct="DroidyClientClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DroidyClientPrivate" c:type="FridaDroidyClientPrivate*"/>
		</field>
		<field name="is_processing_messages" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<function name="open" c:identifier="frida_droidy_client_open">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="open_finish" c:identifier="frida_droidy_client_open_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaDroidy.Client" c:type="FridaDroidyClient*"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<constructor name="new" c:identifier="frida_droidy_client_new">
			<return-value transfer-ownership="full">
				<type name="FridaDroidy.Client" c:type="FridaDroidyClient*"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.IOStream" c:type="GIOStream*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="close" c:identifier="frida_droidy_client_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.Client" c:type="FridaDroidyClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_droidy_client_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.Client" c:type="FridaDroidyClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request" c:identifier="frida_droidy_client_request">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.Client" c:type="FridaDroidyClient*"/>
				</instance-parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request_finish" c:identifier="frida_droidy_client_request_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.Client" c:type="FridaDroidyClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request_data" c:identifier="frida_droidy_client_request_data">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.Client" c:type="FridaDroidyClient*"/>
				</instance-parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request_data_finish" c:identifier="frida_droidy_client_request_data_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.Client" c:type="FridaDroidyClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request_protocol_change" c:identifier="frida_droidy_client_request_protocol_change">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.Client" c:type="FridaDroidyClient*"/>
				</instance-parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request_protocol_change_finish" c:identifier="frida_droidy_client_request_protocol_change_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.Client" c:type="FridaDroidyClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request_sync_session" c:identifier="frida_droidy_client_request_sync_session">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.Client" c:type="FridaDroidyClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request_sync_session_finish" c:identifier="frida_droidy_client_request_sync_session_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaDroidy.SyncSession" c:type="FridaDroidySyncSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.Client" c:type="FridaDroidyClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request_with_bytes" c:identifier="frida_droidy_client_request_with_bytes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.Client" c:type="FridaDroidyClient*"/>
				</instance-parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="request_type" transfer-ownership="none">
					<type name="Frida.FridaDroidyClientRequestType" c:type="FridaDroidyClientRequestType"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request_with_bytes_finish" c:identifier="frida_droidy_client_request_with_bytes_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.Client" c:type="FridaDroidyClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="stream" writable="1" construct-only="1">
			<type name="Gio.IOStream" c:type="GIOStream*"/>
		</property>
		<method name="get_stream" c:identifier="frida_droidy_client_get_stream">
			<return-value transfer-ownership="none">
				<type name="Gio.IOStream" c:type="GIOStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.Client" c:type="FridaDroidyClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="closed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="message">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="payload" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="DroidyClientClass" c:type="FridaDroidyClientClass" glib:is-gtype-struct-for="DroidyClient">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DroidyClientPrivate" c:type="FridaDroidyClientPrivate" disguised="1"/>
	<enumeration name="DroidyClientRequestType" c:type="FridaDroidyClientRequestType" glib:type-name="FridaDroidyClientRequestType" glib:get-type="frida_droidy_client_request_type_get_type">
		<member name="command" c:identifier="FRIDA_DROIDY_CLIENT_REQUEST_TYPE_COMMAND" value="0"/>
		<member name="sync" c:identifier="FRIDA_DROIDY_CLIENT_REQUEST_TYPE_SYNC" value="1"/>
		<member name="data" c:identifier="FRIDA_DROIDY_CLIENT_REQUEST_TYPE_DATA" value="2"/>
		<member name="protocol_change" c:identifier="FRIDA_DROIDY_CLIENT_REQUEST_TYPE_PROTOCOL_CHANGE" value="3"/>
	</enumeration>
	<class name="DroidySyncSession" c:type="FridaDroidySyncSession" c:symbol-prefix="sync_session" glib:type-name="FridaDroidySyncSession" glib:get-type="frida_droidy_sync_session_get_type" glib:type-struct="DroidySyncSessionClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DroidySyncSessionPrivate" c:type="FridaDroidySyncSessionPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_droidy_sync_session_new">
			<return-value transfer-ownership="full">
				<type name="FridaDroidy.SyncSession" c:type="FridaDroidySyncSession*"/>
			</return-value>
			<parameters>
				<parameter name="client" transfer-ownership="none">
					<type name="FridaDroidy.Client" c:type="FridaDroidyClient*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="send" c:identifier="frida_droidy_sync_session_send">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.SyncSession" c:type="FridaDroidySyncSession*"/>
				</instance-parameter>
				<parameter name="chunk" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="send_finish" c:identifier="frida_droidy_sync_session_send_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.SyncSession" c:type="FridaDroidySyncSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="finish" c:identifier="frida_droidy_sync_session_finish">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.SyncSession" c:type="FridaDroidySyncSession*"/>
				</instance-parameter>
				<parameter name="chunk" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="finish_finish" c:identifier="frida_droidy_sync_session_finish_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.SyncSession" c:type="FridaDroidySyncSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="client" writable="1" construct-only="1">
			<type name="FridaDroidy.Client" c:type="FridaDroidyClient*"/>
		</property>
		<method name="get_client" c:identifier="frida_droidy_sync_session_get_client">
			<return-value transfer-ownership="none">
				<type name="FridaDroidy.Client" c:type="FridaDroidyClient*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaDroidy.SyncSession" c:type="FridaDroidySyncSession*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="DroidySyncSessionClass" c:type="FridaDroidySyncSessionClass" glib:is-gtype-struct-for="DroidySyncSession">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DroidySyncSessionPrivate" c:type="FridaDroidySyncSessionPrivate" disguised="1"/>
	<enumeration name="JDWPTypeTag" c:type="FridaJDWPTypeTag" glib:type-name="FridaJDWPTypeTag" glib:get-type="frida_jdwp_type_tag_get_type">
		<member name="class" c:identifier="FRIDA_JDWP_TYPE_TAG_CLASS" value="1"/>
		<member name="interface" c:identifier="FRIDA_JDWP_TYPE_TAG_INTERFACE" value="2"/>
		<member name="array" c:identifier="FRIDA_JDWP_TYPE_TAG_ARRAY" value="3"/>
	</enumeration>
	<function name="jdwp_type_tag_to_short_string" c:identifier="frida_jdwp_type_tag_to_short_string">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="FridaJDWP.TypeTag" c:type="FridaJDWPTypeTag"/>
			</instance-parameter>
		</parameters>
	</function>
	<enumeration name="JDWPValueTag" c:type="FridaJDWPValueTag" glib:type-name="FridaJDWPValueTag" glib:get-type="frida_jdwp_value_tag_get_type">
		<member name="byte" c:identifier="FRIDA_JDWP_VALUE_TAG_BYTE" value="66"/>
		<member name="char" c:identifier="FRIDA_JDWP_VALUE_TAG_CHAR" value="67"/>
		<member name="double" c:identifier="FRIDA_JDWP_VALUE_TAG_DOUBLE" value="68"/>
		<member name="float" c:identifier="FRIDA_JDWP_VALUE_TAG_FLOAT" value="70"/>
		<member name="int" c:identifier="FRIDA_JDWP_VALUE_TAG_INT" value="73"/>
		<member name="long" c:identifier="FRIDA_JDWP_VALUE_TAG_LONG" value="74"/>
		<member name="object" c:identifier="FRIDA_JDWP_VALUE_TAG_OBJECT" value="76"/>
		<member name="short" c:identifier="FRIDA_JDWP_VALUE_TAG_SHORT" value="83"/>
		<member name="void" c:identifier="FRIDA_JDWP_VALUE_TAG_VOID" value="86"/>
		<member name="boolean" c:identifier="FRIDA_JDWP_VALUE_TAG_BOOLEAN" value="90"/>
		<member name="array" c:identifier="FRIDA_JDWP_VALUE_TAG_ARRAY" value="91"/>
		<member name="class_object" c:identifier="FRIDA_JDWP_VALUE_TAG_CLASS_OBJECT" value="99"/>
		<member name="thread_group" c:identifier="FRIDA_JDWP_VALUE_TAG_THREAD_GROUP" value="103"/>
		<member name="class_loader" c:identifier="FRIDA_JDWP_VALUE_TAG_CLASS_LOADER" value="108"/>
		<member name="string" c:identifier="FRIDA_JDWP_VALUE_TAG_STRING" value="115"/>
		<member name="thread" c:identifier="FRIDA_JDWP_VALUE_TAG_THREAD" value="116"/>
	</enumeration>
	<bitfield name="JDWPClassStatus" c:type="FridaJDWPClassStatus" glib:type-name="FridaJDWPClassStatus" glib:get-type="frida_jdwp_class_status_get_type">
		<member name="verified" c:identifier="FRIDA_JDWP_CLASS_STATUS_VERIFIED" value="(NULL)"/>
		<member name="prepared" c:identifier="FRIDA_JDWP_CLASS_STATUS_PREPARED" value="(NULL)"/>
		<member name="initialized" c:identifier="FRIDA_JDWP_CLASS_STATUS_INITIALIZED" value="(NULL)"/>
		<member name="error" c:identifier="FRIDA_JDWP_CLASS_STATUS_ERROR" value="(NULL)"/>
	</bitfield>
	<function name="jdwp_class_status_to_short_string" c:identifier="frida_jdwp_class_status_to_short_string">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="FridaJDWP.ClassStatus" c:type="FridaJDWPClassStatus"/>
			</instance-parameter>
		</parameters>
	</function>
	<bitfield name="JDWPInvokeOptions" c:type="FridaJDWPInvokeOptions" glib:type-name="FridaJDWPInvokeOptions" glib:get-type="frida_jdwp_invoke_options_get_type">
		<member name="invoke_single_threaded" c:identifier="FRIDA_JDWP_INVOKE_OPTIONS_INVOKE_SINGLE_THREADED" value="0x01"/>
		<member name="invoke_nonvirtual" c:identifier="FRIDA_JDWP_INVOKE_OPTIONS_INVOKE_NONVIRTUAL" value="0x02"/>
	</bitfield>
	<enumeration name="JDWPEventKind" c:type="FridaJDWPEventKind" glib:type-name="FridaJDWPEventKind" glib:get-type="frida_jdwp_event_kind_get_type">
		<member name="single_step" c:identifier="FRIDA_JDWP_EVENT_KIND_SINGLE_STEP" value="1"/>
		<member name="breakpoint" c:identifier="FRIDA_JDWP_EVENT_KIND_BREAKPOINT" value="2"/>
		<member name="frame_pop" c:identifier="FRIDA_JDWP_EVENT_KIND_FRAME_POP" value="3"/>
		<member name="exception" c:identifier="FRIDA_JDWP_EVENT_KIND_EXCEPTION" value="4"/>
		<member name="user_defined" c:identifier="FRIDA_JDWP_EVENT_KIND_USER_DEFINED" value="5"/>
		<member name="thread_start" c:identifier="FRIDA_JDWP_EVENT_KIND_THREAD_START" value="6"/>
		<member name="thread_death" c:identifier="FRIDA_JDWP_EVENT_KIND_THREAD_DEATH" value="7"/>
		<member name="class_prepare" c:identifier="FRIDA_JDWP_EVENT_KIND_CLASS_PREPARE" value="8"/>
		<member name="class_unload" c:identifier="FRIDA_JDWP_EVENT_KIND_CLASS_UNLOAD" value="9"/>
		<member name="class_load" c:identifier="FRIDA_JDWP_EVENT_KIND_CLASS_LOAD" value="10"/>
		<member name="field_access" c:identifier="FRIDA_JDWP_EVENT_KIND_FIELD_ACCESS" value="20"/>
		<member name="field_modification" c:identifier="FRIDA_JDWP_EVENT_KIND_FIELD_MODIFICATION" value="21"/>
		<member name="exception_catch" c:identifier="FRIDA_JDWP_EVENT_KIND_EXCEPTION_CATCH" value="30"/>
		<member name="method_entry" c:identifier="FRIDA_JDWP_EVENT_KIND_METHOD_ENTRY" value="40"/>
		<member name="method_exit" c:identifier="FRIDA_JDWP_EVENT_KIND_METHOD_EXIT" value="41"/>
		<member name="method_exit_with_return_value" c:identifier="FRIDA_JDWP_EVENT_KIND_METHOD_EXIT_WITH_RETURN_VALUE" value="42"/>
		<member name="monitor_contended_enter" c:identifier="FRIDA_JDWP_EVENT_KIND_MONITOR_CONTENDED_ENTER" value="43"/>
		<member name="monitor_contended_entered" c:identifier="FRIDA_JDWP_EVENT_KIND_MONITOR_CONTENDED_ENTERED" value="44"/>
		<member name="monitor_wait" c:identifier="FRIDA_JDWP_EVENT_KIND_MONITOR_WAIT" value="45"/>
		<member name="monitor_waited" c:identifier="FRIDA_JDWP_EVENT_KIND_MONITOR_WAITED" value="46"/>
		<member name="vm_start" c:identifier="FRIDA_JDWP_EVENT_KIND_VM_START" value="90"/>
		<member name="vm_death" c:identifier="FRIDA_JDWP_EVENT_KIND_VM_DEATH" value="99"/>
		<member name="vm_disconnected" c:identifier="FRIDA_JDWP_EVENT_KIND_VM_DISCONNECTED" value="100"/>
	</enumeration>
	<enumeration name="JDWPSuspendPolicy" c:type="FridaJDWPSuspendPolicy" glib:type-name="FridaJDWPSuspendPolicy" glib:get-type="frida_jdwp_suspend_policy_get_type">
		<member name="none" c:identifier="FRIDA_JDWP_SUSPEND_POLICY_NONE" value="0"/>
		<member name="event_thread" c:identifier="FRIDA_JDWP_SUSPEND_POLICY_EVENT_THREAD" value="1"/>
		<member name="all" c:identifier="FRIDA_JDWP_SUSPEND_POLICY_ALL" value="2"/>
	</enumeration>
	<enumeration name="JDWPStepSize" c:type="FridaJDWPStepSize" glib:type-name="FridaJDWPStepSize" glib:get-type="frida_jdwp_step_size_get_type">
		<member name="min" c:identifier="FRIDA_JDWP_STEP_SIZE_MIN" value="0"/>
		<member name="line" c:identifier="FRIDA_JDWP_STEP_SIZE_LINE" value="1"/>
	</enumeration>
	<enumeration name="JDWPStepDepth" c:type="FridaJDWPStepDepth" glib:type-name="FridaJDWPStepDepth" glib:get-type="frida_jdwp_step_depth_get_type">
		<member name="into" c:identifier="FRIDA_JDWP_STEP_DEPTH_INTO" value="0"/>
		<member name="over" c:identifier="FRIDA_JDWP_STEP_DEPTH_OVER" value="1"/>
		<member name="out" c:identifier="FRIDA_JDWP_STEP_DEPTH_OUT" value="2"/>
	</enumeration>
	<class name="JDWPClient" c:type="FridaJDWPClient" c:symbol-prefix="client" glib:type-name="FridaJDWPClient" glib:get-type="frida_jdwp_client_get_type" glib:type-struct="JDWPClientClass" parent="GObject.Object">
		<implements name="Gio.AsyncInitable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPClientPrivate" c:type="FridaJDWPClientPrivate*"/>
		</field>
		<function name="open" c:identifier="frida_jdwp_client_open">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.IOStream" c:type="GIOStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="open_finish" c:identifier="frida_jdwp_client_open_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<method name="close" c:identifier="frida_jdwp_client_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_jdwp_client_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="suspend" c:identifier="frida_jdwp_client_suspend">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="suspend_finish" c:identifier="frida_jdwp_client_suspend_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="resume" c:identifier="frida_jdwp_client_resume">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="resume_finish" c:identifier="frida_jdwp_client_resume_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_string" c:identifier="frida_jdwp_client_create_string">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_string_finish" c:identifier="frida_jdwp_client_create_string_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.String" c:type="FridaJDWPString*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_string" c:identifier="frida_jdwp_client_read_string">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_string_finish" c:identifier="frida_jdwp_client_read_string_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_class_by_signature" c:identifier="frida_jdwp_client_get_class_by_signature">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="signature" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_class_by_signature_finish" c:identifier="frida_jdwp_client_get_class_by_signature_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.ClassInfo" c:type="FridaJDWPClassInfo*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_classes_by_signature" c:identifier="frida_jdwp_client_get_classes_by_signature">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="signature" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_classes_by_signature_finish" c:identifier="frida_jdwp_client_get_classes_by_signature_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="FridaJDWP.ClassInfo" c:type="FridaJDWPClassInfo*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_methods" c:identifier="frida_jdwp_client_get_methods">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="FridaJDWP.ReferenceTypeID" c:type="FridaJDWPReferenceTypeID"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_methods_finish" c:identifier="frida_jdwp_client_get_methods_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="FridaJDWP.MethodInfo" c:type="FridaJDWPMethodInfo*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="invoke_static_method" c:identifier="frida_jdwp_client_invoke_static_method">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="ref_type" transfer-ownership="none">
					<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
				<parameter name="method" transfer-ownership="none">
					<type name="FridaJDWP.MethodID" c:type="FridaJDWPMethodID"/>
				</parameter>
				<parameter name="arguments" transfer-ownership="none">
					<array length="4" c:type="FridaJDWPValue**">
						<type name="FridaJDWP.Value" c:type="FridaJDWPValue*"/>
					</array>
				</parameter>
				<parameter name="arguments_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="FridaJDWP.InvokeOptions" c:type="FridaJDWPInvokeOptions"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="8" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="invoke_static_method_finish" c:identifier="frida_jdwp_client_invoke_static_method_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.Value" c:type="FridaJDWPValue*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="invoke_instance_method" c:identifier="frida_jdwp_client_invoke_instance_method">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="object" transfer-ownership="none">
					<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
				<parameter name="clazz" transfer-ownership="none">
					<type name="FridaJDWP.ReferenceTypeID" c:type="FridaJDWPReferenceTypeID"/>
				</parameter>
				<parameter name="method" transfer-ownership="none">
					<type name="FridaJDWP.MethodID" c:type="FridaJDWPMethodID"/>
				</parameter>
				<parameter name="arguments" transfer-ownership="none">
					<array length="5" c:type="FridaJDWPValue**">
						<type name="FridaJDWP.Value" c:type="FridaJDWPValue*"/>
					</array>
				</parameter>
				<parameter name="arguments_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="FridaJDWP.InvokeOptions" c:type="FridaJDWPInvokeOptions"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="9" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="invoke_instance_method_finish" c:identifier="frida_jdwp_client_invoke_instance_method_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.Value" c:type="FridaJDWPValue*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_event_request" c:identifier="frida_jdwp_client_set_event_request">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="kind" transfer-ownership="none">
					<type name="FridaJDWP.EventKind" c:type="FridaJDWPEventKind"/>
				</parameter>
				<parameter name="suspend_policy" transfer-ownership="none">
					<type name="FridaJDWP.SuspendPolicy" c:type="FridaJDWPSuspendPolicy"/>
				</parameter>
				<parameter name="modifiers" transfer-ownership="none">
					<array length="3" c:type="FridaJDWPEventModifier**">
						<type name="FridaJDWP.EventModifier" c:type="FridaJDWPEventModifier*"/>
					</array>
				</parameter>
				<parameter name="modifiers_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_event_request_finish" c:identifier="frida_jdwp_client_set_event_request_finish" throws="1">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result" direction="out" transfer-ownership="full" caller-allocates="1">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID*"/>
				</parameter>
			</parameters>
		</method>
		<method name="clear_event_request" c:identifier="frida_jdwp_client_clear_event_request">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="kind" transfer-ownership="none">
					<type name="FridaJDWP.EventKind" c:type="FridaJDWPEventKind"/>
				</parameter>
				<parameter name="request_id" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="clear_event_request_finish" c:identifier="frida_jdwp_client_clear_event_request_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="clear_all_breakpoints" c:identifier="frida_jdwp_client_clear_all_breakpoints">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="clear_all_breakpoints_finish" c:identifier="frida_jdwp_client_clear_all_breakpoints_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="stream" writable="1" construct-only="1">
			<type name="Gio.IOStream" c:type="GIOStream*"/>
		</property>
		<method name="get_stream" c:identifier="frida_jdwp_client_get_stream">
			<return-value transfer-ownership="none">
				<type name="Gio.IOStream" c:type="GIOStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="state">
			<type name="Frida.FridaJDWPClientState" c:type="FridaJDWPClientState"/>
		</property>
		<method name="get_state" c:identifier="frida_jdwp_client_get_state">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaJDWPClientState" c:type="FridaJDWPClientState"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Client" c:type="FridaJDWPClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="closed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="events-received">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="events" transfer-ownership="none">
					<type name="FridaJDWP.Events" c:type="FridaJDWPEvents*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="JDWPClientClass" c:type="FridaJDWPClientClass" glib:is-gtype-struct-for="JDWPClient">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="JDWPClientPrivate" c:type="FridaJDWPClientPrivate" disguised="1"/>
	<enumeration name="JDWPClientState" c:type="FridaJDWPClientState" glib:type-name="FridaJDWPClientState" glib:get-type="frida_jdwp_client_state_get_type">
		<member name="created" c:identifier="FRIDA_JDWP_CLIENT_STATE_CREATED" value="0"/>
		<member name="ready" c:identifier="FRIDA_JDWP_CLIENT_STATE_READY" value="1"/>
		<member name="closed" c:identifier="FRIDA_JDWP_CLIENT_STATE_CLOSED" value="2"/>
	</enumeration>
	<class name="JDWPValue" c:type="FridaJDWPValue" c:symbol-prefix="value" glib:type-name="FridaJDWPValue" glib:get-type="frida_jdwp_value_get_type" glib:type-struct="JDWPValueClass" parent="GObject.Object" abstract="1">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPValuePrivate" c:type="FridaJDWPValuePrivate*"/>
		</field>
		<method name="to_string" c:identifier="frida_jdwp_value_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Value" c:type="FridaJDWPValue*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Value" c:type="FridaJDWPValue*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="tag" writable="1" construct-only="1">
			<type name="FridaJDWP.ValueTag" c:type="FridaJDWPValueTag"/>
		</property>
		<method name="get_tag" c:identifier="frida_jdwp_value_get_tag">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.ValueTag" c:type="FridaJDWPValueTag"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Value" c:type="FridaJDWPValue*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPValueClass" c:type="FridaJDWPValueClass" glib:is-gtype-struct-for="JDWPValue">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaJDWP.Value" c:type="FridaJDWPValue*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="JDWPValuePrivate" c:type="FridaJDWPValuePrivate" disguised="1"/>
	<class name="JDWPByte" c:type="FridaJDWPByte" c:symbol-prefix="byte" glib:type-name="FridaJDWPByte" glib:get-type="frida_jdwp_byte_get_type" glib:type-struct="JDWPByteClass" parent="FridaJDWP.Value">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Value" c:type="FridaJDWPValue"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPBytePrivate" c:type="FridaJDWPBytePrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_byte_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.Byte" c:type="FridaJDWPByte*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="val" writable="1" construct-only="1">
			<type name="guint8" c:type="guint8"/>
		</property>
		<method name="get_val" c:identifier="frida_jdwp_byte_get_val">
			<return-value transfer-ownership="none">
				<type name="guint8" c:type="guint8"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Byte" c:type="FridaJDWPByte*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPByteClass" c:type="FridaJDWPByteClass" glib:is-gtype-struct-for="JDWPByte">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.ValueClass" c:type="FridaJDWPValueClass"/>
		</field>
	</record>
	<record name="JDWPBytePrivate" c:type="FridaJDWPBytePrivate" disguised="1"/>
	<class name="JDWPChar" c:type="FridaJDWPChar" c:symbol-prefix="char" glib:type-name="FridaJDWPChar" glib:get-type="frida_jdwp_char_get_type" glib:type-struct="JDWPCharClass" parent="FridaJDWP.Value">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Value" c:type="FridaJDWPValue"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPCharPrivate" c:type="FridaJDWPCharPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_char_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.Char" c:type="FridaJDWPChar*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="val" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_val" c:identifier="frida_jdwp_char_get_val">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Char" c:type="FridaJDWPChar*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPCharClass" c:type="FridaJDWPCharClass" glib:is-gtype-struct-for="JDWPChar">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.ValueClass" c:type="FridaJDWPValueClass"/>
		</field>
	</record>
	<record name="JDWPCharPrivate" c:type="FridaJDWPCharPrivate" disguised="1"/>
	<class name="JDWPDouble" c:type="FridaJDWPDouble" c:symbol-prefix="double" glib:type-name="FridaJDWPDouble" glib:get-type="frida_jdwp_double_get_type" glib:type-struct="JDWPDoubleClass" parent="FridaJDWP.Value">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Value" c:type="FridaJDWPValue"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPDoublePrivate" c:type="FridaJDWPDoublePrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_double_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.Double" c:type="FridaJDWPDouble*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="val" writable="1" construct-only="1">
			<type name="gdouble" c:type="gdouble"/>
		</property>
		<method name="get_val" c:identifier="frida_jdwp_double_get_val">
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Double" c:type="FridaJDWPDouble*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPDoubleClass" c:type="FridaJDWPDoubleClass" glib:is-gtype-struct-for="JDWPDouble">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.ValueClass" c:type="FridaJDWPValueClass"/>
		</field>
	</record>
	<record name="JDWPDoublePrivate" c:type="FridaJDWPDoublePrivate" disguised="1"/>
	<class name="JDWPFloat" c:type="FridaJDWPFloat" c:symbol-prefix="float" glib:type-name="FridaJDWPFloat" glib:get-type="frida_jdwp_float_get_type" glib:type-struct="JDWPFloatClass" parent="FridaJDWP.Value">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Value" c:type="FridaJDWPValue"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPFloatPrivate" c:type="FridaJDWPFloatPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_float_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.Float" c:type="FridaJDWPFloat*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="gfloat" c:type="gfloat"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="val" writable="1" construct-only="1">
			<type name="gfloat" c:type="gfloat"/>
		</property>
		<method name="get_val" c:identifier="frida_jdwp_float_get_val">
			<return-value transfer-ownership="none">
				<type name="gfloat" c:type="gfloat"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Float" c:type="FridaJDWPFloat*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPFloatClass" c:type="FridaJDWPFloatClass" glib:is-gtype-struct-for="JDWPFloat">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.ValueClass" c:type="FridaJDWPValueClass"/>
		</field>
	</record>
	<record name="JDWPFloatPrivate" c:type="FridaJDWPFloatPrivate" disguised="1"/>
	<class name="JDWPInt" c:type="FridaJDWPInt" c:symbol-prefix="int" glib:type-name="FridaJDWPInt" glib:get-type="frida_jdwp_int_get_type" glib:type-struct="JDWPIntClass" parent="FridaJDWP.Value">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Value" c:type="FridaJDWPValue"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPIntPrivate" c:type="FridaJDWPIntPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_int_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.Int" c:type="FridaJDWPInt*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="gint32" c:type="gint32"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="val" writable="1" construct-only="1">
			<type name="gint32" c:type="gint32"/>
		</property>
		<method name="get_val" c:identifier="frida_jdwp_int_get_val">
			<return-value transfer-ownership="none">
				<type name="gint32" c:type="gint32"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Int" c:type="FridaJDWPInt*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPIntClass" c:type="FridaJDWPIntClass" glib:is-gtype-struct-for="JDWPInt">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.ValueClass" c:type="FridaJDWPValueClass"/>
		</field>
	</record>
	<record name="JDWPIntPrivate" c:type="FridaJDWPIntPrivate" disguised="1"/>
	<class name="JDWPLong" c:type="FridaJDWPLong" c:symbol-prefix="long" glib:type-name="FridaJDWPLong" glib:get-type="frida_jdwp_long_get_type" glib:type-struct="JDWPLongClass" parent="FridaJDWP.Value">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Value" c:type="FridaJDWPValue"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPLongPrivate" c:type="FridaJDWPLongPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_long_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.Long" c:type="FridaJDWPLong*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="val" writable="1" construct-only="1">
			<type name="gint64" c:type="gint64"/>
		</property>
		<method name="get_val" c:identifier="frida_jdwp_long_get_val">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Long" c:type="FridaJDWPLong*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPLongClass" c:type="FridaJDWPLongClass" glib:is-gtype-struct-for="JDWPLong">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.ValueClass" c:type="FridaJDWPValueClass"/>
		</field>
	</record>
	<record name="JDWPLongPrivate" c:type="FridaJDWPLongPrivate" disguised="1"/>
	<class name="JDWPObject" c:type="FridaJDWPObject" c:symbol-prefix="object" glib:type-name="FridaJDWPObject" glib:get-type="frida_jdwp_object_get_type" glib:type-struct="JDWPObjectClass" parent="FridaJDWP.Value">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Value" c:type="FridaJDWPValue"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPObjectPrivate" c:type="FridaJDWPObjectPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_object_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.Object" c:type="FridaJDWPObject*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="val" writable="1" construct-only="1">
			<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID"/>
		</property>
		<method name="get_val" c:identifier="frida_jdwp_object_get_val">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Object" c:type="FridaJDWPObject*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPObjectClass" c:type="FridaJDWPObjectClass" glib:is-gtype-struct-for="JDWPObject">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.ValueClass" c:type="FridaJDWPValueClass"/>
		</field>
	</record>
	<record name="JDWPObjectPrivate" c:type="FridaJDWPObjectPrivate" disguised="1"/>
	<class name="JDWPShort" c:type="FridaJDWPShort" c:symbol-prefix="short" glib:type-name="FridaJDWPShort" glib:get-type="frida_jdwp_short_get_type" glib:type-struct="JDWPShortClass" parent="FridaJDWP.Value">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Value" c:type="FridaJDWPValue"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPShortPrivate" c:type="FridaJDWPShortPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_short_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.Short" c:type="FridaJDWPShort*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="gint16" c:type="gint16"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="val" writable="1" construct-only="1">
			<type name="gint16" c:type="gint16"/>
		</property>
		<method name="get_val" c:identifier="frida_jdwp_short_get_val">
			<return-value transfer-ownership="none">
				<type name="gint16" c:type="gint16"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Short" c:type="FridaJDWPShort*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPShortClass" c:type="FridaJDWPShortClass" glib:is-gtype-struct-for="JDWPShort">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.ValueClass" c:type="FridaJDWPValueClass"/>
		</field>
	</record>
	<record name="JDWPShortPrivate" c:type="FridaJDWPShortPrivate" disguised="1"/>
	<class name="JDWPVoid" c:type="FridaJDWPVoid" c:symbol-prefix="void" glib:type-name="FridaJDWPVoid" glib:get-type="frida_jdwp_void_get_type" glib:type-struct="JDWPVoidClass" parent="FridaJDWP.Value">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Value" c:type="FridaJDWPValue"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPVoidPrivate" c:type="FridaJDWPVoidPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_void_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.Void" c:type="FridaJDWPVoid*"/>
			</return-value>
		</constructor>
	</class>
	<record name="JDWPVoidClass" c:type="FridaJDWPVoidClass" glib:is-gtype-struct-for="JDWPVoid">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.ValueClass" c:type="FridaJDWPValueClass"/>
		</field>
	</record>
	<record name="JDWPVoidPrivate" c:type="FridaJDWPVoidPrivate" disguised="1"/>
	<class name="JDWPBoolean" c:type="FridaJDWPBoolean" c:symbol-prefix="boolean" glib:type-name="FridaJDWPBoolean" glib:get-type="frida_jdwp_boolean_get_type" glib:type-struct="JDWPBooleanClass" parent="FridaJDWP.Value">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Value" c:type="FridaJDWPValue"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPBooleanPrivate" c:type="FridaJDWPBooleanPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_boolean_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.Boolean" c:type="FridaJDWPBoolean*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="val" writable="1" construct-only="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_val" c:identifier="frida_jdwp_boolean_get_val">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Boolean" c:type="FridaJDWPBoolean*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPBooleanClass" c:type="FridaJDWPBooleanClass" glib:is-gtype-struct-for="JDWPBoolean">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.ValueClass" c:type="FridaJDWPValueClass"/>
		</field>
	</record>
	<record name="JDWPBooleanPrivate" c:type="FridaJDWPBooleanPrivate" disguised="1"/>
	<class name="JDWPArray" c:type="FridaJDWPArray" c:symbol-prefix="array" glib:type-name="FridaJDWPArray" glib:get-type="frida_jdwp_array_get_type" glib:type-struct="JDWPArrayClass" parent="FridaJDWP.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Object" c:type="FridaJDWPObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPArrayPrivate" c:type="FridaJDWPArrayPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_array_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.Array" c:type="FridaJDWPArray*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="JDWPArrayClass" c:type="FridaJDWPArrayClass" glib:is-gtype-struct-for="JDWPArray">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.ObjectClass" c:type="FridaJDWPObjectClass"/>
		</field>
	</record>
	<record name="JDWPArrayPrivate" c:type="FridaJDWPArrayPrivate" disguised="1"/>
	<class name="JDWPClassObject" c:type="FridaJDWPClassObject" c:symbol-prefix="class_object" glib:type-name="FridaJDWPClassObject" glib:get-type="frida_jdwp_class_object_get_type" glib:type-struct="JDWPClassObjectClass" parent="FridaJDWP.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Object" c:type="FridaJDWPObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPClassObjectPrivate" c:type="FridaJDWPClassObjectPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_class_object_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.ClassObject" c:type="FridaJDWPClassObject*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="JDWPClassObjectClass" c:type="FridaJDWPClassObjectClass" glib:is-gtype-struct-for="JDWPClassObject">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.ObjectClass" c:type="FridaJDWPObjectClass"/>
		</field>
	</record>
	<record name="JDWPClassObjectPrivate" c:type="FridaJDWPClassObjectPrivate" disguised="1"/>
	<class name="JDWPThreadGroup" c:type="FridaJDWPThreadGroup" c:symbol-prefix="thread_group" glib:type-name="FridaJDWPThreadGroup" glib:get-type="frida_jdwp_thread_group_get_type" glib:type-struct="JDWPThreadGroupClass" parent="FridaJDWP.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Object" c:type="FridaJDWPObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPThreadGroupPrivate" c:type="FridaJDWPThreadGroupPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_thread_group_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.ThreadGroup" c:type="FridaJDWPThreadGroup*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="JDWPThreadGroupClass" c:type="FridaJDWPThreadGroupClass" glib:is-gtype-struct-for="JDWPThreadGroup">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.ObjectClass" c:type="FridaJDWPObjectClass"/>
		</field>
	</record>
	<record name="JDWPThreadGroupPrivate" c:type="FridaJDWPThreadGroupPrivate" disguised="1"/>
	<class name="JDWPClassLoader" c:type="FridaJDWPClassLoader" c:symbol-prefix="class_loader" glib:type-name="FridaJDWPClassLoader" glib:get-type="frida_jdwp_class_loader_get_type" glib:type-struct="JDWPClassLoaderClass" parent="FridaJDWP.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Object" c:type="FridaJDWPObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPClassLoaderPrivate" c:type="FridaJDWPClassLoaderPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_class_loader_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.ClassLoader" c:type="FridaJDWPClassLoader*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="JDWPClassLoaderClass" c:type="FridaJDWPClassLoaderClass" glib:is-gtype-struct-for="JDWPClassLoader">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.ObjectClass" c:type="FridaJDWPObjectClass"/>
		</field>
	</record>
	<record name="JDWPClassLoaderPrivate" c:type="FridaJDWPClassLoaderPrivate" disguised="1"/>
	<class name="JDWPString" c:type="FridaJDWPString" c:symbol-prefix="string" glib:type-name="FridaJDWPString" glib:get-type="frida_jdwp_string_get_type" glib:type-struct="JDWPStringClass" parent="FridaJDWP.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Object" c:type="FridaJDWPObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPStringPrivate" c:type="FridaJDWPStringPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_string_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.String" c:type="FridaJDWPString*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="JDWPStringClass" c:type="FridaJDWPStringClass" glib:is-gtype-struct-for="JDWPString">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.ObjectClass" c:type="FridaJDWPObjectClass"/>
		</field>
	</record>
	<record name="JDWPStringPrivate" c:type="FridaJDWPStringPrivate" disguised="1"/>
	<class name="JDWPThread" c:type="FridaJDWPThread" c:symbol-prefix="thread" glib:type-name="FridaJDWPThread" glib:get-type="frida_jdwp_thread_get_type" glib:type-struct="JDWPThreadClass" parent="FridaJDWP.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Object" c:type="FridaJDWPObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPThreadPrivate" c:type="FridaJDWPThreadPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_thread_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.Thread" c:type="FridaJDWPThread*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="JDWPThreadClass" c:type="FridaJDWPThreadClass" glib:is-gtype-struct-for="JDWPThread">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.ObjectClass" c:type="FridaJDWPObjectClass"/>
		</field>
	</record>
	<record name="JDWPThreadPrivate" c:type="FridaJDWPThreadPrivate" disguised="1"/>
	<class name="JDWPClassInfo" c:type="FridaJDWPClassInfo" c:symbol-prefix="class_info" glib:type-name="FridaJDWPClassInfo" glib:get-type="frida_jdwp_class_info_get_type" glib:type-struct="JDWPClassInfoClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPClassInfoPrivate" c:type="FridaJDWPClassInfoPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_class_info_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.ClassInfo" c:type="FridaJDWPClassInfo*"/>
			</return-value>
			<parameters>
				<parameter name="ref_type" transfer-ownership="none">
					<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID"/>
				</parameter>
				<parameter name="status" transfer-ownership="none">
					<type name="FridaJDWP.ClassStatus" c:type="FridaJDWPClassStatus"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="to_string" c:identifier="frida_jdwp_class_info_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ClassInfo" c:type="FridaJDWPClassInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="ref-type" writable="1" construct-only="1">
			<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID"/>
		</property>
		<method name="get_ref_type" c:identifier="frida_jdwp_class_info_get_ref_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ClassInfo" c:type="FridaJDWPClassInfo*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="status" writable="1" construct-only="1">
			<type name="FridaJDWP.ClassStatus" c:type="FridaJDWPClassStatus"/>
		</property>
		<method name="get_status" c:identifier="frida_jdwp_class_info_get_status">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.ClassStatus" c:type="FridaJDWPClassStatus"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ClassInfo" c:type="FridaJDWPClassInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPClassInfoClass" c:type="FridaJDWPClassInfoClass" glib:is-gtype-struct-for="JDWPClassInfo">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="JDWPClassInfoPrivate" c:type="FridaJDWPClassInfoPrivate" disguised="1"/>
	<class name="JDWPMethodInfo" c:type="FridaJDWPMethodInfo" c:symbol-prefix="method_info" glib:type-name="FridaJDWPMethodInfo" glib:get-type="frida_jdwp_method_info_get_type" glib:type-struct="JDWPMethodInfoClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPMethodInfoPrivate" c:type="FridaJDWPMethodInfoPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_method_info_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.MethodInfo" c:type="FridaJDWPMethodInfo*"/>
			</return-value>
			<parameters>
				<parameter name="id" transfer-ownership="none">
					<type name="FridaJDWP.MethodID" c:type="FridaJDWPMethodID"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="signature" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="mod_bits" transfer-ownership="none">
					<type name="gint32" c:type="gint32"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="to_string" c:identifier="frida_jdwp_method_info_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.MethodInfo" c:type="FridaJDWPMethodInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="id" writable="1" construct-only="1">
			<type name="FridaJDWP.MethodID" c:type="FridaJDWPMethodID"/>
		</property>
		<method name="get_id" c:identifier="frida_jdwp_method_info_get_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.MethodInfo" c:type="FridaJDWPMethodInfo*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.MethodID" c:type="FridaJDWPMethodID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="name" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="frida_jdwp_method_info_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.MethodInfo" c:type="FridaJDWPMethodInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="signature" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_signature" c:identifier="frida_jdwp_method_info_get_signature">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.MethodInfo" c:type="FridaJDWPMethodInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="mod-bits" writable="1" construct-only="1">
			<type name="gint32" c:type="gint32"/>
		</property>
		<method name="get_mod_bits" c:identifier="frida_jdwp_method_info_get_mod_bits">
			<return-value transfer-ownership="none">
				<type name="gint32" c:type="gint32"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.MethodInfo" c:type="FridaJDWPMethodInfo*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPMethodInfoClass" c:type="FridaJDWPMethodInfoClass" glib:is-gtype-struct-for="JDWPMethodInfo">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="JDWPMethodInfoPrivate" c:type="FridaJDWPMethodInfoPrivate" disguised="1"/>
	<class name="JDWPLocation" c:type="FridaJDWPLocation" c:symbol-prefix="location" glib:type-name="FridaJDWPLocation" glib:get-type="frida_jdwp_location_get_type" glib:type-struct="JDWPLocationClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPLocationPrivate" c:type="FridaJDWPLocationPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_location_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
			</return-value>
			<parameters>
				<parameter name="declaring" transfer-ownership="none">
					<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID"/>
				</parameter>
				<parameter name="method" transfer-ownership="none">
					<type name="FridaJDWP.MethodID" c:type="FridaJDWPMethodID"/>
				</parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="to_string" c:identifier="frida_jdwp_location_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="declaring" writable="1" construct-only="1">
			<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID"/>
		</property>
		<method name="get_declaring" c:identifier="frida_jdwp_location_get_declaring">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="method" writable="1" construct-only="1">
			<type name="FridaJDWP.MethodID" c:type="FridaJDWPMethodID"/>
		</property>
		<method name="get_method" c:identifier="frida_jdwp_location_get_method">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.MethodID" c:type="FridaJDWPMethodID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="index" writable="1" construct-only="1">
			<type name="guint64" c:type="guint64"/>
		</property>
		<method name="get_index" c:identifier="frida_jdwp_location_get_index">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPLocationClass" c:type="FridaJDWPLocationClass" glib:is-gtype-struct-for="JDWPLocation">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="JDWPLocationPrivate" c:type="FridaJDWPLocationPrivate" disguised="1"/>
	<class name="JDWPEvents" c:type="FridaJDWPEvents" c:symbol-prefix="events" glib:type-name="FridaJDWPEvents" glib:get-type="frida_jdwp_events_get_type" glib:type-struct="JDWPEventsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPEventsPrivate" c:type="FridaJDWPEventsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_events_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.Events" c:type="FridaJDWPEvents*"/>
			</return-value>
			<parameters>
				<parameter name="suspend_policy" transfer-ownership="none">
					<type name="FridaJDWP.SuspendPolicy" c:type="FridaJDWPSuspendPolicy"/>
				</parameter>
				<parameter name="items" transfer-ownership="none">
					<type name="Gee.List" c:type="GeeList*">
						<type name="FridaJDWP.Event" c:type="FridaJDWPEvent*"/>
					</type>
				</parameter>
			</parameters>
		</constructor>
		<method name="to_string" c:identifier="frida_jdwp_events_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Events" c:type="FridaJDWPEvents*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="suspend-policy" writable="1" construct-only="1">
			<type name="FridaJDWP.SuspendPolicy" c:type="FridaJDWPSuspendPolicy"/>
		</property>
		<method name="get_suspend_policy" c:identifier="frida_jdwp_events_get_suspend_policy">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.SuspendPolicy" c:type="FridaJDWPSuspendPolicy"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Events" c:type="FridaJDWPEvents*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="items" writable="1" construct-only="1">
			<type name="Gee.List" c:type="GeeList*">
				<type name="FridaJDWP.Event" c:type="FridaJDWPEvent*"/>
			</type>
		</property>
		<method name="get_items" c:identifier="frida_jdwp_events_get_items">
			<return-value transfer-ownership="none">
				<type name="Gee.List" c:type="GeeList*">
					<type name="FridaJDWP.Event" c:type="FridaJDWPEvent*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Events" c:type="FridaJDWPEvents*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPEventsClass" c:type="FridaJDWPEventsClass" glib:is-gtype-struct-for="JDWPEvents">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="JDWPEventsPrivate" c:type="FridaJDWPEventsPrivate" disguised="1"/>
	<class name="JDWPEvent" c:type="FridaJDWPEvent" c:symbol-prefix="event" glib:type-name="FridaJDWPEvent" glib:get-type="frida_jdwp_event_get_type" glib:type-struct="JDWPEventClass" parent="GObject.Object" abstract="1">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPEventPrivate" c:type="FridaJDWPEventPrivate*"/>
		</field>
		<method name="to_string" c:identifier="frida_jdwp_event_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Event" c:type="FridaJDWPEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Event" c:type="FridaJDWPEvent*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="kind" writable="1" construct-only="1">
			<type name="FridaJDWP.EventKind" c:type="FridaJDWPEventKind"/>
		</property>
		<method name="get_kind" c:identifier="frida_jdwp_event_get_kind">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.EventKind" c:type="FridaJDWPEventKind"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Event" c:type="FridaJDWPEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="request" writable="1" construct-only="1">
			<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
		</property>
		<method name="get_request" c:identifier="frida_jdwp_event_get_request">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.Event" c:type="FridaJDWPEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPEventClass" c:type="FridaJDWPEventClass" glib:is-gtype-struct-for="JDWPEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaJDWP.Event" c:type="FridaJDWPEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="JDWPEventPrivate" c:type="FridaJDWPEventPrivate" disguised="1"/>
	<class name="JDWPSingleStepEvent" c:type="FridaJDWPSingleStepEvent" c:symbol-prefix="single_step_event" glib:type-name="FridaJDWPSingleStepEvent" glib:get-type="frida_jdwp_single_step_event_get_type" glib:type-struct="JDWPSingleStepEventClass" parent="FridaJDWP.Event">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Event" c:type="FridaJDWPEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPSingleStepEventPrivate" c:type="FridaJDWPSingleStepEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_single_step_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.SingleStepEvent" c:type="FridaJDWPSingleStepEvent*"/>
			</return-value>
			<parameters>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
				<parameter name="location" transfer-ownership="none">
					<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="thread" writable="1" construct-only="1">
			<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
		</property>
		<method name="get_thread" c:identifier="frida_jdwp_single_step_event_get_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.SingleStepEvent" c:type="FridaJDWPSingleStepEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="location" writable="1" construct-only="1">
			<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
		</property>
		<method name="get_location" c:identifier="frida_jdwp_single_step_event_get_location">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.SingleStepEvent" c:type="FridaJDWPSingleStepEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPSingleStepEventClass" c:type="FridaJDWPSingleStepEventClass" glib:is-gtype-struct-for="JDWPSingleStepEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventClass" c:type="FridaJDWPEventClass"/>
		</field>
	</record>
	<record name="JDWPSingleStepEventPrivate" c:type="FridaJDWPSingleStepEventPrivate" disguised="1"/>
	<class name="JDWPBreakpointEvent" c:type="FridaJDWPBreakpointEvent" c:symbol-prefix="breakpoint_event" glib:type-name="FridaJDWPBreakpointEvent" glib:get-type="frida_jdwp_breakpoint_event_get_type" glib:type-struct="JDWPBreakpointEventClass" parent="FridaJDWP.Event">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Event" c:type="FridaJDWPEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPBreakpointEventPrivate" c:type="FridaJDWPBreakpointEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_breakpoint_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.BreakpointEvent" c:type="FridaJDWPBreakpointEvent*"/>
			</return-value>
			<parameters>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
				<parameter name="location" transfer-ownership="none">
					<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="thread" writable="1" construct-only="1">
			<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
		</property>
		<method name="get_thread" c:identifier="frida_jdwp_breakpoint_event_get_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.BreakpointEvent" c:type="FridaJDWPBreakpointEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="location" writable="1" construct-only="1">
			<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
		</property>
		<method name="get_location" c:identifier="frida_jdwp_breakpoint_event_get_location">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.BreakpointEvent" c:type="FridaJDWPBreakpointEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPBreakpointEventClass" c:type="FridaJDWPBreakpointEventClass" glib:is-gtype-struct-for="JDWPBreakpointEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventClass" c:type="FridaJDWPEventClass"/>
		</field>
	</record>
	<record name="JDWPBreakpointEventPrivate" c:type="FridaJDWPBreakpointEventPrivate" disguised="1"/>
	<class name="JDWPFramePopEvent" c:type="FridaJDWPFramePopEvent" c:symbol-prefix="frame_pop_event" glib:type-name="FridaJDWPFramePopEvent" glib:get-type="frida_jdwp_frame_pop_event_get_type" glib:type-struct="JDWPFramePopEventClass" parent="FridaJDWP.Event">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Event" c:type="FridaJDWPEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPFramePopEventPrivate" c:type="FridaJDWPFramePopEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_frame_pop_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.FramePopEvent" c:type="FridaJDWPFramePopEvent*"/>
			</return-value>
		</constructor>
	</class>
	<record name="JDWPFramePopEventClass" c:type="FridaJDWPFramePopEventClass" glib:is-gtype-struct-for="JDWPFramePopEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventClass" c:type="FridaJDWPEventClass"/>
		</field>
	</record>
	<record name="JDWPFramePopEventPrivate" c:type="FridaJDWPFramePopEventPrivate" disguised="1"/>
	<class name="JDWPExceptionEvent" c:type="FridaJDWPExceptionEvent" c:symbol-prefix="exception_event" glib:type-name="FridaJDWPExceptionEvent" glib:get-type="frida_jdwp_exception_event_get_type" glib:type-struct="JDWPExceptionEventClass" parent="FridaJDWP.Event">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Event" c:type="FridaJDWPEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPExceptionEventPrivate" c:type="FridaJDWPExceptionEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_exception_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.ExceptionEvent" c:type="FridaJDWPExceptionEvent*"/>
			</return-value>
			<parameters>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
				<parameter name="location" transfer-ownership="none">
					<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
				</parameter>
				<parameter name="exception" transfer-ownership="none">
					<type name="FridaJDWP.TaggedObjectID" c:type="FridaJDWPTaggedObjectID"/>
				</parameter>
				<parameter name="catch_location" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="thread" writable="1" construct-only="1">
			<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
		</property>
		<method name="get_thread" c:identifier="frida_jdwp_exception_event_get_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ExceptionEvent" c:type="FridaJDWPExceptionEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="location" writable="1" construct-only="1">
			<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
		</property>
		<method name="get_location" c:identifier="frida_jdwp_exception_event_get_location">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ExceptionEvent" c:type="FridaJDWPExceptionEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="exception" writable="1" construct-only="1">
			<type name="FridaJDWP.TaggedObjectID" c:type="FridaJDWPTaggedObjectID"/>
		</property>
		<method name="get_exception" c:identifier="frida_jdwp_exception_event_get_exception">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ExceptionEvent" c:type="FridaJDWPExceptionEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.TaggedObjectID" c:type="FridaJDWPTaggedObjectID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="catch-location" writable="1" construct-only="1">
			<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
		</property>
		<method name="get_catch_location" c:identifier="frida_jdwp_exception_event_get_catch_location">
			<return-value transfer-ownership="none" nullable="1">
				<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ExceptionEvent" c:type="FridaJDWPExceptionEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPExceptionEventClass" c:type="FridaJDWPExceptionEventClass" glib:is-gtype-struct-for="JDWPExceptionEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventClass" c:type="FridaJDWPEventClass"/>
		</field>
	</record>
	<record name="JDWPExceptionEventPrivate" c:type="FridaJDWPExceptionEventPrivate" disguised="1"/>
	<class name="JDWPUserDefinedEvent" c:type="FridaJDWPUserDefinedEvent" c:symbol-prefix="user_defined_event" glib:type-name="FridaJDWPUserDefinedEvent" glib:get-type="frida_jdwp_user_defined_event_get_type" glib:type-struct="JDWPUserDefinedEventClass" parent="FridaJDWP.Event">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Event" c:type="FridaJDWPEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPUserDefinedEventPrivate" c:type="FridaJDWPUserDefinedEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_user_defined_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.UserDefinedEvent" c:type="FridaJDWPUserDefinedEvent*"/>
			</return-value>
		</constructor>
	</class>
	<record name="JDWPUserDefinedEventClass" c:type="FridaJDWPUserDefinedEventClass" glib:is-gtype-struct-for="JDWPUserDefinedEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventClass" c:type="FridaJDWPEventClass"/>
		</field>
	</record>
	<record name="JDWPUserDefinedEventPrivate" c:type="FridaJDWPUserDefinedEventPrivate" disguised="1"/>
	<class name="JDWPThreadStartEvent" c:type="FridaJDWPThreadStartEvent" c:symbol-prefix="thread_start_event" glib:type-name="FridaJDWPThreadStartEvent" glib:get-type="frida_jdwp_thread_start_event_get_type" glib:type-struct="JDWPThreadStartEventClass" parent="FridaJDWP.Event">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Event" c:type="FridaJDWPEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPThreadStartEventPrivate" c:type="FridaJDWPThreadStartEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_thread_start_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.ThreadStartEvent" c:type="FridaJDWPThreadStartEvent*"/>
			</return-value>
			<parameters>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="thread" writable="1" construct-only="1">
			<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
		</property>
		<method name="get_thread" c:identifier="frida_jdwp_thread_start_event_get_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ThreadStartEvent" c:type="FridaJDWPThreadStartEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPThreadStartEventClass" c:type="FridaJDWPThreadStartEventClass" glib:is-gtype-struct-for="JDWPThreadStartEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventClass" c:type="FridaJDWPEventClass"/>
		</field>
	</record>
	<record name="JDWPThreadStartEventPrivate" c:type="FridaJDWPThreadStartEventPrivate" disguised="1"/>
	<class name="JDWPThreadDeathEvent" c:type="FridaJDWPThreadDeathEvent" c:symbol-prefix="thread_death_event" glib:type-name="FridaJDWPThreadDeathEvent" glib:get-type="frida_jdwp_thread_death_event_get_type" glib:type-struct="JDWPThreadDeathEventClass" parent="FridaJDWP.Event">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Event" c:type="FridaJDWPEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPThreadDeathEventPrivate" c:type="FridaJDWPThreadDeathEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_thread_death_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.ThreadDeathEvent" c:type="FridaJDWPThreadDeathEvent*"/>
			</return-value>
			<parameters>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="thread" writable="1" construct-only="1">
			<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
		</property>
		<method name="get_thread" c:identifier="frida_jdwp_thread_death_event_get_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ThreadDeathEvent" c:type="FridaJDWPThreadDeathEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPThreadDeathEventClass" c:type="FridaJDWPThreadDeathEventClass" glib:is-gtype-struct-for="JDWPThreadDeathEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventClass" c:type="FridaJDWPEventClass"/>
		</field>
	</record>
	<record name="JDWPThreadDeathEventPrivate" c:type="FridaJDWPThreadDeathEventPrivate" disguised="1"/>
	<class name="JDWPClassPrepareEvent" c:type="FridaJDWPClassPrepareEvent" c:symbol-prefix="class_prepare_event" glib:type-name="FridaJDWPClassPrepareEvent" glib:get-type="frida_jdwp_class_prepare_event_get_type" glib:type-struct="JDWPClassPrepareEventClass" parent="FridaJDWP.Event">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Event" c:type="FridaJDWPEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPClassPrepareEventPrivate" c:type="FridaJDWPClassPrepareEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_class_prepare_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.ClassPrepareEvent" c:type="FridaJDWPClassPrepareEvent*"/>
			</return-value>
			<parameters>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
				<parameter name="ref_type" transfer-ownership="none">
					<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID"/>
				</parameter>
				<parameter name="signature" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="status" transfer-ownership="none">
					<type name="FridaJDWP.ClassStatus" c:type="FridaJDWPClassStatus"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="thread" writable="1" construct-only="1">
			<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
		</property>
		<method name="get_thread" c:identifier="frida_jdwp_class_prepare_event_get_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ClassPrepareEvent" c:type="FridaJDWPClassPrepareEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="ref-type" writable="1" construct-only="1">
			<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID"/>
		</property>
		<method name="get_ref_type" c:identifier="frida_jdwp_class_prepare_event_get_ref_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ClassPrepareEvent" c:type="FridaJDWPClassPrepareEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="signature" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_signature" c:identifier="frida_jdwp_class_prepare_event_get_signature">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ClassPrepareEvent" c:type="FridaJDWPClassPrepareEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="status" writable="1" construct-only="1">
			<type name="FridaJDWP.ClassStatus" c:type="FridaJDWPClassStatus"/>
		</property>
		<method name="get_status" c:identifier="frida_jdwp_class_prepare_event_get_status">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.ClassStatus" c:type="FridaJDWPClassStatus"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ClassPrepareEvent" c:type="FridaJDWPClassPrepareEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPClassPrepareEventClass" c:type="FridaJDWPClassPrepareEventClass" glib:is-gtype-struct-for="JDWPClassPrepareEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventClass" c:type="FridaJDWPEventClass"/>
		</field>
	</record>
	<record name="JDWPClassPrepareEventPrivate" c:type="FridaJDWPClassPrepareEventPrivate" disguised="1"/>
	<class name="JDWPClassUnloadEvent" c:type="FridaJDWPClassUnloadEvent" c:symbol-prefix="class_unload_event" glib:type-name="FridaJDWPClassUnloadEvent" glib:get-type="frida_jdwp_class_unload_event_get_type" glib:type-struct="JDWPClassUnloadEventClass" parent="FridaJDWP.Event">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Event" c:type="FridaJDWPEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPClassUnloadEventPrivate" c:type="FridaJDWPClassUnloadEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_class_unload_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.ClassUnloadEvent" c:type="FridaJDWPClassUnloadEvent*"/>
			</return-value>
			<parameters>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
				<parameter name="signature" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="signature" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_signature" c:identifier="frida_jdwp_class_unload_event_get_signature">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ClassUnloadEvent" c:type="FridaJDWPClassUnloadEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPClassUnloadEventClass" c:type="FridaJDWPClassUnloadEventClass" glib:is-gtype-struct-for="JDWPClassUnloadEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventClass" c:type="FridaJDWPEventClass"/>
		</field>
	</record>
	<record name="JDWPClassUnloadEventPrivate" c:type="FridaJDWPClassUnloadEventPrivate" disguised="1"/>
	<class name="JDWPClassLoadEvent" c:type="FridaJDWPClassLoadEvent" c:symbol-prefix="class_load_event" glib:type-name="FridaJDWPClassLoadEvent" glib:get-type="frida_jdwp_class_load_event_get_type" glib:type-struct="JDWPClassLoadEventClass" parent="FridaJDWP.Event">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Event" c:type="FridaJDWPEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPClassLoadEventPrivate" c:type="FridaJDWPClassLoadEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_class_load_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.ClassLoadEvent" c:type="FridaJDWPClassLoadEvent*"/>
			</return-value>
		</constructor>
	</class>
	<record name="JDWPClassLoadEventClass" c:type="FridaJDWPClassLoadEventClass" glib:is-gtype-struct-for="JDWPClassLoadEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventClass" c:type="FridaJDWPEventClass"/>
		</field>
	</record>
	<record name="JDWPClassLoadEventPrivate" c:type="FridaJDWPClassLoadEventPrivate" disguised="1"/>
	<class name="JDWPFieldEvent" c:type="FridaJDWPFieldEvent" c:symbol-prefix="field_event" glib:type-name="FridaJDWPFieldEvent" glib:get-type="frida_jdwp_field_event_get_type" glib:type-struct="JDWPFieldEventClass" parent="FridaJDWP.Event" abstract="1">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Event" c:type="FridaJDWPEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPFieldEventPrivate" c:type="FridaJDWPFieldEventPrivate*"/>
		</field>
		<property name="thread" writable="1" construct-only="1">
			<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
		</property>
		<method name="get_thread" c:identifier="frida_jdwp_field_event_get_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.FieldEvent" c:type="FridaJDWPFieldEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="location" writable="1" construct-only="1">
			<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
		</property>
		<method name="get_location" c:identifier="frida_jdwp_field_event_get_location">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.FieldEvent" c:type="FridaJDWPFieldEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="ref-type" writable="1" construct-only="1">
			<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID"/>
		</property>
		<method name="get_ref_type" c:identifier="frida_jdwp_field_event_get_ref_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.FieldEvent" c:type="FridaJDWPFieldEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="field" writable="1" construct-only="1">
			<type name="FridaJDWP.FieldID" c:type="FridaJDWPFieldID"/>
		</property>
		<method name="get_field" c:identifier="frida_jdwp_field_event_get_field">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.FieldEvent" c:type="FridaJDWPFieldEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.FieldID" c:type="FridaJDWPFieldID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="object" writable="1" construct-only="1">
			<type name="FridaJDWP.TaggedObjectID" c:type="FridaJDWPTaggedObjectID"/>
		</property>
		<method name="get_object" c:identifier="frida_jdwp_field_event_get_object">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.FieldEvent" c:type="FridaJDWPFieldEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.TaggedObjectID" c:type="FridaJDWPTaggedObjectID*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPFieldEventClass" c:type="FridaJDWPFieldEventClass" glib:is-gtype-struct-for="JDWPFieldEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventClass" c:type="FridaJDWPEventClass"/>
		</field>
	</record>
	<record name="JDWPFieldEventPrivate" c:type="FridaJDWPFieldEventPrivate" disguised="1"/>
	<class name="JDWPFieldAccessEvent" c:type="FridaJDWPFieldAccessEvent" c:symbol-prefix="field_access_event" glib:type-name="FridaJDWPFieldAccessEvent" glib:get-type="frida_jdwp_field_access_event_get_type" glib:type-struct="JDWPFieldAccessEventClass" parent="FridaJDWP.FieldEvent">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.FieldEvent" c:type="FridaJDWPFieldEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPFieldAccessEventPrivate" c:type="FridaJDWPFieldAccessEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_field_access_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.FieldAccessEvent" c:type="FridaJDWPFieldAccessEvent*"/>
			</return-value>
			<parameters>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
				<parameter name="location" transfer-ownership="none">
					<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
				</parameter>
				<parameter name="ref_type" transfer-ownership="none">
					<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID"/>
				</parameter>
				<parameter name="field" transfer-ownership="none">
					<type name="FridaJDWP.FieldID" c:type="FridaJDWPFieldID"/>
				</parameter>
				<parameter name="object" transfer-ownership="none">
					<type name="FridaJDWP.TaggedObjectID" c:type="FridaJDWPTaggedObjectID"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="JDWPFieldAccessEventClass" c:type="FridaJDWPFieldAccessEventClass" glib:is-gtype-struct-for="JDWPFieldAccessEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.FieldEventClass" c:type="FridaJDWPFieldEventClass"/>
		</field>
	</record>
	<record name="JDWPFieldAccessEventPrivate" c:type="FridaJDWPFieldAccessEventPrivate" disguised="1"/>
	<class name="JDWPFieldModificationEvent" c:type="FridaJDWPFieldModificationEvent" c:symbol-prefix="field_modification_event" glib:type-name="FridaJDWPFieldModificationEvent" glib:get-type="frida_jdwp_field_modification_event_get_type" glib:type-struct="JDWPFieldModificationEventClass" parent="FridaJDWP.FieldEvent">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.FieldEvent" c:type="FridaJDWPFieldEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPFieldModificationEventPrivate" c:type="FridaJDWPFieldModificationEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_field_modification_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.FieldModificationEvent" c:type="FridaJDWPFieldModificationEvent*"/>
			</return-value>
			<parameters>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
				<parameter name="location" transfer-ownership="none">
					<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
				</parameter>
				<parameter name="ref_type" transfer-ownership="none">
					<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID"/>
				</parameter>
				<parameter name="field" transfer-ownership="none">
					<type name="FridaJDWP.FieldID" c:type="FridaJDWPFieldID"/>
				</parameter>
				<parameter name="object" transfer-ownership="none">
					<type name="FridaJDWP.TaggedObjectID" c:type="FridaJDWPTaggedObjectID"/>
				</parameter>
				<parameter name="value_to_be" transfer-ownership="none">
					<type name="FridaJDWP.Value" c:type="FridaJDWPValue*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="value-to-be" writable="1" construct-only="1">
			<type name="FridaJDWP.Value" c:type="FridaJDWPValue*"/>
		</property>
		<method name="get_value_to_be" c:identifier="frida_jdwp_field_modification_event_get_value_to_be">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.Value" c:type="FridaJDWPValue*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.FieldModificationEvent" c:type="FridaJDWPFieldModificationEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPFieldModificationEventClass" c:type="FridaJDWPFieldModificationEventClass" glib:is-gtype-struct-for="JDWPFieldModificationEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.FieldEventClass" c:type="FridaJDWPFieldEventClass"/>
		</field>
	</record>
	<record name="JDWPFieldModificationEventPrivate" c:type="FridaJDWPFieldModificationEventPrivate" disguised="1"/>
	<class name="JDWPExceptionCatchEvent" c:type="FridaJDWPExceptionCatchEvent" c:symbol-prefix="exception_catch_event" glib:type-name="FridaJDWPExceptionCatchEvent" glib:get-type="frida_jdwp_exception_catch_event_get_type" glib:type-struct="JDWPExceptionCatchEventClass" parent="FridaJDWP.Event">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Event" c:type="FridaJDWPEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPExceptionCatchEventPrivate" c:type="FridaJDWPExceptionCatchEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_exception_catch_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.ExceptionCatchEvent" c:type="FridaJDWPExceptionCatchEvent*"/>
			</return-value>
		</constructor>
	</class>
	<record name="JDWPExceptionCatchEventClass" c:type="FridaJDWPExceptionCatchEventClass" glib:is-gtype-struct-for="JDWPExceptionCatchEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventClass" c:type="FridaJDWPEventClass"/>
		</field>
	</record>
	<record name="JDWPExceptionCatchEventPrivate" c:type="FridaJDWPExceptionCatchEventPrivate" disguised="1"/>
	<class name="JDWPMethodEvent" c:type="FridaJDWPMethodEvent" c:symbol-prefix="method_event" glib:type-name="FridaJDWPMethodEvent" glib:get-type="frida_jdwp_method_event_get_type" glib:type-struct="JDWPMethodEventClass" parent="FridaJDWP.Event" abstract="1">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Event" c:type="FridaJDWPEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPMethodEventPrivate" c:type="FridaJDWPMethodEventPrivate*"/>
		</field>
		<property name="thread" writable="1" construct-only="1">
			<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
		</property>
		<method name="get_thread" c:identifier="frida_jdwp_method_event_get_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.MethodEvent" c:type="FridaJDWPMethodEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="location" writable="1" construct-only="1">
			<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
		</property>
		<method name="get_location" c:identifier="frida_jdwp_method_event_get_location">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.MethodEvent" c:type="FridaJDWPMethodEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPMethodEventClass" c:type="FridaJDWPMethodEventClass" glib:is-gtype-struct-for="JDWPMethodEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventClass" c:type="FridaJDWPEventClass"/>
		</field>
	</record>
	<record name="JDWPMethodEventPrivate" c:type="FridaJDWPMethodEventPrivate" disguised="1"/>
	<class name="JDWPMethodEntryEvent" c:type="FridaJDWPMethodEntryEvent" c:symbol-prefix="method_entry_event" glib:type-name="FridaJDWPMethodEntryEvent" glib:get-type="frida_jdwp_method_entry_event_get_type" glib:type-struct="JDWPMethodEntryEventClass" parent="FridaJDWP.MethodEvent">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.MethodEvent" c:type="FridaJDWPMethodEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPMethodEntryEventPrivate" c:type="FridaJDWPMethodEntryEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_method_entry_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.MethodEntryEvent" c:type="FridaJDWPMethodEntryEvent*"/>
			</return-value>
			<parameters>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
				<parameter name="location" transfer-ownership="none">
					<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="JDWPMethodEntryEventClass" c:type="FridaJDWPMethodEntryEventClass" glib:is-gtype-struct-for="JDWPMethodEntryEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.MethodEventClass" c:type="FridaJDWPMethodEventClass"/>
		</field>
	</record>
	<record name="JDWPMethodEntryEventPrivate" c:type="FridaJDWPMethodEntryEventPrivate" disguised="1"/>
	<class name="JDWPMethodExitEvent" c:type="FridaJDWPMethodExitEvent" c:symbol-prefix="method_exit_event" glib:type-name="FridaJDWPMethodExitEvent" glib:get-type="frida_jdwp_method_exit_event_get_type" glib:type-struct="JDWPMethodExitEventClass" parent="FridaJDWP.MethodEvent">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.MethodEvent" c:type="FridaJDWPMethodEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPMethodExitEventPrivate" c:type="FridaJDWPMethodExitEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_method_exit_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.MethodExitEvent" c:type="FridaJDWPMethodExitEvent*"/>
			</return-value>
			<parameters>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
				<parameter name="location" transfer-ownership="none">
					<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="JDWPMethodExitEventClass" c:type="FridaJDWPMethodExitEventClass" glib:is-gtype-struct-for="JDWPMethodExitEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.MethodEventClass" c:type="FridaJDWPMethodEventClass"/>
		</field>
	</record>
	<record name="JDWPMethodExitEventPrivate" c:type="FridaJDWPMethodExitEventPrivate" disguised="1"/>
	<class name="JDWPMethodExitWithReturnValueEvent" c:type="FridaJDWPMethodExitWithReturnValueEvent" c:symbol-prefix="method_exit_with_return_value_event" glib:type-name="FridaJDWPMethodExitWithReturnValueEvent" glib:get-type="frida_jdwp_method_exit_with_return_value_event_get_type" glib:type-struct="JDWPMethodExitWithReturnValueEventClass" parent="FridaJDWP.MethodEvent">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.MethodEvent" c:type="FridaJDWPMethodEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPMethodExitWithReturnValueEventPrivate" c:type="FridaJDWPMethodExitWithReturnValueEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_method_exit_with_return_value_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.MethodExitWithReturnValueEvent" c:type="FridaJDWPMethodExitWithReturnValueEvent*"/>
			</return-value>
			<parameters>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
				<parameter name="location" transfer-ownership="none">
					<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
				</parameter>
				<parameter name="retval" transfer-ownership="none">
					<type name="FridaJDWP.Value" c:type="FridaJDWPValue*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="retval" writable="1" construct-only="1">
			<type name="FridaJDWP.Value" c:type="FridaJDWPValue*"/>
		</property>
		<method name="get_retval" c:identifier="frida_jdwp_method_exit_with_return_value_event_get_retval">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.Value" c:type="FridaJDWPValue*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.MethodExitWithReturnValueEvent" c:type="FridaJDWPMethodExitWithReturnValueEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPMethodExitWithReturnValueEventClass" c:type="FridaJDWPMethodExitWithReturnValueEventClass" glib:is-gtype-struct-for="JDWPMethodExitWithReturnValueEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.MethodEventClass" c:type="FridaJDWPMethodEventClass"/>
		</field>
	</record>
	<record name="JDWPMethodExitWithReturnValueEventPrivate" c:type="FridaJDWPMethodExitWithReturnValueEventPrivate" disguised="1"/>
	<class name="JDWPMonitorEvent" c:type="FridaJDWPMonitorEvent" c:symbol-prefix="monitor_event" glib:type-name="FridaJDWPMonitorEvent" glib:get-type="frida_jdwp_monitor_event_get_type" glib:type-struct="JDWPMonitorEventClass" parent="FridaJDWP.Event" abstract="1">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Event" c:type="FridaJDWPEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPMonitorEventPrivate" c:type="FridaJDWPMonitorEventPrivate*"/>
		</field>
		<property name="thread" writable="1" construct-only="1">
			<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
		</property>
		<method name="get_thread" c:identifier="frida_jdwp_monitor_event_get_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.MonitorEvent" c:type="FridaJDWPMonitorEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="object" writable="1" construct-only="1">
			<type name="FridaJDWP.TaggedObjectID" c:type="FridaJDWPTaggedObjectID"/>
		</property>
		<method name="get_object" c:identifier="frida_jdwp_monitor_event_get_object">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.MonitorEvent" c:type="FridaJDWPMonitorEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.TaggedObjectID" c:type="FridaJDWPTaggedObjectID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="location" writable="1" construct-only="1">
			<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
		</property>
		<method name="get_location" c:identifier="frida_jdwp_monitor_event_get_location">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.MonitorEvent" c:type="FridaJDWPMonitorEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPMonitorEventClass" c:type="FridaJDWPMonitorEventClass" glib:is-gtype-struct-for="JDWPMonitorEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventClass" c:type="FridaJDWPEventClass"/>
		</field>
	</record>
	<record name="JDWPMonitorEventPrivate" c:type="FridaJDWPMonitorEventPrivate" disguised="1"/>
	<class name="JDWPMonitorContendedEnterEvent" c:type="FridaJDWPMonitorContendedEnterEvent" c:symbol-prefix="monitor_contended_enter_event" glib:type-name="FridaJDWPMonitorContendedEnterEvent" glib:get-type="frida_jdwp_monitor_contended_enter_event_get_type" glib:type-struct="JDWPMonitorContendedEnterEventClass" parent="FridaJDWP.MonitorEvent">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.MonitorEvent" c:type="FridaJDWPMonitorEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPMonitorContendedEnterEventPrivate" c:type="FridaJDWPMonitorContendedEnterEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_monitor_contended_enter_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.MonitorContendedEnterEvent" c:type="FridaJDWPMonitorContendedEnterEvent*"/>
			</return-value>
			<parameters>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
				<parameter name="object" transfer-ownership="none">
					<type name="FridaJDWP.TaggedObjectID" c:type="FridaJDWPTaggedObjectID"/>
				</parameter>
				<parameter name="location" transfer-ownership="none">
					<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="JDWPMonitorContendedEnterEventClass" c:type="FridaJDWPMonitorContendedEnterEventClass" glib:is-gtype-struct-for="JDWPMonitorContendedEnterEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.MonitorEventClass" c:type="FridaJDWPMonitorEventClass"/>
		</field>
	</record>
	<record name="JDWPMonitorContendedEnterEventPrivate" c:type="FridaJDWPMonitorContendedEnterEventPrivate" disguised="1"/>
	<class name="JDWPMonitorContendedEnteredEvent" c:type="FridaJDWPMonitorContendedEnteredEvent" c:symbol-prefix="monitor_contended_entered_event" glib:type-name="FridaJDWPMonitorContendedEnteredEvent" glib:get-type="frida_jdwp_monitor_contended_entered_event_get_type" glib:type-struct="JDWPMonitorContendedEnteredEventClass" parent="FridaJDWP.MonitorEvent">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.MonitorEvent" c:type="FridaJDWPMonitorEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPMonitorContendedEnteredEventPrivate" c:type="FridaJDWPMonitorContendedEnteredEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_monitor_contended_entered_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.MonitorContendedEnteredEvent" c:type="FridaJDWPMonitorContendedEnteredEvent*"/>
			</return-value>
			<parameters>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
				<parameter name="object" transfer-ownership="none">
					<type name="FridaJDWP.TaggedObjectID" c:type="FridaJDWPTaggedObjectID"/>
				</parameter>
				<parameter name="location" transfer-ownership="none">
					<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="JDWPMonitorContendedEnteredEventClass" c:type="FridaJDWPMonitorContendedEnteredEventClass" glib:is-gtype-struct-for="JDWPMonitorContendedEnteredEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.MonitorEventClass" c:type="FridaJDWPMonitorEventClass"/>
		</field>
	</record>
	<record name="JDWPMonitorContendedEnteredEventPrivate" c:type="FridaJDWPMonitorContendedEnteredEventPrivate" disguised="1"/>
	<class name="JDWPMonitorWaitEvent" c:type="FridaJDWPMonitorWaitEvent" c:symbol-prefix="monitor_wait_event" glib:type-name="FridaJDWPMonitorWaitEvent" glib:get-type="frida_jdwp_monitor_wait_event_get_type" glib:type-struct="JDWPMonitorWaitEventClass" parent="FridaJDWP.MonitorEvent">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.MonitorEvent" c:type="FridaJDWPMonitorEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPMonitorWaitEventPrivate" c:type="FridaJDWPMonitorWaitEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_monitor_wait_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.MonitorWaitEvent" c:type="FridaJDWPMonitorWaitEvent*"/>
			</return-value>
			<parameters>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
				<parameter name="object" transfer-ownership="none">
					<type name="FridaJDWP.TaggedObjectID" c:type="FridaJDWPTaggedObjectID"/>
				</parameter>
				<parameter name="location" transfer-ownership="none">
					<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="timeout" writable="1" construct-only="1">
			<type name="gint64" c:type="gint64"/>
		</property>
		<method name="get_timeout" c:identifier="frida_jdwp_monitor_wait_event_get_timeout">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.MonitorWaitEvent" c:type="FridaJDWPMonitorWaitEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPMonitorWaitEventClass" c:type="FridaJDWPMonitorWaitEventClass" glib:is-gtype-struct-for="JDWPMonitorWaitEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.MonitorEventClass" c:type="FridaJDWPMonitorEventClass"/>
		</field>
	</record>
	<record name="JDWPMonitorWaitEventPrivate" c:type="FridaJDWPMonitorWaitEventPrivate" disguised="1"/>
	<class name="JDWPMonitorWaitedEvent" c:type="FridaJDWPMonitorWaitedEvent" c:symbol-prefix="monitor_waited_event" glib:type-name="FridaJDWPMonitorWaitedEvent" glib:get-type="frida_jdwp_monitor_waited_event_get_type" glib:type-struct="JDWPMonitorWaitedEventClass" parent="FridaJDWP.MonitorEvent">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.MonitorEvent" c:type="FridaJDWPMonitorEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPMonitorWaitedEventPrivate" c:type="FridaJDWPMonitorWaitedEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_monitor_waited_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.MonitorWaitedEvent" c:type="FridaJDWPMonitorWaitedEvent*"/>
			</return-value>
			<parameters>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
				<parameter name="object" transfer-ownership="none">
					<type name="FridaJDWP.TaggedObjectID" c:type="FridaJDWPTaggedObjectID"/>
				</parameter>
				<parameter name="location" transfer-ownership="none">
					<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
				</parameter>
				<parameter name="timed_out" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="timed-out" writable="1" construct-only="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_timed_out" c:identifier="frida_jdwp_monitor_waited_event_get_timed_out">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.MonitorWaitedEvent" c:type="FridaJDWPMonitorWaitedEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPMonitorWaitedEventClass" c:type="FridaJDWPMonitorWaitedEventClass" glib:is-gtype-struct-for="JDWPMonitorWaitedEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.MonitorEventClass" c:type="FridaJDWPMonitorEventClass"/>
		</field>
	</record>
	<record name="JDWPMonitorWaitedEventPrivate" c:type="FridaJDWPMonitorWaitedEventPrivate" disguised="1"/>
	<class name="JDWPVMStartEvent" c:type="FridaJDWPVMStartEvent" c:symbol-prefix="vm_start_event" glib:type-name="FridaJDWPVMStartEvent" glib:get-type="frida_jdwp_vm_start_event_get_type" glib:type-struct="JDWPVMStartEventClass" parent="FridaJDWP.Event">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Event" c:type="FridaJDWPEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPVMStartEventPrivate" c:type="FridaJDWPVMStartEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_vm_start_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.VMStartEvent" c:type="FridaJDWPVMStartEvent*"/>
			</return-value>
			<parameters>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="thread" writable="1" construct-only="1">
			<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
		</property>
		<method name="get_thread" c:identifier="frida_jdwp_vm_start_event_get_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.VMStartEvent" c:type="FridaJDWPVMStartEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPVMStartEventClass" c:type="FridaJDWPVMStartEventClass" glib:is-gtype-struct-for="JDWPVMStartEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventClass" c:type="FridaJDWPEventClass"/>
		</field>
	</record>
	<record name="JDWPVMStartEventPrivate" c:type="FridaJDWPVMStartEventPrivate" disguised="1"/>
	<class name="JDWPVMDeathEvent" c:type="FridaJDWPVMDeathEvent" c:symbol-prefix="vm_death_event" glib:type-name="FridaJDWPVMDeathEvent" glib:get-type="frida_jdwp_vm_death_event_get_type" glib:type-struct="JDWPVMDeathEventClass" parent="FridaJDWP.Event">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Event" c:type="FridaJDWPEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPVMDeathEventPrivate" c:type="FridaJDWPVMDeathEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_vm_death_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.VMDeathEvent" c:type="FridaJDWPVMDeathEvent*"/>
			</return-value>
			<parameters>
				<parameter name="request" transfer-ownership="none">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="JDWPVMDeathEventClass" c:type="FridaJDWPVMDeathEventClass" glib:is-gtype-struct-for="JDWPVMDeathEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventClass" c:type="FridaJDWPEventClass"/>
		</field>
	</record>
	<record name="JDWPVMDeathEventPrivate" c:type="FridaJDWPVMDeathEventPrivate" disguised="1"/>
	<class name="JDWPVMDisconnectedEvent" c:type="FridaJDWPVMDisconnectedEvent" c:symbol-prefix="vm_disconnected_event" glib:type-name="FridaJDWPVMDisconnectedEvent" glib:get-type="frida_jdwp_vm_disconnected_event_get_type" glib:type-struct="JDWPVMDisconnectedEventClass" parent="FridaJDWP.Event">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.Event" c:type="FridaJDWPEvent"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPVMDisconnectedEventPrivate" c:type="FridaJDWPVMDisconnectedEventPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_vm_disconnected_event_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.VMDisconnectedEvent" c:type="FridaJDWPVMDisconnectedEvent*"/>
			</return-value>
		</constructor>
	</class>
	<record name="JDWPVMDisconnectedEventClass" c:type="FridaJDWPVMDisconnectedEventClass" glib:is-gtype-struct-for="JDWPVMDisconnectedEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventClass" c:type="FridaJDWPEventClass"/>
		</field>
	</record>
	<record name="JDWPVMDisconnectedEventPrivate" c:type="FridaJDWPVMDisconnectedEventPrivate" disguised="1"/>
	<class name="JDWPEventModifier" c:type="FridaJDWPEventModifier" c:symbol-prefix="event_modifier" glib:type-name="FridaJDWPEventModifier" glib:get-type="frida_jdwp_event_modifier_get_type" glib:type-struct="JDWPEventModifierClass" parent="GObject.Object" abstract="1">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPEventModifierPrivate" c:type="FridaJDWPEventModifierPrivate*"/>
		</field>
		<method name="serialize" c:identifier="frida_jdwp_event_modifier_serialize">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.EventModifier" c:type="FridaJDWPEventModifier*"/>
				</instance-parameter>
				<parameter name="builder" transfer-ownership="none">
					<type name="FridaJDWP.PacketBuilder" c:type="FridaJDWPPacketBuilder*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize" invoker="serialize">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.EventModifier" c:type="FridaJDWPEventModifier*"/>
				</instance-parameter>
				<parameter name="builder" transfer-ownership="none">
					<type name="FridaJDWP.PacketBuilder" c:type="FridaJDWPPacketBuilder*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</class>
	<record name="JDWPEventModifierClass" c:type="FridaJDWPEventModifierClass" glib:is-gtype-struct-for="JDWPEventModifier">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="serialize">
			<callback name="serialize" c:type="serialize">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaJDWP.EventModifier" c:type="FridaJDWPEventModifier*"/>
					</parameter>
					<parameter name="builder" transfer-ownership="none">
						<type name="FridaJDWP.PacketBuilder" c:type="FridaJDWPPacketBuilder*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="JDWPEventModifierPrivate" c:type="FridaJDWPEventModifierPrivate" disguised="1"/>
	<class name="JDWPCountModifier" c:type="FridaJDWPCountModifier" c:symbol-prefix="count_modifier" glib:type-name="FridaJDWPCountModifier" glib:get-type="frida_jdwp_count_modifier_get_type" glib:type-struct="JDWPCountModifierClass" parent="FridaJDWP.EventModifier">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.EventModifier" c:type="FridaJDWPEventModifier"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPCountModifierPrivate" c:type="FridaJDWPCountModifierPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_count_modifier_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.CountModifier" c:type="FridaJDWPCountModifier*"/>
			</return-value>
			<parameters>
				<parameter name="count" transfer-ownership="none">
					<type name="gint32" c:type="gint32"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="count" writable="1" construct-only="1">
			<type name="gint32" c:type="gint32"/>
		</property>
		<method name="get_count" c:identifier="frida_jdwp_count_modifier_get_count">
			<return-value transfer-ownership="none">
				<type name="gint32" c:type="gint32"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.CountModifier" c:type="FridaJDWPCountModifier*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPCountModifierClass" c:type="FridaJDWPCountModifierClass" glib:is-gtype-struct-for="JDWPCountModifier">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventModifierClass" c:type="FridaJDWPEventModifierClass"/>
		</field>
	</record>
	<record name="JDWPCountModifierPrivate" c:type="FridaJDWPCountModifierPrivate" disguised="1"/>
	<class name="JDWPThreadOnlyModifier" c:type="FridaJDWPThreadOnlyModifier" c:symbol-prefix="thread_only_modifier" glib:type-name="FridaJDWPThreadOnlyModifier" glib:get-type="frida_jdwp_thread_only_modifier_get_type" glib:type-struct="JDWPThreadOnlyModifierClass" parent="FridaJDWP.EventModifier">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.EventModifier" c:type="FridaJDWPEventModifier"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPThreadOnlyModifierPrivate" c:type="FridaJDWPThreadOnlyModifierPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_thread_only_modifier_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.ThreadOnlyModifier" c:type="FridaJDWPThreadOnlyModifier*"/>
			</return-value>
			<parameters>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="thread" writable="1" construct-only="1">
			<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
		</property>
		<method name="get_thread" c:identifier="frida_jdwp_thread_only_modifier_get_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ThreadOnlyModifier" c:type="FridaJDWPThreadOnlyModifier*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPThreadOnlyModifierClass" c:type="FridaJDWPThreadOnlyModifierClass" glib:is-gtype-struct-for="JDWPThreadOnlyModifier">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventModifierClass" c:type="FridaJDWPEventModifierClass"/>
		</field>
	</record>
	<record name="JDWPThreadOnlyModifierPrivate" c:type="FridaJDWPThreadOnlyModifierPrivate" disguised="1"/>
	<class name="JDWPClassOnlyModifier" c:type="FridaJDWPClassOnlyModifier" c:symbol-prefix="class_only_modifier" glib:type-name="FridaJDWPClassOnlyModifier" glib:get-type="frida_jdwp_class_only_modifier_get_type" glib:type-struct="JDWPClassOnlyModifierClass" parent="FridaJDWP.EventModifier">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.EventModifier" c:type="FridaJDWPEventModifier"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPClassOnlyModifierPrivate" c:type="FridaJDWPClassOnlyModifierPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_class_only_modifier_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.ClassOnlyModifier" c:type="FridaJDWPClassOnlyModifier*"/>
			</return-value>
			<parameters>
				<parameter name="clazz" transfer-ownership="none">
					<type name="FridaJDWP.ReferenceTypeID" c:type="FridaJDWPReferenceTypeID"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="clazz" writable="1" construct-only="1">
			<type name="FridaJDWP.ReferenceTypeID" c:type="FridaJDWPReferenceTypeID"/>
		</property>
		<method name="get_clazz" c:identifier="frida_jdwp_class_only_modifier_get_clazz">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ClassOnlyModifier" c:type="FridaJDWPClassOnlyModifier*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ReferenceTypeID" c:type="FridaJDWPReferenceTypeID*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPClassOnlyModifierClass" c:type="FridaJDWPClassOnlyModifierClass" glib:is-gtype-struct-for="JDWPClassOnlyModifier">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventModifierClass" c:type="FridaJDWPEventModifierClass"/>
		</field>
	</record>
	<record name="JDWPClassOnlyModifierPrivate" c:type="FridaJDWPClassOnlyModifierPrivate" disguised="1"/>
	<class name="JDWPClassMatchModifier" c:type="FridaJDWPClassMatchModifier" c:symbol-prefix="class_match_modifier" glib:type-name="FridaJDWPClassMatchModifier" glib:get-type="frida_jdwp_class_match_modifier_get_type" glib:type-struct="JDWPClassMatchModifierClass" parent="FridaJDWP.EventModifier">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.EventModifier" c:type="FridaJDWPEventModifier"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPClassMatchModifierPrivate" c:type="FridaJDWPClassMatchModifierPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_class_match_modifier_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.ClassMatchModifier" c:type="FridaJDWPClassMatchModifier*"/>
			</return-value>
			<parameters>
				<parameter name="class_pattern" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="class-pattern" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_class_pattern" c:identifier="frida_jdwp_class_match_modifier_get_class_pattern">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ClassMatchModifier" c:type="FridaJDWPClassMatchModifier*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPClassMatchModifierClass" c:type="FridaJDWPClassMatchModifierClass" glib:is-gtype-struct-for="JDWPClassMatchModifier">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventModifierClass" c:type="FridaJDWPEventModifierClass"/>
		</field>
	</record>
	<record name="JDWPClassMatchModifierPrivate" c:type="FridaJDWPClassMatchModifierPrivate" disguised="1"/>
	<class name="JDWPClassExcludeModifier" c:type="FridaJDWPClassExcludeModifier" c:symbol-prefix="class_exclude_modifier" glib:type-name="FridaJDWPClassExcludeModifier" glib:get-type="frida_jdwp_class_exclude_modifier_get_type" glib:type-struct="JDWPClassExcludeModifierClass" parent="FridaJDWP.EventModifier">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.EventModifier" c:type="FridaJDWPEventModifier"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPClassExcludeModifierPrivate" c:type="FridaJDWPClassExcludeModifierPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_class_exclude_modifier_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.ClassExcludeModifier" c:type="FridaJDWPClassExcludeModifier*"/>
			</return-value>
			<parameters>
				<parameter name="class_pattern" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="class-pattern" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_class_pattern" c:identifier="frida_jdwp_class_exclude_modifier_get_class_pattern">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ClassExcludeModifier" c:type="FridaJDWPClassExcludeModifier*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPClassExcludeModifierClass" c:type="FridaJDWPClassExcludeModifierClass" glib:is-gtype-struct-for="JDWPClassExcludeModifier">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventModifierClass" c:type="FridaJDWPEventModifierClass"/>
		</field>
	</record>
	<record name="JDWPClassExcludeModifierPrivate" c:type="FridaJDWPClassExcludeModifierPrivate" disguised="1"/>
	<class name="JDWPLocationOnlyModifier" c:type="FridaJDWPLocationOnlyModifier" c:symbol-prefix="location_only_modifier" glib:type-name="FridaJDWPLocationOnlyModifier" glib:get-type="frida_jdwp_location_only_modifier_get_type" glib:type-struct="JDWPLocationOnlyModifierClass" parent="FridaJDWP.EventModifier">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.EventModifier" c:type="FridaJDWPEventModifier"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPLocationOnlyModifierPrivate" c:type="FridaJDWPLocationOnlyModifierPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_location_only_modifier_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.LocationOnlyModifier" c:type="FridaJDWPLocationOnlyModifier*"/>
			</return-value>
			<parameters>
				<parameter name="declaring" transfer-ownership="none">
					<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID"/>
				</parameter>
				<parameter name="method" transfer-ownership="none">
					<type name="FridaJDWP.MethodID" c:type="FridaJDWPMethodID"/>
				</parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="location" writable="1" construct-only="1">
			<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
		</property>
		<method name="get_location" c:identifier="frida_jdwp_location_only_modifier_get_location">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.Location" c:type="FridaJDWPLocation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.LocationOnlyModifier" c:type="FridaJDWPLocationOnlyModifier*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPLocationOnlyModifierClass" c:type="FridaJDWPLocationOnlyModifierClass" glib:is-gtype-struct-for="JDWPLocationOnlyModifier">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventModifierClass" c:type="FridaJDWPEventModifierClass"/>
		</field>
	</record>
	<record name="JDWPLocationOnlyModifierPrivate" c:type="FridaJDWPLocationOnlyModifierPrivate" disguised="1"/>
	<class name="JDWPExceptionOnlyModifier" c:type="FridaJDWPExceptionOnlyModifier" c:symbol-prefix="exception_only_modifier" glib:type-name="FridaJDWPExceptionOnlyModifier" glib:get-type="frida_jdwp_exception_only_modifier_get_type" glib:type-struct="JDWPExceptionOnlyModifierClass" parent="FridaJDWP.EventModifier">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.EventModifier" c:type="FridaJDWPEventModifier"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPExceptionOnlyModifierPrivate" c:type="FridaJDWPExceptionOnlyModifierPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_exception_only_modifier_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.ExceptionOnlyModifier" c:type="FridaJDWPExceptionOnlyModifier*"/>
			</return-value>
			<parameters>
				<parameter name="exception_or_null" transfer-ownership="none">
					<type name="FridaJDWP.ReferenceTypeID" c:type="FridaJDWPReferenceTypeID"/>
				</parameter>
				<parameter name="caught" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="uncaught" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="exception-or-null" writable="1" construct-only="1">
			<type name="FridaJDWP.ReferenceTypeID" c:type="FridaJDWPReferenceTypeID"/>
		</property>
		<method name="get_exception_or_null" c:identifier="frida_jdwp_exception_only_modifier_get_exception_or_null">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ExceptionOnlyModifier" c:type="FridaJDWPExceptionOnlyModifier*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ReferenceTypeID" c:type="FridaJDWPReferenceTypeID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="caught" writable="1" construct-only="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_caught" c:identifier="frida_jdwp_exception_only_modifier_get_caught">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ExceptionOnlyModifier" c:type="FridaJDWPExceptionOnlyModifier*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="uncaught" writable="1" construct-only="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_uncaught" c:identifier="frida_jdwp_exception_only_modifier_get_uncaught">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.ExceptionOnlyModifier" c:type="FridaJDWPExceptionOnlyModifier*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPExceptionOnlyModifierClass" c:type="FridaJDWPExceptionOnlyModifierClass" glib:is-gtype-struct-for="JDWPExceptionOnlyModifier">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventModifierClass" c:type="FridaJDWPEventModifierClass"/>
		</field>
	</record>
	<record name="JDWPExceptionOnlyModifierPrivate" c:type="FridaJDWPExceptionOnlyModifierPrivate" disguised="1"/>
	<class name="JDWPFieldOnlyModifier" c:type="FridaJDWPFieldOnlyModifier" c:symbol-prefix="field_only_modifier" glib:type-name="FridaJDWPFieldOnlyModifier" glib:get-type="frida_jdwp_field_only_modifier_get_type" glib:type-struct="JDWPFieldOnlyModifierClass" parent="FridaJDWP.EventModifier">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.EventModifier" c:type="FridaJDWPEventModifier"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPFieldOnlyModifierPrivate" c:type="FridaJDWPFieldOnlyModifierPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_field_only_modifier_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.FieldOnlyModifier" c:type="FridaJDWPFieldOnlyModifier*"/>
			</return-value>
			<parameters>
				<parameter name="declaring" transfer-ownership="none">
					<type name="FridaJDWP.ReferenceTypeID" c:type="FridaJDWPReferenceTypeID"/>
				</parameter>
				<parameter name="field" transfer-ownership="none">
					<type name="FridaJDWP.FieldID" c:type="FridaJDWPFieldID"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="declaring" writable="1" construct-only="1">
			<type name="FridaJDWP.ReferenceTypeID" c:type="FridaJDWPReferenceTypeID"/>
		</property>
		<method name="get_declaring" c:identifier="frida_jdwp_field_only_modifier_get_declaring">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.FieldOnlyModifier" c:type="FridaJDWPFieldOnlyModifier*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ReferenceTypeID" c:type="FridaJDWPReferenceTypeID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="field" writable="1" construct-only="1">
			<type name="FridaJDWP.FieldID" c:type="FridaJDWPFieldID"/>
		</property>
		<method name="get_field" c:identifier="frida_jdwp_field_only_modifier_get_field">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.FieldOnlyModifier" c:type="FridaJDWPFieldOnlyModifier*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.FieldID" c:type="FridaJDWPFieldID*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPFieldOnlyModifierClass" c:type="FridaJDWPFieldOnlyModifierClass" glib:is-gtype-struct-for="JDWPFieldOnlyModifier">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventModifierClass" c:type="FridaJDWPEventModifierClass"/>
		</field>
	</record>
	<record name="JDWPFieldOnlyModifierPrivate" c:type="FridaJDWPFieldOnlyModifierPrivate" disguised="1"/>
	<class name="JDWPStepModifier" c:type="FridaJDWPStepModifier" c:symbol-prefix="step_modifier" glib:type-name="FridaJDWPStepModifier" glib:get-type="frida_jdwp_step_modifier_get_type" glib:type-struct="JDWPStepModifierClass" parent="FridaJDWP.EventModifier">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.EventModifier" c:type="FridaJDWPEventModifier"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPStepModifierPrivate" c:type="FridaJDWPStepModifierPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_step_modifier_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.StepModifier" c:type="FridaJDWPStepModifier*"/>
			</return-value>
			<parameters>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
				</parameter>
				<parameter name="step_size" transfer-ownership="none">
					<type name="FridaJDWP.StepSize" c:type="FridaJDWPStepSize"/>
				</parameter>
				<parameter name="step_depth" transfer-ownership="none">
					<type name="FridaJDWP.StepDepth" c:type="FridaJDWPStepDepth"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="thread" writable="1" construct-only="1">
			<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID"/>
		</property>
		<method name="get_thread" c:identifier="frida_jdwp_step_modifier_get_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.StepModifier" c:type="FridaJDWPStepModifier*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID*"/>
				</parameter>
			</parameters>
		</method>
		<property name="step-size" writable="1" construct-only="1">
			<type name="FridaJDWP.StepSize" c:type="FridaJDWPStepSize"/>
		</property>
		<method name="get_step_size" c:identifier="frida_jdwp_step_modifier_get_step_size">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.StepSize" c:type="FridaJDWPStepSize"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.StepModifier" c:type="FridaJDWPStepModifier*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="step-depth" writable="1" construct-only="1">
			<type name="FridaJDWP.StepDepth" c:type="FridaJDWPStepDepth"/>
		</property>
		<method name="get_step_depth" c:identifier="frida_jdwp_step_modifier_get_step_depth">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.StepDepth" c:type="FridaJDWPStepDepth"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.StepModifier" c:type="FridaJDWPStepModifier*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPStepModifierClass" c:type="FridaJDWPStepModifierClass" glib:is-gtype-struct-for="JDWPStepModifier">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventModifierClass" c:type="FridaJDWPEventModifierClass"/>
		</field>
	</record>
	<record name="JDWPStepModifierPrivate" c:type="FridaJDWPStepModifierPrivate" disguised="1"/>
	<class name="JDWPInstanceOnlyModifier" c:type="FridaJDWPInstanceOnlyModifier" c:symbol-prefix="instance_only_modifier" glib:type-name="FridaJDWPInstanceOnlyModifier" glib:get-type="frida_jdwp_instance_only_modifier_get_type" glib:type-struct="JDWPInstanceOnlyModifierClass" parent="FridaJDWP.EventModifier">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.EventModifier" c:type="FridaJDWPEventModifier"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPInstanceOnlyModifierPrivate" c:type="FridaJDWPInstanceOnlyModifierPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_instance_only_modifier_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.InstanceOnlyModifier" c:type="FridaJDWPInstanceOnlyModifier*"/>
			</return-value>
			<parameters>
				<parameter name="instance" transfer-ownership="none">
					<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="instance" writable="1" construct-only="1">
			<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID"/>
		</property>
		<method name="get_instance" c:identifier="frida_jdwp_instance_only_modifier_get_instance">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.InstanceOnlyModifier" c:type="FridaJDWPInstanceOnlyModifier*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPInstanceOnlyModifierClass" c:type="FridaJDWPInstanceOnlyModifierClass" glib:is-gtype-struct-for="JDWPInstanceOnlyModifier">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventModifierClass" c:type="FridaJDWPEventModifierClass"/>
		</field>
	</record>
	<record name="JDWPInstanceOnlyModifierPrivate" c:type="FridaJDWPInstanceOnlyModifierPrivate" disguised="1"/>
	<class name="JDWPSourceNameMatchModifier" c:type="FridaJDWPSourceNameMatchModifier" c:symbol-prefix="source_name_match_modifier" glib:type-name="FridaJDWPSourceNameMatchModifier" glib:get-type="frida_jdwp_source_name_match_modifier_get_type" glib:type-struct="JDWPSourceNameMatchModifierClass" parent="FridaJDWP.EventModifier">
		<field name="parent_instance" readable="0" private="1">
			<type name="FridaJDWP.EventModifier" c:type="FridaJDWPEventModifier"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="JDWPSourceNameMatchModifierPrivate" c:type="FridaJDWPSourceNameMatchModifierPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_jdwp_source_name_match_modifier_new">
			<return-value transfer-ownership="full">
				<type name="FridaJDWP.SourceNameMatchModifier" c:type="FridaJDWPSourceNameMatchModifier*"/>
			</return-value>
			<parameters>
				<parameter name="source_name_pattern" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="source-name-pattern" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_source_name_pattern" c:identifier="frida_jdwp_source_name_match_modifier_get_source_name_pattern">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaJDWP.SourceNameMatchModifier" c:type="FridaJDWPSourceNameMatchModifier*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="JDWPSourceNameMatchModifierClass" c:type="FridaJDWPSourceNameMatchModifierClass" glib:is-gtype-struct-for="JDWPSourceNameMatchModifier">
		<field name="parent_class" readable="0" private="1">
			<type name="FridaJDWP.EventModifierClass" c:type="FridaJDWPEventModifierClass"/>
		</field>
	</record>
	<record name="JDWPSourceNameMatchModifierPrivate" c:type="FridaJDWPSourceNameMatchModifierPrivate" disguised="1"/>
	<record name="JDWPObjectID" c:type="FridaJDWPObjectID" c:symbol-prefix="object_id" glib:type-name="FridaJDWPObjectID" glib:get-type="frida_jdwp_object_id_get_type">
		<field name="_handle" writable="1">
			<type name="gint64" c:type="gint64"/>
		</field>
		<method name="init" c:identifier="frida_jdwp_object_id_init">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID*"/>
				</instance-parameter>
				<parameter name="handle" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_string" c:identifier="frida_jdwp_object_id_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_handle" c:identifier="frida_jdwp_object_id_get_handle">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_is_null" c:identifier="frida_jdwp_object_id_get_is_null">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID*"/>
				</instance-parameter>
			</parameters>
		</method>
	</record>
	<record name="JDWPTaggedObjectID" c:type="FridaJDWPTaggedObjectID" c:symbol-prefix="tagged_object_id" glib:type-name="FridaJDWPTaggedObjectID" glib:get-type="frida_jdwp_tagged_object_id_get_type">
		<field name="_tag" writable="1">
			<type name="FridaJDWP.TypeTag" c:type="FridaJDWPTypeTag"/>
		</field>
		<field name="_id" writable="1">
			<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID"/>
		</field>
		<method name="init" c:identifier="frida_jdwp_tagged_object_id_init">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.TaggedObjectID" c:type="FridaJDWPTaggedObjectID*"/>
				</instance-parameter>
				<parameter name="tag" transfer-ownership="none">
					<type name="FridaJDWP.TypeTag" c:type="FridaJDWPTypeTag"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_string" c:identifier="frida_jdwp_tagged_object_id_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.TaggedObjectID" c:type="FridaJDWPTaggedObjectID*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_tag" c:identifier="frida_jdwp_tagged_object_id_get_tag">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.TypeTag" c:type="FridaJDWPTypeTag"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.TaggedObjectID" c:type="FridaJDWPTaggedObjectID*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_id" c:identifier="frida_jdwp_tagged_object_id_get_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.TaggedObjectID" c:type="FridaJDWPTaggedObjectID*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ObjectID" c:type="FridaJDWPObjectID*"/>
				</parameter>
			</parameters>
		</method>
	</record>
	<record name="JDWPThreadID" c:type="FridaJDWPThreadID" c:symbol-prefix="thread_id" glib:type-name="FridaJDWPThreadID" glib:get-type="frida_jdwp_thread_id_get_type">
		<field name="_handle" writable="1">
			<type name="gint64" c:type="gint64"/>
		</field>
		<method name="init" c:identifier="frida_jdwp_thread_id_init">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID*"/>
				</instance-parameter>
				<parameter name="handle" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_string" c:identifier="frida_jdwp_thread_id_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_handle" c:identifier="frida_jdwp_thread_id_get_handle">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.ThreadID" c:type="FridaJDWPThreadID*"/>
				</instance-parameter>
			</parameters>
		</method>
	</record>
	<record name="JDWPReferenceTypeID" c:type="FridaJDWPReferenceTypeID" c:symbol-prefix="reference_type_id" glib:type-name="FridaJDWPReferenceTypeID" glib:get-type="frida_jdwp_reference_type_id_get_type">
		<field name="_handle" writable="1">
			<type name="gint64" c:type="gint64"/>
		</field>
		<method name="init" c:identifier="frida_jdwp_reference_type_id_init">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ReferenceTypeID" c:type="FridaJDWPReferenceTypeID*"/>
				</instance-parameter>
				<parameter name="handle" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_string" c:identifier="frida_jdwp_reference_type_id_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.ReferenceTypeID" c:type="FridaJDWPReferenceTypeID*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_handle" c:identifier="frida_jdwp_reference_type_id_get_handle">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.ReferenceTypeID" c:type="FridaJDWPReferenceTypeID*"/>
				</instance-parameter>
			</parameters>
		</method>
	</record>
	<record name="JDWPTaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID" c:symbol-prefix="tagged_reference_type_id" glib:type-name="FridaJDWPTaggedReferenceTypeID" glib:get-type="frida_jdwp_tagged_reference_type_id_get_type">
		<field name="_tag" writable="1">
			<type name="FridaJDWP.TypeTag" c:type="FridaJDWPTypeTag"/>
		</field>
		<field name="_id" writable="1">
			<type name="FridaJDWP.ReferenceTypeID" c:type="FridaJDWPReferenceTypeID"/>
		</field>
		<method name="init" c:identifier="frida_jdwp_tagged_reference_type_id_init">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID*"/>
				</instance-parameter>
				<parameter name="tag" transfer-ownership="none">
					<type name="FridaJDWP.TypeTag" c:type="FridaJDWPTypeTag"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="FridaJDWP.ReferenceTypeID" c:type="FridaJDWPReferenceTypeID"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_string" c:identifier="frida_jdwp_tagged_reference_type_id_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_tag" c:identifier="frida_jdwp_tagged_reference_type_id_get_tag">
			<return-value transfer-ownership="none">
				<type name="FridaJDWP.TypeTag" c:type="FridaJDWPTypeTag"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_id" c:identifier="frida_jdwp_tagged_reference_type_id_get_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.TaggedReferenceTypeID" c:type="FridaJDWPTaggedReferenceTypeID*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.ReferenceTypeID" c:type="FridaJDWPReferenceTypeID*"/>
				</parameter>
			</parameters>
		</method>
	</record>
	<record name="JDWPMethodID" c:type="FridaJDWPMethodID" c:symbol-prefix="method_id" glib:type-name="FridaJDWPMethodID" glib:get-type="frida_jdwp_method_id_get_type">
		<field name="_handle" writable="1">
			<type name="gint64" c:type="gint64"/>
		</field>
		<method name="init" c:identifier="frida_jdwp_method_id_init">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.MethodID" c:type="FridaJDWPMethodID*"/>
				</instance-parameter>
				<parameter name="handle" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_string" c:identifier="frida_jdwp_method_id_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.MethodID" c:type="FridaJDWPMethodID*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_handle" c:identifier="frida_jdwp_method_id_get_handle">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.MethodID" c:type="FridaJDWPMethodID*"/>
				</instance-parameter>
			</parameters>
		</method>
	</record>
	<record name="JDWPFieldID" c:type="FridaJDWPFieldID" c:symbol-prefix="field_id" glib:type-name="FridaJDWPFieldID" glib:get-type="frida_jdwp_field_id_get_type">
		<field name="_handle" writable="1">
			<type name="gint64" c:type="gint64"/>
		</field>
		<method name="init" c:identifier="frida_jdwp_field_id_init">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.FieldID" c:type="FridaJDWPFieldID*"/>
				</instance-parameter>
				<parameter name="handle" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_string" c:identifier="frida_jdwp_field_id_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.FieldID" c:type="FridaJDWPFieldID*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_handle" c:identifier="frida_jdwp_field_id_get_handle">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.FieldID" c:type="FridaJDWPFieldID*"/>
				</instance-parameter>
			</parameters>
		</method>
	</record>
	<record name="JDWPEventRequestID" c:type="FridaJDWPEventRequestID" c:symbol-prefix="event_request_id" glib:type-name="FridaJDWPEventRequestID" glib:get-type="frida_jdwp_event_request_id_get_type">
		<field name="_handle" writable="1">
			<type name="gint32" c:type="gint32"/>
		</field>
		<method name="init" c:identifier="frida_jdwp_event_request_id_init">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID*"/>
				</instance-parameter>
				<parameter name="handle" transfer-ownership="none">
					<type name="gint32" c:type="gint32"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_string" c:identifier="frida_jdwp_event_request_id_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_handle" c:identifier="frida_jdwp_event_request_id_get_handle">
			<return-value transfer-ownership="none">
				<type name="gint32" c:type="gint32"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none" nullable="1">
					<type name="FridaJDWP.EventRequestID" c:type="FridaJDWPEventRequestID*"/>
				</instance-parameter>
			</parameters>
		</method>
	</record>
	<class name="AXMLElementTree" c:type="FridaAXMLElementTree" c:symbol-prefix="element_tree" glib:type-name="FridaAXMLElementTree" glib:get-type="frida_axml_element_tree_get_type" glib:type-struct="AXMLElementTreeClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="AXMLElementTreePrivate" c:type="FridaAXMLElementTreePrivate*"/>
		</field>
		<method name="get_attribute" c:identifier="frida_axml_element_tree_get_attribute">
			<return-value transfer-ownership="full" nullable="1">
				<type name="FridaAXML.Attribute" c:type="FridaAXMLAttribute*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaAXML.ElementTree" c:type="FridaAXMLElementTree*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_attribute" c:identifier="frida_axml_element_tree_set_attribute">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaAXML.ElementTree" c:type="FridaAXMLElementTree*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="FridaAXML.Attribute" c:type="FridaAXMLAttribute*"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_child" c:identifier="frida_axml_element_tree_add_child">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaAXML.ElementTree" c:type="FridaAXMLElementTree*"/>
				</instance-parameter>
				<parameter name="child" transfer-ownership="none">
					<type name="FridaAXML.ElementTree" c:type="FridaAXMLElementTree*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_child" c:identifier="frida_axml_element_tree_get_child">
			<return-value transfer-ownership="full" nullable="1">
				<type name="FridaAXML.ElementTree" c:type="FridaAXMLElementTree*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaAXML.ElementTree" c:type="FridaAXMLElementTree*"/>
				</instance-parameter>
				<parameter name="i" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_string" c:identifier="frida_axml_element_tree_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaAXML.ElementTree" c:type="FridaAXMLElementTree*"/>
				</instance-parameter>
				<parameter name="depth" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_axml_element_tree_new">
			<return-value transfer-ownership="full">
				<type name="FridaAXML.ElementTree" c:type="FridaAXMLElementTree*"/>
			</return-value>
		</constructor>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="frida_axml_element_tree_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaAXML.ElementTree" c:type="FridaAXMLElementTree*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_name" c:identifier="frida_axml_element_tree_set_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaAXML.ElementTree" c:type="FridaAXMLElementTree*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="AXMLElementTreeClass" c:type="FridaAXMLElementTreeClass" glib:is-gtype-struct-for="AXMLElementTree">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="AXMLElementTreePrivate" c:type="FridaAXMLElementTreePrivate" disguised="1"/>
	<class name="AXMLResourceValue" c:type="FridaAXMLResourceValue" c:symbol-prefix="resource_value" glib:type-name="FridaAXMLResourceValue" glib:get-type="frida_axml_resource_value_get_type" glib:type-struct="AXMLResourceValueClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="AXMLResourceValuePrivate" c:type="FridaAXMLResourceValuePrivate*"/>
		</field>
		<method name="to_string" c:identifier="frida_axml_resource_value_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaAXML.ResourceValue" c:type="FridaAXMLResourceValue*"/>
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_axml_resource_value_new">
			<return-value transfer-ownership="full">
				<type name="FridaAXML.ResourceValue" c:type="FridaAXMLResourceValue*"/>
			</return-value>
		</constructor>
	</class>
	<record name="AXMLResourceValueClass" c:type="FridaAXMLResourceValueClass" glib:is-gtype-struct-for="AXMLResourceValue">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="AXMLResourceValuePrivate" c:type="FridaAXMLResourceValuePrivate" disguised="1"/>
	<class name="AXMLAttribute" c:type="FridaAXMLAttribute" c:symbol-prefix="attribute" glib:type-name="FridaAXMLAttribute" glib:get-type="frida_axml_attribute_get_type" glib:type-struct="AXMLAttributeClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="AXMLAttributePrivate" c:type="FridaAXMLAttributePrivate*"/>
		</field>
		<method name="get_name" c:identifier="frida_axml_attribute_get_name">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaAXML.Attribute" c:type="FridaAXMLAttribute*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_value" c:identifier="frida_axml_attribute_get_value">
			<return-value transfer-ownership="full">
				<type name="FridaAXML.ResourceValue" c:type="FridaAXMLResourceValue*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaAXML.Attribute" c:type="FridaAXMLAttribute*"/>
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_axml_attribute_new">
			<return-value transfer-ownership="full">
				<type name="FridaAXML.Attribute" c:type="FridaAXMLAttribute*"/>
			</return-value>
		</constructor>
	</class>
	<record name="AXMLAttributeClass" c:type="FridaAXMLAttributeClass" glib:is-gtype-struct-for="AXMLAttribute">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="AXMLAttributePrivate" c:type="FridaAXMLAttributePrivate" disguised="1"/>
	<function name="axml_read" c:identifier="frida_axml_read" throws="1">
		<return-value transfer-ownership="full">
			<type name="FridaAXML.ElementTree" c:type="FridaAXMLElementTree*"/>
		</return-value>
		<parameters>
			<parameter name="stream" transfer-ownership="none">
				<type name="Gio.InputStream" c:type="GInputStream*"/>
			</parameter>
		</parameters>
	</function>
	<enumeration name="BareboneMappingType" c:type="FridaBareboneMappingType" glib:type-name="FridaBareboneMappingType" glib:get-type="frida_barebone_mapping_type_get_type">
		<member name="unknown" c:identifier="FRIDA_BAREBONE_MAPPING_TYPE_UNKNOWN" value="0"/>
		<member name="memory" c:identifier="FRIDA_BAREBONE_MAPPING_TYPE_MEMORY" value="1"/>
		<member name="device" c:identifier="FRIDA_BAREBONE_MAPPING_TYPE_DEVICE" value="2"/>
	</enumeration>
	<function name="barebone_mapping_type_to_nick" c:identifier="frida_barebone_mapping_type_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="FridaBarebone.MappingType" c:type="FridaBareboneMappingType"/>
			</instance-parameter>
		</parameters>
	</function>
	<class name="BareboneServices" c:type="FridaBareboneServices" c:symbol-prefix="services" glib:type-name="FridaBareboneServices" glib:get-type="frida_barebone_services_get_type" glib:type-struct="BareboneServicesClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BareboneServicesPrivate" c:type="FridaBareboneServicesPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_barebone_services_new">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.Services" c:type="FridaBareboneServices*"/>
			</return-value>
			<parameters>
				<parameter name="machine" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</parameter>
				<parameter name="allocator" transfer-ownership="none">
					<type name="FridaBarebone.Allocator" c:type="FridaBareboneAllocator*"/>
				</parameter>
				<parameter name="interceptor" transfer-ownership="none">
					<type name="FridaBarebone.Interceptor" c:type="FridaBareboneInterceptor*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="machine" writable="1" construct-only="1">
			<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
		</property>
		<method name="get_machine" c:identifier="frida_barebone_services_get_machine">
			<return-value transfer-ownership="none">
				<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Services" c:type="FridaBareboneServices*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="allocator" writable="1" construct-only="1">
			<type name="FridaBarebone.Allocator" c:type="FridaBareboneAllocator*"/>
		</property>
		<method name="get_allocator" c:identifier="frida_barebone_services_get_allocator">
			<return-value transfer-ownership="none">
				<type name="FridaBarebone.Allocator" c:type="FridaBareboneAllocator*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Services" c:type="FridaBareboneServices*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="interceptor" writable="1" construct-only="1">
			<type name="FridaBarebone.Interceptor" c:type="FridaBareboneInterceptor*"/>
		</property>
		<method name="get_interceptor" c:identifier="frida_barebone_services_get_interceptor">
			<return-value transfer-ownership="none">
				<type name="FridaBarebone.Interceptor" c:type="FridaBareboneInterceptor*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Services" c:type="FridaBareboneServices*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="BareboneServicesClass" c:type="FridaBareboneServicesClass" glib:is-gtype-struct-for="BareboneServices">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="BareboneServicesPrivate" c:type="FridaBareboneServicesPrivate" disguised="1"/>
	<class name="BareboneRangeDetails" c:type="FridaBareboneRangeDetails" c:symbol-prefix="range_details" glib:type-name="FridaBareboneRangeDetails" glib:get-type="frida_barebone_range_details_get_type" glib:type-struct="BareboneRangeDetailsClass" glib:fundamental="1" glib:ref-func="frida_barebone_range_details_ref" glib:unref-func="frida_barebone_range_details_unref" glib:set-value-func="frida_barebone_value_set_range_details" glib:get-value-func="frida_barebone_value_get_range_details">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BareboneRangeDetailsPrivate" c:type="FridaBareboneRangeDetailsPrivate*"/>
		</field>
		<field name="base_va" writable="1">
			<type name="guint64" c:type="guint64"/>
		</field>
		<field name="base_pa" writable="1">
			<type name="guint64" c:type="guint64"/>
		</field>
		<field name="size" writable="1">
			<type name="guint64" c:type="guint64"/>
		</field>
		<field name="protection" writable="1">
			<type name="FridaGum.PageProtection" c:type="GumPageProtection"/>
		</field>
		<field name="type" writable="1">
			<type name="FridaBarebone.MappingType" c:type="FridaBareboneMappingType"/>
		</field>
		<constructor name="new" c:identifier="frida_barebone_range_details_new">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.RangeDetails" c:type="FridaBareboneRangeDetails*"/>
			</return-value>
			<parameters>
				<parameter name="base_va" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="base_pa" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="size" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="protection" transfer-ownership="none">
					<type name="FridaGum.PageProtection" c:type="GumPageProtection"/>
				</parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="FridaBarebone.MappingType" c:type="FridaBareboneMappingType"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="clone" c:identifier="frida_barebone_range_details_clone">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.RangeDetails" c:type="FridaBareboneRangeDetails*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.RangeDetails" c:type="FridaBareboneRangeDetails*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="contains_virtual_address" c:identifier="frida_barebone_range_details_contains_virtual_address">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.RangeDetails" c:type="FridaBareboneRangeDetails*"/>
				</instance-parameter>
				<parameter name="va" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="contains_physical_address" c:identifier="frida_barebone_range_details_contains_physical_address">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.RangeDetails" c:type="FridaBareboneRangeDetails*"/>
				</instance-parameter>
				<parameter name="pa" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="virtual_to_physical" c:identifier="frida_barebone_range_details_virtual_to_physical">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.RangeDetails" c:type="FridaBareboneRangeDetails*"/>
				</instance-parameter>
				<parameter name="va" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="physical_to_virtual" c:identifier="frida_barebone_range_details_physical_to_virtual">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.RangeDetails" c:type="FridaBareboneRangeDetails*"/>
				</instance-parameter>
				<parameter name="pa" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_end" c:identifier="frida_barebone_range_details_get_end">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.RangeDetails" c:type="FridaBareboneRangeDetails*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="BareboneRangeDetailsClass" c:type="FridaBareboneRangeDetailsClass" glib:is-gtype-struct-for="BareboneRangeDetails">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="BareboneRangeDetailsPrivate" c:type="FridaBareboneRangeDetailsPrivate" disguised="1"/>
	<class name="BareboneSimpleAllocator" c:type="FridaBareboneSimpleAllocator" c:symbol-prefix="simple_allocator" glib:type-name="FridaBareboneSimpleAllocator" glib:get-type="frida_barebone_simple_allocator_get_type" glib:type-struct="BareboneSimpleAllocatorClass" parent="GObject.Object">
		<implements name="FridaBarebone.Allocator"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BareboneSimpleAllocatorPrivate" c:type="FridaBareboneSimpleAllocatorPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_barebone_simple_allocator_new">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.SimpleAllocator" c:type="FridaBareboneSimpleAllocator*"/>
			</return-value>
			<parameters>
				<parameter name="machine" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</parameter>
				<parameter name="page_size" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="base_pa" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="BareboneSimpleAllocatorClass" c:type="FridaBareboneSimpleAllocatorClass" glib:is-gtype-struct-for="BareboneSimpleAllocator">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="BareboneSimpleAllocatorPrivate" c:type="FridaBareboneSimpleAllocatorPrivate" disguised="1"/>
	<class name="BareboneCallback" c:type="FridaBareboneCallback" c:symbol-prefix="callback" glib:type-name="FridaBareboneCallback" glib:get-type="frida_barebone_callback_get_type" glib:type-struct="BareboneCallbackClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BareboneCallbackPrivate" c:type="FridaBareboneCallbackPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_barebone_callback_new" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.Callback" c:type="FridaBareboneCallback*"/>
			</return-value>
			<parameters>
				<parameter name="code" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="handler" transfer-ownership="none">
					<type name="FridaBarebone.CallbackHandler" c:type="FridaBareboneCallbackHandler*"/>
				</parameter>
				<parameter name="machine" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="destroy" c:identifier="frida_barebone_callback_destroy">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Callback" c:type="FridaBareboneCallback*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="destroy_finish" c:identifier="frida_barebone_callback_destroy_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Callback" c:type="FridaBareboneCallback*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="BareboneCallbackClass" c:type="FridaBareboneCallbackClass" glib:is-gtype-struct-for="BareboneCallback">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="BareboneCallbackPrivate" c:type="FridaBareboneCallbackPrivate" disguised="1"/>
	<class name="BareboneMatchPattern" c:type="FridaBareboneMatchPattern" c:symbol-prefix="match_pattern" glib:type-name="FridaBareboneMatchPattern" glib:get-type="frida_barebone_match_pattern_get_type" glib:type-struct="BareboneMatchPatternClass" glib:fundamental="1" glib:ref-func="frida_barebone_match_pattern_ref" glib:unref-func="frida_barebone_match_pattern_unref" glib:set-value-func="frida_barebone_value_set_match_pattern" glib:get-value-func="frida_barebone_value_get_match_pattern">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BareboneMatchPatternPrivate" c:type="FridaBareboneMatchPatternPrivate*"/>
		</field>
		<field name="size" writable="1">
			<type name="gulong" c:type="gsize"/>
		</field>
		<field name="tokens" writable="1">
			<type name="Gee.List" c:type="GeeList*">
				<type name="FridaBarebone.MatchToken" c:type="FridaBareboneMatchToken*"/>
			</type>
		</field>
		<constructor name="from_string" c:identifier="frida_barebone_match_pattern_new_from_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.MatchPattern" c:type="FridaBareboneMatchPattern*"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="new" c:identifier="frida_barebone_match_pattern_new">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.MatchPattern" c:type="FridaBareboneMatchPattern*"/>
			</return-value>
		</constructor>
	</class>
	<record name="BareboneMatchPatternClass" c:type="FridaBareboneMatchPatternClass" glib:is-gtype-struct-for="BareboneMatchPattern">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="BareboneMatchPatternPrivate" c:type="FridaBareboneMatchPatternPrivate" disguised="1"/>
	<class name="BareboneMatchToken" c:type="FridaBareboneMatchToken" c:symbol-prefix="match_token" glib:type-name="FridaBareboneMatchToken" glib:get-type="frida_barebone_match_token_get_type" glib:type-struct="BareboneMatchTokenClass" glib:fundamental="1" glib:ref-func="frida_barebone_match_token_ref" glib:unref-func="frida_barebone_match_token_unref" glib:set-value-func="frida_barebone_value_set_match_token" glib:get-value-func="frida_barebone_value_get_match_token">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BareboneMatchTokenPrivate" c:type="FridaBareboneMatchTokenPrivate*"/>
		</field>
		<field name="kind" writable="1">
			<type name="Frida.FridaBareboneMatchTokenKind" c:type="FridaBareboneMatchTokenKind"/>
		</field>
		<field name="values" writable="1" nullable="1">
			<type name="GLib.ByteArray" c:type="GByteArray*"/>
		</field>
		<field name="masks" writable="1" nullable="1">
			<type name="GLib.ByteArray" c:type="GByteArray*"/>
		</field>
		<field name="size" writable="1">
			<type name="gulong" c:type="gsize"/>
		</field>
		<constructor name="new" c:identifier="frida_barebone_match_token_new">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.MatchToken" c:type="FridaBareboneMatchToken*"/>
			</return-value>
			<parameters>
				<parameter name="kind" transfer-ownership="none">
					<type name="Frida.FridaBareboneMatchTokenKind" c:type="FridaBareboneMatchTokenKind"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="append" c:identifier="frida_barebone_match_token_append">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.MatchToken" c:type="FridaBareboneMatchToken*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_with_mask" c:identifier="frida_barebone_match_token_append_with_mask">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.MatchToken" c:type="FridaBareboneMatchToken*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
				<parameter name="mask" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="BareboneMatchTokenClass" c:type="FridaBareboneMatchTokenClass" glib:is-gtype-struct-for="BareboneMatchToken">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="BareboneMatchTokenPrivate" c:type="FridaBareboneMatchTokenPrivate" disguised="1"/>
	<enumeration name="BareboneMatchTokenKind" c:type="FridaBareboneMatchTokenKind" glib:type-name="FridaBareboneMatchTokenKind" glib:get-type="frida_barebone_match_token_kind_get_type">
		<member name="exact" c:identifier="FRIDA_BAREBONE_MATCH_TOKEN_KIND_EXACT" value="0"/>
		<member name="wildcard" c:identifier="FRIDA_BAREBONE_MATCH_TOKEN_KIND_WILDCARD" value="1"/>
		<member name="mask" c:identifier="FRIDA_BAREBONE_MATCH_TOKEN_KIND_MASK" value="2"/>
	</enumeration>
	<class name="BareboneInterceptor" c:type="FridaBareboneInterceptor" c:symbol-prefix="interceptor" glib:type-name="FridaBareboneInterceptor" glib:get-type="frida_barebone_interceptor_get_type" glib:type-struct="BareboneInterceptorClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BareboneInterceptorPrivate" c:type="FridaBareboneInterceptorPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_barebone_interceptor_new">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.Interceptor" c:type="FridaBareboneInterceptor*"/>
			</return-value>
			<parameters>
				<parameter name="machine" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</parameter>
				<parameter name="allocator" transfer-ownership="none">
					<type name="FridaBarebone.Allocator" c:type="FridaBareboneAllocator*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="attach" c:identifier="frida_barebone_interceptor_attach">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Interceptor" c:type="FridaBareboneInterceptor*"/>
				</instance-parameter>
				<parameter name="target" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="listener" transfer-ownership="none">
					<type name="FridaBarebone.BreakpointInvocationListener" c:type="FridaBareboneBreakpointInvocationListener*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="attach_finish" c:identifier="frida_barebone_interceptor_attach_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Interceptor" c:type="FridaBareboneInterceptor*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="attach_inline" c:identifier="frida_barebone_interceptor_attach_inline">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Interceptor" c:type="FridaBareboneInterceptor*"/>
				</instance-parameter>
				<parameter name="target" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="listener" transfer-ownership="none">
					<type name="FridaBarebone.InlineInvocationListener" c:type="FridaBareboneInlineInvocationListener*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="attach_inline_finish" c:identifier="frida_barebone_interceptor_attach_inline_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Interceptor" c:type="FridaBareboneInterceptor*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="detach" c:identifier="frida_barebone_interceptor_detach">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Interceptor" c:type="FridaBareboneInterceptor*"/>
				</instance-parameter>
				<parameter name="listener" transfer-ownership="none">
					<type name="FridaBarebone.InvocationListener" c:type="FridaBareboneInvocationListener*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="detach_finish" c:identifier="frida_barebone_interceptor_detach_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Interceptor" c:type="FridaBareboneInterceptor*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="machine" writable="1" construct-only="1">
			<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
		</property>
		<method name="get_machine" c:identifier="frida_barebone_interceptor_get_machine">
			<return-value transfer-ownership="none">
				<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Interceptor" c:type="FridaBareboneInterceptor*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="allocator" writable="1" construct-only="1">
			<type name="FridaBarebone.Allocator" c:type="FridaBareboneAllocator*"/>
		</property>
		<method name="get_allocator" c:identifier="frida_barebone_interceptor_get_allocator">
			<return-value transfer-ownership="none">
				<type name="FridaBarebone.Allocator" c:type="FridaBareboneAllocator*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Interceptor" c:type="FridaBareboneInterceptor*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="breakpoint-kind" writable="1">
			<type name="Frida.FridaGDBBreakpointKind" c:type="FridaGDBBreakpointKind"/>
		</property>
		<method name="get_breakpoint_kind" c:identifier="frida_barebone_interceptor_get_breakpoint_kind">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBBreakpointKind" c:type="FridaGDBBreakpointKind"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Interceptor" c:type="FridaBareboneInterceptor*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_breakpoint_kind" c:identifier="frida_barebone_interceptor_set_breakpoint_kind">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Interceptor" c:type="FridaBareboneInterceptor*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Frida.FridaGDBBreakpointKind" c:type="FridaGDBBreakpointKind"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="BareboneInterceptorClass" c:type="FridaBareboneInterceptorClass" glib:is-gtype-struct-for="BareboneInterceptor">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="BareboneInterceptorPrivate" c:type="FridaBareboneInterceptorPrivate" disguised="1"/>
	<class name="BareboneIA32Machine" c:type="FridaBareboneIA32Machine" c:symbol-prefix="ia32_machine" glib:type-name="FridaBareboneIA32Machine" glib:get-type="frida_barebone_ia32_machine_get_type" glib:type-struct="BareboneIA32MachineClass" parent="GObject.Object">
		<implements name="FridaBarebone.Machine"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BareboneIA32MachinePrivate" c:type="FridaBareboneIA32MachinePrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_barebone_ia32_machine_new">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.IA32Machine" c:type="FridaBareboneIA32Machine*"/>
			</return-value>
			<parameters>
				<parameter name="gdb" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="BareboneIA32MachineClass" c:type="FridaBareboneIA32MachineClass" glib:is-gtype-struct-for="BareboneIA32Machine">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="BareboneIA32MachinePrivate" c:type="FridaBareboneIA32MachinePrivate" disguised="1"/>
	<class name="BareboneX64Machine" c:type="FridaBareboneX64Machine" c:symbol-prefix="x64_machine" glib:type-name="FridaBareboneX64Machine" glib:get-type="frida_barebone_x64_machine_get_type" glib:type-struct="BareboneX64MachineClass" parent="GObject.Object">
		<implements name="FridaBarebone.Machine"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BareboneX64MachinePrivate" c:type="FridaBareboneX64MachinePrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_barebone_x64_machine_new">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.X64Machine" c:type="FridaBareboneX64Machine*"/>
			</return-value>
			<parameters>
				<parameter name="gdb" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="BareboneX64MachineClass" c:type="FridaBareboneX64MachineClass" glib:is-gtype-struct-for="BareboneX64Machine">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="BareboneX64MachinePrivate" c:type="FridaBareboneX64MachinePrivate" disguised="1"/>
	<class name="BareboneArmMachine" c:type="FridaBareboneArmMachine" c:symbol-prefix="arm_machine" glib:type-name="FridaBareboneArmMachine" glib:get-type="frida_barebone_arm_machine_get_type" glib:type-struct="BareboneArmMachineClass" parent="GObject.Object">
		<implements name="FridaBarebone.Machine"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BareboneArmMachinePrivate" c:type="FridaBareboneArmMachinePrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_barebone_arm_machine_new">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.ArmMachine" c:type="FridaBareboneArmMachine*"/>
			</return-value>
			<parameters>
				<parameter name="gdb" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="BareboneArmMachineClass" c:type="FridaBareboneArmMachineClass" glib:is-gtype-struct-for="BareboneArmMachine">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="BareboneArmMachinePrivate" c:type="FridaBareboneArmMachinePrivate" disguised="1"/>
	<class name="BareboneArm64Machine" c:type="FridaBareboneArm64Machine" c:symbol-prefix="arm64_machine" glib:type-name="FridaBareboneArm64Machine" glib:get-type="frida_barebone_arm64_machine_get_type" glib:type-struct="BareboneArm64MachineClass" parent="GObject.Object">
		<implements name="FridaBarebone.Machine"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BareboneArm64MachinePrivate" c:type="FridaBareboneArm64MachinePrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_barebone_arm64_machine_new">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.Arm64Machine" c:type="FridaBareboneArm64Machine*"/>
			</return-value>
			<parameters>
				<parameter name="gdb" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="BareboneArm64MachineClass" c:type="FridaBareboneArm64MachineClass" glib:is-gtype-struct-for="BareboneArm64Machine">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="BareboneArm64MachinePrivate" c:type="FridaBareboneArm64MachinePrivate" disguised="1"/>
	<class name="BareboneUnknownMachine" c:type="FridaBareboneUnknownMachine" c:symbol-prefix="unknown_machine" glib:type-name="FridaBareboneUnknownMachine" glib:get-type="frida_barebone_unknown_machine_get_type" glib:type-struct="BareboneUnknownMachineClass" parent="GObject.Object">
		<implements name="FridaBarebone.Machine"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BareboneUnknownMachinePrivate" c:type="FridaBareboneUnknownMachinePrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_barebone_unknown_machine_new">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.UnknownMachine" c:type="FridaBareboneUnknownMachine*"/>
			</return-value>
			<parameters>
				<parameter name="gdb" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="BareboneUnknownMachineClass" c:type="FridaBareboneUnknownMachineClass" glib:is-gtype-struct-for="BareboneUnknownMachine">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="BareboneUnknownMachinePrivate" c:type="FridaBareboneUnknownMachinePrivate" disguised="1"/>
	<interface name="BareboneMachine" c:type="FridaBareboneMachine" c:symbol-prefix="machine" glib:type-name="FridaBareboneMachine" glib:get-type="frida_barebone_machine_get_type" glib:type-struct="BareboneMachineIface">
		<prerequisite name="GObject.Object"/>
		<method name="query_page_size" c:identifier="frida_barebone_machine_query_page_size">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_page_size_finish" c:identifier="frida_barebone_machine_query_page_size_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="gulong" c:type="gsize"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="query_page_size" invoker="query_page_size">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="query_page_size_finish" invoker="query_page_size_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="gulong" c:type="gsize"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="enumerate_ranges" c:identifier="frida_barebone_machine_enumerate_ranges">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="prot" transfer-ownership="none">
					<type name="FridaGum.PageProtection" c:type="GumPageProtection"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2" scope="call">
					<type name="FridaBarebone.FoundRangeFunc" c:type="FridaBareboneFoundRangeFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_ranges_finish" c:identifier="frida_barebone_machine_enumerate_ranges_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="enumerate_ranges" invoker="enumerate_ranges">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="prot" transfer-ownership="none">
					<type name="FridaGum.PageProtection" c:type="GumPageProtection"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2" scope="call">
					<type name="FridaBarebone.FoundRangeFunc" c:type="FridaBareboneFoundRangeFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="enumerate_ranges_finish" invoker="enumerate_ranges_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="allocate_pages" c:identifier="frida_barebone_machine_allocate_pages">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="physical_address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="num_pages" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="allocate_pages_finish" c:identifier="frida_barebone_machine_allocate_pages_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.Allocation" c:type="FridaBareboneAllocation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="allocate_pages" invoker="allocate_pages">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="physical_address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="num_pages" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="allocate_pages_finish" invoker="allocate_pages_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.Allocation" c:type="FridaBareboneAllocation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="scan_ranges" c:identifier="frida_barebone_machine_scan_ranges">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="ranges" transfer-ownership="none">
					<type name="Gee.List" c:type="GeeList*">
						<type name="FridaGum.MemoryRange" c:type="GumMemoryRange*"/>
					</type>
				</parameter>
				<parameter name="pattern" transfer-ownership="none">
					<type name="FridaBarebone.MatchPattern" c:type="FridaBareboneMatchPattern*"/>
				</parameter>
				<parameter name="max_matches" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="scan_ranges_finish" c:identifier="frida_barebone_machine_scan_ranges_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="guint64" c:type="guint64*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="scan_ranges" invoker="scan_ranges">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="ranges" transfer-ownership="none">
					<type name="Gee.List" c:type="GeeList*">
						<type name="FridaGum.MemoryRange" c:type="GumMemoryRange*"/>
					</type>
				</parameter>
				<parameter name="pattern" transfer-ownership="none">
					<type name="FridaBarebone.MatchPattern" c:type="FridaBareboneMatchPattern*"/>
				</parameter>
				<parameter name="max_matches" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="scan_ranges_finish" invoker="scan_ranges_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="guint64" c:type="guint64*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="relocate" c:identifier="frida_barebone_machine_relocate" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="module" transfer-ownership="none">
					<type name="FridaGum.ElfModule" c:type="GumElfModule*"/>
				</parameter>
				<parameter name="base_va" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="apply_relocation" c:identifier="frida_barebone_machine_apply_relocation" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="r" transfer-ownership="none">
					<type name="FridaGum.ElfRelocationDetails" c:type="GumElfRelocationDetails"/>
				</parameter>
				<parameter name="base_va" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="relocated" transfer-ownership="none">
					<type name="Frida.Buffer" c:type="FridaBuffer*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="apply_relocation" invoker="apply_relocation" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="r" transfer-ownership="none">
					<type name="FridaGum.ElfRelocationDetails" c:type="GumElfRelocationDetails"/>
				</parameter>
				<parameter name="base_va" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="relocated" transfer-ownership="none">
					<type name="Frida.Buffer" c:type="FridaBuffer*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="invoke" c:identifier="frida_barebone_machine_invoke">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="impl" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="args" transfer-ownership="none">
					<array length="2" c:type="guint64*">
						<type name="guint64" c:type="guint64"/>
					</array>
				</parameter>
				<parameter name="args_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="landing_zone" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="invoke_finish" c:identifier="frida_barebone_machine_invoke_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="invoke" invoker="invoke">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="impl" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="args" transfer-ownership="none">
					<array length="2" c:type="guint64*">
						<type name="guint64" c:type="guint64"/>
					</array>
				</parameter>
				<parameter name="args_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="landing_zone" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="invoke_finish" invoker="invoke_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="load_call_frame" c:identifier="frida_barebone_machine_load_call_frame">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</parameter>
				<parameter name="arity" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="load_call_frame_finish" c:identifier="frida_barebone_machine_load_call_frame_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="load_call_frame" invoker="load_call_frame">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</parameter>
				<parameter name="arity" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="load_call_frame_finish" invoker="load_call_frame_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="address_from_funcptr" c:identifier="frida_barebone_machine_address_from_funcptr">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="ptr" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="address_from_funcptr" invoker="address_from_funcptr">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="ptr" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="breakpoint_size_from_funcptr" c:identifier="frida_barebone_machine_breakpoint_size_from_funcptr">
			<return-value transfer-ownership="full">
				<type name="gulong" c:type="gsize"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="ptr" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="breakpoint_size_from_funcptr" invoker="breakpoint_size_from_funcptr">
			<return-value transfer-ownership="full">
				<type name="gulong" c:type="gsize"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="ptr" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_inline_hook" c:identifier="frida_barebone_machine_create_inline_hook">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="target" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="handler" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="allocator" transfer-ownership="none">
					<type name="FridaBarebone.Allocator" c:type="FridaBareboneAllocator*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_inline_hook_finish" c:identifier="frida_barebone_machine_create_inline_hook_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_inline_hook" invoker="create_inline_hook">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="target" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="handler" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="allocator" transfer-ownership="none">
					<type name="FridaBarebone.Allocator" c:type="FridaBareboneAllocator*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="create_inline_hook_finish" invoker="create_inline_hook_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="gdb" writable="1">
			<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
		</property>
		<method name="get_gdb" c:identifier="frida_barebone_machine_get_gdb">
			<return-value transfer-ownership="none">
				<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_gdb" invoker="get_gdb">
			<return-value transfer-ownership="none">
				<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_gdb" c:identifier="frida_barebone_machine_set_gdb">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_gdb" invoker="set_gdb">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="llvm-target">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_llvm_target" c:identifier="frida_barebone_machine_get_llvm_target">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_llvm_target" invoker="get_llvm_target">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="llvm-code-model">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_llvm_code_model" c:identifier="frida_barebone_machine_get_llvm_code_model">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_llvm_code_model" invoker="get_llvm_code_model">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="BareboneMachineIface" c:type="FridaBareboneMachineIface" glib:is-gtype-struct-for="BareboneMachine">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="query_page_size">
			<callback name="query_page_size" c:type="query_page_size">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="query_page_size_finish">
			<callback name="query_page_size_finish" c:type="query_page_size_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="gulong" c:type="gsize"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enumerate_ranges">
			<callback name="enumerate_ranges" c:type="enumerate_ranges">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
					<parameter name="prot" transfer-ownership="none">
						<type name="FridaGum.PageProtection" c:type="GumPageProtection"/>
					</parameter>
					<parameter name="func" transfer-ownership="none" closure="3" scope="call">
						<type name="FridaBarebone.FoundRangeFunc" c:type="FridaBareboneFoundRangeFunc"/>
					</parameter>
					<parameter name="func_target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enumerate_ranges_finish">
			<callback name="enumerate_ranges_finish" c:type="enumerate_ranges_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="allocate_pages">
			<callback name="allocate_pages" c:type="allocate_pages">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
					<parameter name="physical_address" transfer-ownership="none">
						<type name="guint64" c:type="guint64"/>
					</parameter>
					<parameter name="num_pages" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="allocate_pages_finish">
			<callback name="allocate_pages_finish" c:type="allocate_pages_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="FridaBarebone.Allocation" c:type="FridaBareboneAllocation*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="scan_ranges">
			<callback name="scan_ranges" c:type="scan_ranges">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
					<parameter name="ranges" transfer-ownership="none">
						<type name="Gee.List" c:type="GeeList*">
							<type name="FridaGum.MemoryRange" c:type="GumMemoryRange*"/>
						</type>
					</parameter>
					<parameter name="pattern" transfer-ownership="none">
						<type name="FridaBarebone.MatchPattern" c:type="FridaBareboneMatchPattern*"/>
					</parameter>
					<parameter name="max_matches" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="scan_ranges_finish">
			<callback name="scan_ranges_finish" c:type="scan_ranges_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="Gee.List" c:type="GeeList*">
						<type name="guint64" c:type="guint64*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="apply_relocation">
			<callback name="apply_relocation" c:type="apply_relocation" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
					<parameter name="r" transfer-ownership="none">
						<type name="FridaGum.ElfRelocationDetails" c:type="GumElfRelocationDetails"/>
					</parameter>
					<parameter name="base_va" transfer-ownership="none">
						<type name="guint64" c:type="guint64"/>
					</parameter>
					<parameter name="relocated" transfer-ownership="none">
						<type name="Frida.Buffer" c:type="FridaBuffer*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="invoke">
			<callback name="invoke" c:type="invoke">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
					<parameter name="impl" transfer-ownership="none">
						<type name="guint64" c:type="guint64"/>
					</parameter>
					<parameter name="args" transfer-ownership="none">
						<array length="3" c:type="guint64*">
							<type name="guint64" c:type="guint64"/>
						</array>
					</parameter>
					<parameter name="args_length1" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="landing_zone" transfer-ownership="none">
						<type name="guint64" c:type="guint64"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="7" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="invoke_finish">
			<callback name="invoke_finish" c:type="invoke_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="guint64" c:type="guint64"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="load_call_frame">
			<callback name="load_call_frame" c:type="load_call_frame">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
					<parameter name="thread" transfer-ownership="none">
						<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
					</parameter>
					<parameter name="arity" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="load_call_frame_finish">
			<callback name="load_call_frame_finish" c:type="load_call_frame_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="address_from_funcptr">
			<callback name="address_from_funcptr" c:type="address_from_funcptr">
				<return-value transfer-ownership="full">
					<type name="guint64" c:type="guint64"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
					<parameter name="ptr" transfer-ownership="none">
						<type name="guint64" c:type="guint64"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="breakpoint_size_from_funcptr">
			<callback name="breakpoint_size_from_funcptr" c:type="breakpoint_size_from_funcptr">
				<return-value transfer-ownership="full">
					<type name="gulong" c:type="gsize"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
					<parameter name="ptr" transfer-ownership="none">
						<type name="guint64" c:type="guint64"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_inline_hook">
			<callback name="create_inline_hook" c:type="create_inline_hook">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
					<parameter name="target" transfer-ownership="none">
						<type name="guint64" c:type="guint64"/>
					</parameter>
					<parameter name="handler" transfer-ownership="none">
						<type name="guint64" c:type="guint64"/>
					</parameter>
					<parameter name="allocator" transfer-ownership="none">
						<type name="FridaBarebone.Allocator" c:type="FridaBareboneAllocator*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_inline_hook_finish">
			<callback name="create_inline_hook_finish" c:type="create_inline_hook_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_gdb">
			<callback name="get_gdb" c:type="get_gdb">
				<return-value transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_gdb">
			<callback name="set_gdb" c:type="set_gdb">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_llvm_target">
			<callback name="get_llvm_target" c:type="get_llvm_target">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_llvm_code_model">
			<callback name="get_llvm_code_model" c:type="get_llvm_code_model">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Machine" c:type="FridaBareboneMachine*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="BareboneCallFrame" c:type="FridaBareboneCallFrame" c:symbol-prefix="call_frame" glib:type-name="FridaBareboneCallFrame" glib:get-type="frida_barebone_call_frame_get_type" glib:type-struct="BareboneCallFrameIface">
		<prerequisite name="GObject.Object"/>
		<method name="get_nth_argument" c:identifier="frida_barebone_call_frame_get_nth_argument">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</instance-parameter>
				<parameter name="n" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_nth_argument" invoker="get_nth_argument">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</instance-parameter>
				<parameter name="n" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="replace_nth_argument" c:identifier="frida_barebone_call_frame_replace_nth_argument">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</instance-parameter>
				<parameter name="n" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="replace_nth_argument" invoker="replace_nth_argument">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</instance-parameter>
				<parameter name="n" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_return_value" c:identifier="frida_barebone_call_frame_get_return_value">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_return_value" invoker="get_return_value">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="replace_return_value" c:identifier="frida_barebone_call_frame_replace_return_value">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</instance-parameter>
				<parameter name="retval" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="replace_return_value" invoker="replace_return_value">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</instance-parameter>
				<parameter name="retval" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="force_return" c:identifier="frida_barebone_call_frame_force_return">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="force_return" invoker="force_return">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="commit" c:identifier="frida_barebone_call_frame_commit">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="commit_finish" c:identifier="frida_barebone_call_frame_commit_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="commit" invoker="commit">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="commit_finish" invoker="commit_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="return-address">
			<type name="guint64" c:type="guint64"/>
		</property>
		<method name="get_return_address" c:identifier="frida_barebone_call_frame_get_return_address">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_return_address" invoker="get_return_address">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="registers">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GLib.Variant" c:type="GVariant*"/>
			</type>
		</property>
		<method name="get_registers" c:identifier="frida_barebone_call_frame_get_registers">
			<return-value transfer-ownership="none">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Variant" c:type="GVariant*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_registers" invoker="get_registers">
			<return-value transfer-ownership="none">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Variant" c:type="GVariant*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="BareboneCallFrameIface" c:type="FridaBareboneCallFrameIface" glib:is-gtype-struct-for="BareboneCallFrame">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_nth_argument">
			<callback name="get_nth_argument" c:type="get_nth_argument">
				<return-value transfer-ownership="full">
					<type name="guint64" c:type="guint64"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
					</parameter>
					<parameter name="n" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="replace_nth_argument">
			<callback name="replace_nth_argument" c:type="replace_nth_argument">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
					</parameter>
					<parameter name="n" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="val" transfer-ownership="none">
						<type name="guint64" c:type="guint64"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_return_value">
			<callback name="get_return_value" c:type="get_return_value">
				<return-value transfer-ownership="full">
					<type name="guint64" c:type="guint64"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="replace_return_value">
			<callback name="replace_return_value" c:type="replace_return_value">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
					</parameter>
					<parameter name="retval" transfer-ownership="none">
						<type name="guint64" c:type="guint64"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="force_return">
			<callback name="force_return" c:type="force_return">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="commit">
			<callback name="commit" c:type="commit">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="commit_finish">
			<callback name="commit_finish" c:type="commit_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_return_address">
			<callback name="get_return_address" c:type="get_return_address">
				<return-value transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_registers">
			<callback name="get_registers" c:type="get_registers">
				<return-value transfer-ownership="none">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="BareboneInlineHook" c:type="FridaBareboneInlineHook" c:symbol-prefix="inline_hook" glib:type-name="FridaBareboneInlineHook" glib:get-type="frida_barebone_inline_hook_get_type" glib:type-struct="BareboneInlineHookIface">
		<prerequisite name="GObject.Object"/>
		<method name="destroy" c:identifier="frida_barebone_inline_hook_destroy">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="destroy_finish" c:identifier="frida_barebone_inline_hook_destroy_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="destroy" invoker="destroy">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="destroy_finish" invoker="destroy_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="enable" c:identifier="frida_barebone_inline_hook_enable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_finish" c:identifier="frida_barebone_inline_hook_enable_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="enable" invoker="enable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="enable_finish" invoker="enable_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="disable" c:identifier="frida_barebone_inline_hook_disable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_finish" c:identifier="frida_barebone_inline_hook_disable_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="disable" invoker="disable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="disable_finish" invoker="disable_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="BareboneInlineHookIface" c:type="FridaBareboneInlineHookIface" glib:is-gtype-struct-for="BareboneInlineHook">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="destroy">
			<callback name="destroy" c:type="destroy">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="destroy_finish">
			<callback name="destroy_finish" c:type="destroy_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enable">
			<callback name="enable" c:type="enable">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enable_finish">
			<callback name="enable_finish" c:type="enable_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="disable">
			<callback name="disable" c:type="disable">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="disable_finish">
			<callback name="disable_finish" c:type="disable_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.InlineHook" c:type="FridaBareboneInlineHook*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="BareboneAllocator" c:type="FridaBareboneAllocator" c:symbol-prefix="allocator" glib:type-name="FridaBareboneAllocator" glib:get-type="frida_barebone_allocator_get_type" glib:type-struct="BareboneAllocatorIface">
		<prerequisite name="GObject.Object"/>
		<method name="allocate" c:identifier="frida_barebone_allocator_allocate">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Allocator" c:type="FridaBareboneAllocator*"/>
				</instance-parameter>
				<parameter name="size" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="alignment" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="allocate_finish" c:identifier="frida_barebone_allocator_allocate_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.Allocation" c:type="FridaBareboneAllocation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Allocator" c:type="FridaBareboneAllocator*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="allocate" invoker="allocate">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Allocator" c:type="FridaBareboneAllocator*"/>
				</instance-parameter>
				<parameter name="size" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="alignment" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="allocate_finish" invoker="allocate_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.Allocation" c:type="FridaBareboneAllocation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Allocator" c:type="FridaBareboneAllocator*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="page-size">
			<type name="gulong" c:type="gsize"/>
		</property>
		<method name="get_page_size" c:identifier="frida_barebone_allocator_get_page_size">
			<return-value transfer-ownership="none">
				<type name="gulong" c:type="gsize"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Allocator" c:type="FridaBareboneAllocator*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_page_size" invoker="get_page_size">
			<return-value transfer-ownership="none">
				<type name="gulong" c:type="gsize"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Allocator" c:type="FridaBareboneAllocator*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="BareboneAllocatorIface" c:type="FridaBareboneAllocatorIface" glib:is-gtype-struct-for="BareboneAllocator">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="allocate">
			<callback name="allocate" c:type="allocate">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Allocator" c:type="FridaBareboneAllocator*"/>
					</parameter>
					<parameter name="size" transfer-ownership="none">
						<type name="gulong" c:type="gsize"/>
					</parameter>
					<parameter name="alignment" transfer-ownership="none">
						<type name="gulong" c:type="gsize"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="allocate_finish">
			<callback name="allocate_finish" c:type="allocate_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="FridaBarebone.Allocation" c:type="FridaBareboneAllocation*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Allocator" c:type="FridaBareboneAllocator*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_page_size">
			<callback name="get_page_size" c:type="get_page_size">
				<return-value transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Allocator" c:type="FridaBareboneAllocator*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="BareboneAllocation" c:type="FridaBareboneAllocation" c:symbol-prefix="allocation" glib:type-name="FridaBareboneAllocation" glib:get-type="frida_barebone_allocation_get_type" glib:type-struct="BareboneAllocationIface">
		<prerequisite name="GObject.Object"/>
		<method name="deallocate" c:identifier="frida_barebone_allocation_deallocate">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Allocation" c:type="FridaBareboneAllocation*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deallocate_finish" c:identifier="frida_barebone_allocation_deallocate_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Allocation" c:type="FridaBareboneAllocation*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deallocate" invoker="deallocate">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Allocation" c:type="FridaBareboneAllocation*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="deallocate_finish" invoker="deallocate_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Allocation" c:type="FridaBareboneAllocation*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="virtual-address">
			<type name="guint64" c:type="guint64"/>
		</property>
		<method name="get_virtual_address" c:identifier="frida_barebone_allocation_get_virtual_address">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Allocation" c:type="FridaBareboneAllocation*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_virtual_address" invoker="get_virtual_address">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.Allocation" c:type="FridaBareboneAllocation*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="BareboneAllocationIface" c:type="FridaBareboneAllocationIface" glib:is-gtype-struct-for="BareboneAllocation">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="deallocate">
			<callback name="deallocate" c:type="deallocate">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Allocation" c:type="FridaBareboneAllocation*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="deallocate_finish">
			<callback name="deallocate_finish" c:type="deallocate_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Allocation" c:type="FridaBareboneAllocation*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_virtual_address">
			<callback name="get_virtual_address" c:type="get_virtual_address">
				<return-value transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.Allocation" c:type="FridaBareboneAllocation*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="BareboneCallbackHandler" c:type="FridaBareboneCallbackHandler" c:symbol-prefix="callback_handler" glib:type-name="FridaBareboneCallbackHandler" glib:get-type="frida_barebone_callback_handler_get_type" glib:type-struct="BareboneCallbackHandlerIface">
		<prerequisite name="GObject.Object"/>
		<method name="handle_invocation" c:identifier="frida_barebone_callback_handler_handle_invocation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallbackHandler" c:type="FridaBareboneCallbackHandler*"/>
				</instance-parameter>
				<parameter name="args" transfer-ownership="none">
					<array length="1" c:type="guint64*">
						<type name="guint64" c:type="guint64"/>
					</array>
				</parameter>
				<parameter name="args_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="frame" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="handle_invocation_finish" c:identifier="frida_barebone_callback_handler_handle_invocation_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallbackHandler" c:type="FridaBareboneCallbackHandler*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="handle_invocation" invoker="handle_invocation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallbackHandler" c:type="FridaBareboneCallbackHandler*"/>
				</instance-parameter>
				<parameter name="args" transfer-ownership="none">
					<array length="1" c:type="guint64*">
						<type name="guint64" c:type="guint64"/>
					</array>
				</parameter>
				<parameter name="args_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="frame" transfer-ownership="none">
					<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="handle_invocation_finish" invoker="handle_invocation_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallbackHandler" c:type="FridaBareboneCallbackHandler*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="arity">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_arity" c:identifier="frida_barebone_callback_handler_get_arity">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallbackHandler" c:type="FridaBareboneCallbackHandler*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_arity" invoker="get_arity">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.CallbackHandler" c:type="FridaBareboneCallbackHandler*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="BareboneCallbackHandlerIface" c:type="FridaBareboneCallbackHandlerIface" glib:is-gtype-struct-for="BareboneCallbackHandler">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="handle_invocation">
			<callback name="handle_invocation" c:type="handle_invocation">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.CallbackHandler" c:type="FridaBareboneCallbackHandler*"/>
					</parameter>
					<parameter name="args" transfer-ownership="none">
						<array length="2" c:type="guint64*">
							<type name="guint64" c:type="guint64"/>
						</array>
					</parameter>
					<parameter name="args_length1" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="frame" transfer-ownership="none">
						<type name="FridaBarebone.CallFrame" c:type="FridaBareboneCallFrame*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="handle_invocation_finish">
			<callback name="handle_invocation_finish" c:type="handle_invocation_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="guint64" c:type="guint64"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.CallbackHandler" c:type="FridaBareboneCallbackHandler*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_arity">
			<callback name="get_arity" c:type="get_arity">
				<return-value transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.CallbackHandler" c:type="FridaBareboneCallbackHandler*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="BareboneInvocationListener" c:type="FridaBareboneInvocationListener" c:symbol-prefix="invocation_listener" glib:type-name="FridaBareboneInvocationListener" glib:get-type="frida_barebone_invocation_listener_get_type" glib:type-struct="BareboneInvocationListenerIface">
		<prerequisite name="GObject.Object"/>
		<property name="kind">
			<type name="Frida.FridaBareboneInvocationListenerKind" c:type="FridaBareboneInvocationListenerKind"/>
		</property>
		<method name="get_kind" c:identifier="frida_barebone_invocation_listener_get_kind">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaBareboneInvocationListenerKind" c:type="FridaBareboneInvocationListenerKind"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationListener" c:type="FridaBareboneInvocationListener*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_kind" invoker="get_kind">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaBareboneInvocationListenerKind" c:type="FridaBareboneInvocationListenerKind"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationListener" c:type="FridaBareboneInvocationListener*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="BareboneInvocationListenerIface" c:type="FridaBareboneInvocationListenerIface" glib:is-gtype-struct-for="BareboneInvocationListener">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_kind">
			<callback name="get_kind" c:type="get_kind">
				<return-value transfer-ownership="none">
					<type name="Frida.FridaBareboneInvocationListenerKind" c:type="FridaBareboneInvocationListenerKind"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.InvocationListener" c:type="FridaBareboneInvocationListener*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<enumeration name="BareboneInvocationListenerKind" c:type="FridaBareboneInvocationListenerKind" glib:type-name="FridaBareboneInvocationListenerKind" glib:get-type="frida_barebone_invocation_listener_kind_get_type">
		<member name="call" c:identifier="FRIDA_BAREBONE_INVOCATION_LISTENER_KIND_CALL" value="0"/>
		<member name="probe" c:identifier="FRIDA_BAREBONE_INVOCATION_LISTENER_KIND_PROBE" value="1"/>
	</enumeration>
	<interface name="BareboneBreakpointInvocationListener" c:type="FridaBareboneBreakpointInvocationListener" c:symbol-prefix="breakpoint_invocation_listener" glib:type-name="FridaBareboneBreakpointInvocationListener" glib:get-type="frida_barebone_breakpoint_invocation_listener_get_type" glib:type-struct="BareboneBreakpointInvocationListenerIface">
		<prerequisite name="FridaBarebone.InvocationListener"/>
		<method name="on_enter" c:identifier="frida_barebone_breakpoint_invocation_listener_on_enter">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.BreakpointInvocationListener" c:type="FridaBareboneBreakpointInvocationListener*"/>
				</instance-parameter>
				<parameter name="context" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="on_enter" invoker="on_enter">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.BreakpointInvocationListener" c:type="FridaBareboneBreakpointInvocationListener*"/>
				</instance-parameter>
				<parameter name="context" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="on_leave" c:identifier="frida_barebone_breakpoint_invocation_listener_on_leave">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.BreakpointInvocationListener" c:type="FridaBareboneBreakpointInvocationListener*"/>
				</instance-parameter>
				<parameter name="context" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="on_leave" invoker="on_leave">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.BreakpointInvocationListener" c:type="FridaBareboneBreakpointInvocationListener*"/>
				</instance-parameter>
				<parameter name="context" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="BareboneBreakpointInvocationListenerIface" c:type="FridaBareboneBreakpointInvocationListenerIface" glib:is-gtype-struct-for="BareboneBreakpointInvocationListener">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="on_enter">
			<callback name="on_enter" c:type="on_enter">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.BreakpointInvocationListener" c:type="FridaBareboneBreakpointInvocationListener*"/>
					</parameter>
					<parameter name="context" transfer-ownership="none">
						<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="on_leave">
			<callback name="on_leave" c:type="on_leave">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.BreakpointInvocationListener" c:type="FridaBareboneBreakpointInvocationListener*"/>
					</parameter>
					<parameter name="context" transfer-ownership="none">
						<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="BareboneInlineInvocationListener" c:type="FridaBareboneInlineInvocationListener" c:symbol-prefix="inline_invocation_listener" glib:type-name="FridaBareboneInlineInvocationListener" glib:get-type="frida_barebone_inline_invocation_listener_get_type" glib:type-struct="BareboneInlineInvocationListenerIface">
		<prerequisite name="FridaBarebone.InvocationListener"/>
		<property name="on-enter">
			<type name="guint64" c:type="guint64"/>
		</property>
		<method name="get_on_enter" c:identifier="frida_barebone_inline_invocation_listener_get_on_enter">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InlineInvocationListener" c:type="FridaBareboneInlineInvocationListener*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_on_enter" invoker="get_on_enter">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InlineInvocationListener" c:type="FridaBareboneInlineInvocationListener*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="on-leave">
			<type name="guint64" c:type="guint64"/>
		</property>
		<method name="get_on_leave" c:identifier="frida_barebone_inline_invocation_listener_get_on_leave">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InlineInvocationListener" c:type="FridaBareboneInlineInvocationListener*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_on_leave" invoker="get_on_leave">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InlineInvocationListener" c:type="FridaBareboneInlineInvocationListener*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="BareboneInlineInvocationListenerIface" c:type="FridaBareboneInlineInvocationListenerIface" glib:is-gtype-struct-for="BareboneInlineInvocationListener">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_on_enter">
			<callback name="get_on_enter" c:type="get_on_enter">
				<return-value transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.InlineInvocationListener" c:type="FridaBareboneInlineInvocationListener*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_on_leave">
			<callback name="get_on_leave" c:type="get_on_leave">
				<return-value transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.InlineInvocationListener" c:type="FridaBareboneInlineInvocationListener*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="BareboneInvocationContext" c:type="FridaBareboneInvocationContext" c:symbol-prefix="invocation_context" glib:type-name="FridaBareboneInvocationContext" glib:get-type="frida_barebone_invocation_context_get_type" glib:type-struct="BareboneInvocationContextIface">
		<prerequisite name="GObject.Object"/>
		<method name="get_nth_argument" c:identifier="frida_barebone_invocation_context_get_nth_argument">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</instance-parameter>
				<parameter name="n" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_nth_argument" invoker="get_nth_argument">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</instance-parameter>
				<parameter name="n" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="replace_nth_argument" c:identifier="frida_barebone_invocation_context_replace_nth_argument">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</instance-parameter>
				<parameter name="n" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="replace_nth_argument" invoker="replace_nth_argument">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</instance-parameter>
				<parameter name="n" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_return_value" c:identifier="frida_barebone_invocation_context_get_return_value">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_return_value" invoker="get_return_value">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="replace_return_value" c:identifier="frida_barebone_invocation_context_replace_return_value">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</instance-parameter>
				<parameter name="retval" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="replace_return_value" invoker="replace_return_value">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</instance-parameter>
				<parameter name="retval" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="return-address">
			<type name="guint64" c:type="guint64"/>
		</property>
		<method name="get_return_address" c:identifier="frida_barebone_invocation_context_get_return_address">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_return_address" invoker="get_return_address">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="thread-id">
			<type name="utf8" c:type="const gchar*"/>
		</property>
		<method name="get_thread_id" c:identifier="frida_barebone_invocation_context_get_thread_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_thread_id" invoker="get_thread_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="depth">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_depth" c:identifier="frida_barebone_invocation_context_get_depth">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_depth" invoker="get_depth">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="registers">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GLib.Variant" c:type="GVariant*"/>
			</type>
		</property>
		<method name="get_registers" c:identifier="frida_barebone_invocation_context_get_registers">
			<return-value transfer-ownership="none">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Variant" c:type="GVariant*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_registers" invoker="get_registers">
			<return-value transfer-ownership="none">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Variant" c:type="GVariant*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="user-data">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="gpointer" c:type="void*"/>
				<type name="GObject.Object" c:type="GObject*"/>
			</type>
		</property>
		<method name="get_user_data" c:identifier="frida_barebone_invocation_context_get_user_data">
			<return-value transfer-ownership="none">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="gpointer" c:type="void*"/>
					<type name="GObject.Object" c:type="GObject*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_user_data" invoker="get_user_data">
			<return-value transfer-ownership="none">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="gpointer" c:type="void*"/>
					<type name="GObject.Object" c:type="GObject*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="BareboneInvocationContextIface" c:type="FridaBareboneInvocationContextIface" glib:is-gtype-struct-for="BareboneInvocationContext">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_nth_argument">
			<callback name="get_nth_argument" c:type="get_nth_argument">
				<return-value transfer-ownership="full">
					<type name="guint64" c:type="guint64"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
					</parameter>
					<parameter name="n" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="replace_nth_argument">
			<callback name="replace_nth_argument" c:type="replace_nth_argument">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
					</parameter>
					<parameter name="n" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="val" transfer-ownership="none">
						<type name="guint64" c:type="guint64"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_return_value">
			<callback name="get_return_value" c:type="get_return_value">
				<return-value transfer-ownership="full">
					<type name="guint64" c:type="guint64"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="replace_return_value">
			<callback name="replace_return_value" c:type="replace_return_value">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
					</parameter>
					<parameter name="retval" transfer-ownership="none">
						<type name="guint64" c:type="guint64"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_return_address">
			<callback name="get_return_address" c:type="get_return_address">
				<return-value transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_thread_id">
			<callback name="get_thread_id" c:type="get_thread_id">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_depth">
			<callback name="get_depth" c:type="get_depth">
				<return-value transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_registers">
			<callback name="get_registers" c:type="get_registers">
				<return-value transfer-ownership="none">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_user_data">
			<callback name="get_user_data" c:type="get_user_data">
				<return-value transfer-ownership="none">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="gpointer" c:type="void*"/>
						<type name="GObject.Object" c:type="GObject*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaBarebone.InvocationContext" c:type="FridaBareboneInvocationContext*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<callback name="BareboneFoundRangeFunc" c:type="FridaBareboneFoundRangeFunc">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="details" transfer-ownership="none">
				<type name="FridaBarebone.RangeDetails" c:type="FridaBareboneRangeDetails*"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<function name="barebone_append_memory_scanner_data" c:identifier="frida_barebone_append_memory_scanner_data">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="builder" transfer-ownership="none">
				<type name="Frida.BufferBuilder" c:type="FridaBufferBuilder*"/>
			</parameter>
			<parameter name="ranges" transfer-ownership="none">
				<type name="Gee.List" c:type="GeeList*">
					<type name="FridaGum.MemoryRange" c:type="GumMemoryRange*"/>
				</type>
			</parameter>
			<parameter name="pattern" transfer-ownership="none">
				<type name="FridaBarebone.MatchPattern" c:type="FridaBareboneMatchPattern*"/>
			</parameter>
			<parameter name="max_matches" transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</parameter>
			<parameter name="data_size" direction="out" transfer-ownership="full">
				<type name="gulong" c:type="gsize*"/>
			</parameter>
		</parameters>
	</function>
	<enumeration name="Runtime" c:type="FridaRuntime" glib:type-name="FridaRuntime" glib:get-type="frida_runtime_get_type">
		<member name="glib" c:identifier="FRIDA_RUNTIME_GLIB" value="0"/>
		<member name="other" c:identifier="FRIDA_RUNTIME_OTHER" value="1"/>
	</enumeration>
	<function name="runtime_from_nick" c:identifier="frida_runtime_from_nick" throws="1">
		<return-value transfer-ownership="full">
			<type name="Frida.Runtime" c:type="FridaRuntime"/>
		</return-value>
		<parameters>
			<parameter name="nick" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="runtime_to_nick" c:identifier="frida_runtime_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="Frida.Runtime" c:type="FridaRuntime"/>
			</instance-parameter>
		</parameters>
	</function>
	<enumeration name="DeviceType" c:type="FridaDeviceType" glib:type-name="FridaDeviceType" glib:get-type="frida_device_type_get_type">
		<member name="local" c:identifier="FRIDA_DEVICE_TYPE_LOCAL" value="0"/>
		<member name="remote" c:identifier="FRIDA_DEVICE_TYPE_REMOTE" value="1"/>
		<member name="usb" c:identifier="FRIDA_DEVICE_TYPE_USB" value="2"/>
	</enumeration>
	<function name="device_type_from_nick" c:identifier="frida_device_type_from_nick" throws="1">
		<return-value transfer-ownership="full">
			<type name="Frida.DeviceType" c:type="FridaDeviceType"/>
		</return-value>
		<parameters>
			<parameter name="nick" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="device_type_to_nick" c:identifier="frida_device_type_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="Frida.DeviceType" c:type="FridaDeviceType"/>
			</instance-parameter>
		</parameters>
	</function>
	<enumeration name="HostSessionProviderKind" c:type="FridaHostSessionProviderKind" glib:type-name="FridaHostSessionProviderKind" glib:get-type="frida_host_session_provider_kind_get_type">
		<member name="local" c:identifier="FRIDA_HOST_SESSION_PROVIDER_KIND_LOCAL" value="0"/>
		<member name="remote" c:identifier="FRIDA_HOST_SESSION_PROVIDER_KIND_REMOTE" value="1"/>
		<member name="usb" c:identifier="FRIDA_HOST_SESSION_PROVIDER_KIND_USB" value="2"/>
	</enumeration>
	<enumeration name="AgentMode" c:type="FridaAgentMode" glib:type-name="FridaAgentMode" glib:get-type="frida_agent_mode_get_type">
		<member name="instanced" c:identifier="FRIDA_AGENT_MODE_INSTANCED" value="0"/>
		<member name="singleton" c:identifier="FRIDA_AGENT_MODE_SINGLETON" value="1"/>
	</enumeration>
	<enumeration name="SourceMaps" c:type="FridaSourceMaps" glib:type-name="FridaSourceMaps" glib:get-type="frida_source_maps_get_type">
		<member name="included" c:identifier="FRIDA_SOURCE_MAPS_INCLUDED" value="0"/>
		<member name="omitted" c:identifier="FRIDA_SOURCE_MAPS_OMITTED" value="1"/>
	</enumeration>
	<function name="source_maps_from_nick" c:identifier="frida_source_maps_from_nick" throws="1">
		<return-value transfer-ownership="full">
			<type name="Frida.SourceMaps" c:type="FridaSourceMaps"/>
		</return-value>
		<parameters>
			<parameter name="nick" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="source_maps_to_nick" c:identifier="frida_source_maps_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="Frida.SourceMaps" c:type="FridaSourceMaps"/>
			</instance-parameter>
		</parameters>
	</function>
	<enumeration name="JsCompression" c:type="FridaJsCompression" glib:type-name="FridaJsCompression" glib:get-type="frida_js_compression_get_type">
		<member name="none" c:identifier="FRIDA_JS_COMPRESSION_NONE" value="0"/>
		<member name="terser" c:identifier="FRIDA_JS_COMPRESSION_TERSER" value="1"/>
	</enumeration>
	<function name="js_compression_from_nick" c:identifier="frida_js_compression_from_nick" throws="1">
		<return-value transfer-ownership="full">
			<type name="Frida.JsCompression" c:type="FridaJsCompression"/>
		</return-value>
		<parameters>
			<parameter name="nick" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="js_compression_to_nick" c:identifier="frida_js_compression_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="Frida.JsCompression" c:type="FridaJsCompression"/>
			</instance-parameter>
		</parameters>
	</function>
	<class name="DeviceManager" c:type="FridaDeviceManager" c:symbol-prefix="device_manager" glib:type-name="FridaDeviceManager" glib:get-type="frida_device_manager_get_type" glib:type-struct="DeviceManagerClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DeviceManagerPrivate" c:type="FridaDeviceManagerPrivate*"/>
		</field>
		<method name="close" c:identifier="frida_device_manager_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_device_manager_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_sync" c:identifier="frida_device_manager_close_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_device_by_id" c:identifier="frida_device_manager_get_device_by_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_device_by_id_finish" c:identifier="frida_device_manager_get_device_by_id_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_device_by_id_sync" c:identifier="frida_device_manager_get_device_by_id_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_device_by_type" c:identifier="frida_device_manager_get_device_by_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="Frida.DeviceType" c:type="FridaDeviceType"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_device_by_type_finish" c:identifier="frida_device_manager_get_device_by_type_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_device_by_type_sync" c:identifier="frida_device_manager_get_device_by_type_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="Frida.DeviceType" c:type="FridaDeviceType"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_device" c:identifier="frida_device_manager_get_device">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="predicate" transfer-ownership="none" closure="1" scope="call">
					<type name="Frida.DeviceManagerPredicate" c:type="FridaDeviceManagerPredicate"/>
				</parameter>
				<parameter name="predicate_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_device_finish" c:identifier="frida_device_manager_get_device_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_device_sync" c:identifier="frida_device_manager_get_device_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="predicate" transfer-ownership="none" closure="1" scope="call">
					<type name="Frida.DeviceManagerPredicate" c:type="FridaDeviceManagerPredicate"/>
				</parameter>
				<parameter name="predicate_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_device_by_id" c:identifier="frida_device_manager_find_device_by_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_device_by_id_finish" c:identifier="frida_device_manager_find_device_by_id_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_device_by_id_sync" c:identifier="frida_device_manager_find_device_by_id_sync" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_device_by_type" c:identifier="frida_device_manager_find_device_by_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="Frida.DeviceType" c:type="FridaDeviceType"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_device_by_type_finish" c:identifier="frida_device_manager_find_device_by_type_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_device_by_type_sync" c:identifier="frida_device_manager_find_device_by_type_sync" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="Frida.DeviceType" c:type="FridaDeviceType"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_device" c:identifier="frida_device_manager_find_device">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="predicate" transfer-ownership="none" closure="1" scope="call">
					<type name="Frida.DeviceManagerPredicate" c:type="FridaDeviceManagerPredicate"/>
				</parameter>
				<parameter name="predicate_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_device_finish" c:identifier="frida_device_manager_find_device_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_device_sync" c:identifier="frida_device_manager_find_device_sync" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="predicate" transfer-ownership="none" closure="1" scope="call">
					<type name="Frida.DeviceManagerPredicate" c:type="FridaDeviceManagerPredicate"/>
				</parameter>
				<parameter name="predicate_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_devices" c:identifier="frida_device_manager_enumerate_devices">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_devices_finish" c:identifier="frida_device_manager_enumerate_devices_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.DeviceList" c:type="FridaDeviceList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_devices_sync" c:identifier="frida_device_manager_enumerate_devices_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.DeviceList" c:type="FridaDeviceList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_remote_device" c:identifier="frida_device_manager_add_remote_device">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_remote_device_finish" c:identifier="frida_device_manager_add_remote_device_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_remote_device_sync" c:identifier="frida_device_manager_add_remote_device_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove_remote_device" c:identifier="frida_device_manager_remove_remote_device">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove_remote_device_finish" c:identifier="frida_device_manager_remove_remote_device_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove_remote_device_sync" c:identifier="frida_device_manager_remove_remote_device_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="_release_device" c:identifier="_frida_device_manager_release_device">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="device" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_device_manager_new">
			<return-value transfer-ownership="full">
				<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
			</return-value>
		</constructor>
		<glib:signal name="added">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="removed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="changed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<callback name="Predicate" c:type="FridaDeviceManagerPredicate">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
	</class>
	<record name="DeviceManagerClass" c:type="FridaDeviceManagerClass" glib:is-gtype-struct-for="DeviceManager">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DeviceManagerPrivate" c:type="FridaDeviceManagerPrivate" disguised="1"/>
	<class name="DeviceList" c:type="FridaDeviceList" c:symbol-prefix="device_list" glib:type-name="FridaDeviceList" glib:get-type="frida_device_list_get_type" glib:type-struct="DeviceListClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DeviceListPrivate" c:type="FridaDeviceListPrivate*"/>
		</field>
		<method name="size" c:identifier="frida_device_list_size">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceList" c:type="FridaDeviceList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get" c:identifier="frida_device_list_get">
			<return-value transfer-ownership="full">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceList" c:type="FridaDeviceList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="DeviceListClass" c:type="FridaDeviceListClass" glib:is-gtype-struct-for="DeviceList">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DeviceListPrivate" c:type="FridaDeviceListPrivate" disguised="1"/>
	<class name="Device" c:type="FridaDevice" c:symbol-prefix="device" glib:type-name="FridaDevice" glib:get-type="frida_device_get_type" glib:type-struct="DeviceClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DevicePrivate" c:type="FridaDevicePrivate*"/>
		</field>
		<field name="current_host_session" writable="1" nullable="1">
			<type name="Frida.HostSession" c:type="FridaHostSession*"/>
		</field>
		<method name="is_lost" c:identifier="frida_device_is_lost">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="query_system_parameters" c:identifier="frida_device_query_system_parameters">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_system_parameters_finish" c:identifier="frida_device_query_system_parameters_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Variant" c:type="GVariant*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_system_parameters_sync" c:identifier="frida_device_query_system_parameters_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Variant" c:type="GVariant*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_frontmost_application" c:identifier="frida_device_get_frontmost_application">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.FrontmostQueryOptions" c:type="FridaFrontmostQueryOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_frontmost_application_finish" c:identifier="frida_device_get_frontmost_application_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Application" c:type="FridaApplication*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_frontmost_application_sync" c:identifier="frida_device_get_frontmost_application_sync" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Application" c:type="FridaApplication*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.FrontmostQueryOptions" c:type="FridaFrontmostQueryOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_applications" c:identifier="frida_device_enumerate_applications">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ApplicationQueryOptions" c:type="FridaApplicationQueryOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_applications_finish" c:identifier="frida_device_enumerate_applications_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.ApplicationList" c:type="FridaApplicationList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_applications_sync" c:identifier="frida_device_enumerate_applications_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.ApplicationList" c:type="FridaApplicationList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ApplicationQueryOptions" c:type="FridaApplicationQueryOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_process_by_pid" c:identifier="frida_device_get_process_by_pid">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_process_by_pid_finish" c:identifier="frida_device_get_process_by_pid_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_process_by_pid_sync" c:identifier="frida_device_get_process_by_pid_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_process_by_name" c:identifier="frida_device_get_process_by_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_process_by_name_finish" c:identifier="frida_device_get_process_by_name_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_process_by_name_sync" c:identifier="frida_device_get_process_by_name_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_process" c:identifier="frida_device_get_process">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="predicate" transfer-ownership="none" closure="1" scope="call">
					<type name="Frida.DeviceProcessPredicate" c:type="FridaDeviceProcessPredicate"/>
				</parameter>
				<parameter name="predicate_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_process_finish" c:identifier="frida_device_get_process_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_process_sync" c:identifier="frida_device_get_process_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="predicate" transfer-ownership="none" closure="1" scope="call">
					<type name="Frida.DeviceProcessPredicate" c:type="FridaDeviceProcessPredicate"/>
				</parameter>
				<parameter name="predicate_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_process_by_pid" c:identifier="frida_device_find_process_by_pid">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_process_by_pid_finish" c:identifier="frida_device_find_process_by_pid_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_process_by_pid_sync" c:identifier="frida_device_find_process_by_pid_sync" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_process_by_name" c:identifier="frida_device_find_process_by_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_process_by_name_finish" c:identifier="frida_device_find_process_by_name_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_process_by_name_sync" c:identifier="frida_device_find_process_by_name_sync" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_process" c:identifier="frida_device_find_process">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="predicate" transfer-ownership="none" closure="1" scope="call">
					<type name="Frida.DeviceProcessPredicate" c:type="FridaDeviceProcessPredicate"/>
				</parameter>
				<parameter name="predicate_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_process_finish" c:identifier="frida_device_find_process_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_process_sync" c:identifier="frida_device_find_process_sync" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="predicate" transfer-ownership="none" closure="1" scope="call">
					<type name="Frida.DeviceProcessPredicate" c:type="FridaDeviceProcessPredicate"/>
				</parameter>
				<parameter name="predicate_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_processes" c:identifier="frida_device_enumerate_processes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessQueryOptions" c:type="FridaProcessQueryOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_processes_finish" c:identifier="frida_device_enumerate_processes_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.ProcessList" c:type="FridaProcessList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_processes_sync" c:identifier="frida_device_enumerate_processes_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.ProcessList" c:type="FridaProcessList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessQueryOptions" c:type="FridaProcessQueryOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_spawn_gating" c:identifier="frida_device_enable_spawn_gating">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_spawn_gating_finish" c:identifier="frida_device_enable_spawn_gating_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_spawn_gating_sync" c:identifier="frida_device_enable_spawn_gating_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_spawn_gating" c:identifier="frida_device_disable_spawn_gating">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_spawn_gating_finish" c:identifier="frida_device_disable_spawn_gating_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_spawn_gating_sync" c:identifier="frida_device_disable_spawn_gating_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_pending_spawn" c:identifier="frida_device_enumerate_pending_spawn">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_pending_spawn_finish" c:identifier="frida_device_enumerate_pending_spawn_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.SpawnList" c:type="FridaSpawnList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_pending_spawn_sync" c:identifier="frida_device_enumerate_pending_spawn_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.SpawnList" c:type="FridaSpawnList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_pending_children" c:identifier="frida_device_enumerate_pending_children">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_pending_children_finish" c:identifier="frida_device_enumerate_pending_children_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.ChildList" c:type="FridaChildList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_pending_children_sync" c:identifier="frida_device_enumerate_pending_children_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.ChildList" c:type="FridaChildList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="spawn" c:identifier="frida_device_spawn">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="program" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="spawn_finish" c:identifier="frida_device_spawn_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="spawn_sync" c:identifier="frida_device_spawn_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="program" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="input" c:identifier="frida_device_input">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="input_finish" c:identifier="frida_device_input_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="input_sync" c:identifier="frida_device_input_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="resume" c:identifier="frida_device_resume">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="resume_finish" c:identifier="frida_device_resume_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="resume_sync" c:identifier="frida_device_resume_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="kill" c:identifier="frida_device_kill">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="kill_finish" c:identifier="frida_device_kill_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="kill_sync" c:identifier="frida_device_kill_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="attach" c:identifier="frida_device_attach">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.SessionOptions" c:type="FridaSessionOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="attach_finish" c:identifier="frida_device_attach_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Session" c:type="FridaSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="attach_sync" c:identifier="frida_device_attach_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Session" c:type="FridaSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.SessionOptions" c:type="FridaSessionOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_file" c:identifier="frida_device_inject_library_file">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_file_finish" c:identifier="frida_device_inject_library_file_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_file_sync" c:identifier="frida_device_inject_library_file_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_blob" c:identifier="frida_device_inject_library_blob">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="blob" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_blob_finish" c:identifier="frida_device_inject_library_blob_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_blob_sync" c:identifier="frida_device_inject_library_blob_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="blob" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="open_channel" c:identifier="frida_device_open_channel">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="open_channel_finish" c:identifier="frida_device_open_channel_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.IOStream" c:type="GIOStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="open_channel_sync" c:identifier="frida_device_open_channel_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.IOStream" c:type="GIOStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unpair" c:identifier="frida_device_unpair">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unpair_finish" c:identifier="frida_device_unpair_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unpair_sync" c:identifier="frida_device_unpair_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_host_session" c:identifier="frida_device_get_host_session">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_host_session_finish" c:identifier="frida_device_get_host_session_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.HostSession" c:type="FridaHostSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_host_session_sync" c:identifier="frida_device_get_host_session_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.HostSession" c:type="FridaHostSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="_release_session" c:identifier="_frida_device_release_session">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="session" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</parameter>
				<parameter name="may_block" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="_release_session_finish" c:identifier="_frida_device_release_session_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="id" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_id" c:identifier="frida_device_get_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="name" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="frida_device_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="icon" writable="1" construct-only="1">
			<type name="GLib.Variant" c:type="GVariant*"/>
		</property>
		<method name="get_icon" c:identifier="frida_device_get_icon">
			<return-value transfer-ownership="none" nullable="1">
				<type name="GLib.Variant" c:type="GVariant*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="dtype" writable="1" construct-only="1">
			<type name="Frida.DeviceType" c:type="FridaDeviceType"/>
		</property>
		<method name="get_dtype" c:identifier="frida_device_get_dtype">
			<return-value transfer-ownership="none">
				<type name="Frida.DeviceType" c:type="FridaDeviceType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="bus">
			<type name="Frida.Bus" c:type="FridaBus*"/>
		</property>
		<method name="get_bus" c:identifier="frida_device_get_bus">
			<return-value transfer-ownership="none">
				<type name="Frida.Bus" c:type="FridaBus*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="provider" writable="1" construct-only="1">
			<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
		</property>
		<method name="get_provider" c:identifier="frida_device_get_provider">
			<return-value transfer-ownership="none">
				<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="manager" writable="1" construct-only="1">
			<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
		</property>
		<method name="get_manager" c:identifier="frida_device_get_manager">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="spawn-added">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="spawn" transfer-ownership="none">
					<type name="Frida.Spawn" c:type="FridaSpawn*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="spawn-removed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="spawn" transfer-ownership="none">
					<type name="Frida.Spawn" c:type="FridaSpawn*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="child-added">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="child" transfer-ownership="none">
					<type name="Frida.Child" c:type="FridaChild*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="child-removed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="child" transfer-ownership="none">
					<type name="Frida.Child" c:type="FridaChild*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="process-crashed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="crash" transfer-ownership="none">
					<type name="Frida.Crash" c:type="FridaCrash*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="output">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="fd" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="uninjected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="lost">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<callback name="ProcessPredicate" c:type="FridaDeviceProcessPredicate">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="process" transfer-ownership="none">
					<type name="Frida.Process" c:type="FridaProcess*"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
	</class>
	<record name="DeviceClass" c:type="FridaDeviceClass" glib:is-gtype-struct-for="Device">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DevicePrivate" c:type="FridaDevicePrivate" disguised="1"/>
	<class name="RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions" c:symbol-prefix="remote_device_options" glib:type-name="FridaRemoteDeviceOptions" glib:get-type="frida_remote_device_options_get_type" glib:type-struct="RemoteDeviceOptionsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="RemoteDeviceOptionsPrivate" c:type="FridaRemoteDeviceOptionsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_remote_device_options_new">
			<return-value transfer-ownership="full">
				<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
			</return-value>
		</constructor>
		<property name="certificate" writable="1">
			<type name="Gio.TlsCertificate" c:type="GTlsCertificate*"/>
		</property>
		<method name="get_certificate" c:identifier="frida_remote_device_options_get_certificate">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Gio.TlsCertificate" c:type="GTlsCertificate*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_certificate" c:identifier="frida_remote_device_options_set_certificate">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gio.TlsCertificate" c:type="GTlsCertificate*"/>
				</parameter>
			</parameters>
		</method>
		<property name="origin" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_origin" c:identifier="frida_remote_device_options_get_origin">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_origin" c:identifier="frida_remote_device_options_set_origin">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="token" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_token" c:identifier="frida_remote_device_options_get_token">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_token" c:identifier="frida_remote_device_options_set_token">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="keepalive-interval" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_keepalive_interval" c:identifier="frida_remote_device_options_get_keepalive_interval">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_keepalive_interval" c:identifier="frida_remote_device_options_set_keepalive_interval">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="RemoteDeviceOptionsClass" c:type="FridaRemoteDeviceOptionsClass" glib:is-gtype-struct-for="RemoteDeviceOptions">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="RemoteDeviceOptionsPrivate" c:type="FridaRemoteDeviceOptionsPrivate" disguised="1"/>
	<class name="ApplicationList" c:type="FridaApplicationList" c:symbol-prefix="application_list" glib:type-name="FridaApplicationList" glib:get-type="frida_application_list_get_type" glib:type-struct="ApplicationListClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ApplicationListPrivate" c:type="FridaApplicationListPrivate*"/>
		</field>
		<method name="size" c:identifier="frida_application_list_size">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ApplicationList" c:type="FridaApplicationList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get" c:identifier="frida_application_list_get">
			<return-value transfer-ownership="full">
				<type name="Frida.Application" c:type="FridaApplication*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ApplicationList" c:type="FridaApplicationList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="ApplicationListClass" c:type="FridaApplicationListClass" glib:is-gtype-struct-for="ApplicationList">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ApplicationListPrivate" c:type="FridaApplicationListPrivate" disguised="1"/>
	<class name="Application" c:type="FridaApplication" c:symbol-prefix="application" glib:type-name="FridaApplication" glib:get-type="frida_application_get_type" glib:type-struct="ApplicationClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ApplicationPrivate" c:type="FridaApplicationPrivate*"/>
		</field>
		<property name="identifier" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_identifier" c:identifier="frida_application_get_identifier">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Application" c:type="FridaApplication*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="name" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="frida_application_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Application" c:type="FridaApplication*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="pid" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_pid" c:identifier="frida_application_get_pid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Application" c:type="FridaApplication*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="parameters" writable="1" construct-only="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GLib.Variant" c:type="GVariant*"/>
			</type>
		</property>
		<method name="get_parameters" c:identifier="frida_application_get_parameters">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Variant" c:type="GVariant*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Application" c:type="FridaApplication*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="ApplicationClass" c:type="FridaApplicationClass" glib:is-gtype-struct-for="Application">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ApplicationPrivate" c:type="FridaApplicationPrivate" disguised="1"/>
	<class name="ProcessList" c:type="FridaProcessList" c:symbol-prefix="process_list" glib:type-name="FridaProcessList" glib:get-type="frida_process_list_get_type" glib:type-struct="ProcessListClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ProcessListPrivate" c:type="FridaProcessListPrivate*"/>
		</field>
		<method name="size" c:identifier="frida_process_list_size">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ProcessList" c:type="FridaProcessList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get" c:identifier="frida_process_list_get">
			<return-value transfer-ownership="full">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ProcessList" c:type="FridaProcessList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="ProcessListClass" c:type="FridaProcessListClass" glib:is-gtype-struct-for="ProcessList">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ProcessListPrivate" c:type="FridaProcessListPrivate" disguised="1"/>
	<class name="Process" c:type="FridaProcess" c:symbol-prefix="process" glib:type-name="FridaProcess" glib:get-type="frida_process_get_type" glib:type-struct="ProcessClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ProcessPrivate" c:type="FridaProcessPrivate*"/>
		</field>
		<property name="pid" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_pid" c:identifier="frida_process_get_pid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Process" c:type="FridaProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="name" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="frida_process_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Process" c:type="FridaProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="parameters" writable="1" construct-only="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GLib.Variant" c:type="GVariant*"/>
			</type>
		</property>
		<method name="get_parameters" c:identifier="frida_process_get_parameters">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Variant" c:type="GVariant*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Process" c:type="FridaProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="ProcessClass" c:type="FridaProcessClass" glib:is-gtype-struct-for="Process">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ProcessPrivate" c:type="FridaProcessPrivate" disguised="1"/>
	<class name="ProcessMatchOptions" c:type="FridaProcessMatchOptions" c:symbol-prefix="process_match_options" glib:type-name="FridaProcessMatchOptions" glib:get-type="frida_process_match_options_get_type" glib:type-struct="ProcessMatchOptionsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ProcessMatchOptionsPrivate" c:type="FridaProcessMatchOptionsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_process_match_options_new">
			<return-value transfer-ownership="full">
				<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
			</return-value>
		</constructor>
		<property name="timeout" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_timeout" c:identifier="frida_process_match_options_get_timeout">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_timeout" c:identifier="frida_process_match_options_set_timeout">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="scope" writable="1">
			<type name="Frida.Scope" c:type="FridaScope"/>
		</property>
		<method name="get_scope" c:identifier="frida_process_match_options_get_scope">
			<return-value transfer-ownership="none">
				<type name="Frida.Scope" c:type="FridaScope"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_scope" c:identifier="frida_process_match_options_set_scope">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Frida.Scope" c:type="FridaScope"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="ProcessMatchOptionsClass" c:type="FridaProcessMatchOptionsClass" glib:is-gtype-struct-for="ProcessMatchOptions">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ProcessMatchOptionsPrivate" c:type="FridaProcessMatchOptionsPrivate" disguised="1"/>
	<class name="SpawnOptions" c:type="FridaSpawnOptions" c:symbol-prefix="spawn_options" glib:type-name="FridaSpawnOptions" glib:get-type="frida_spawn_options_get_type" glib:type-struct="SpawnOptionsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SpawnOptionsPrivate" c:type="FridaSpawnOptionsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_spawn_options_new">
			<return-value transfer-ownership="full">
				<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
			</return-value>
		</constructor>
		<property name="argv" writable="1">
			<array c:type="gchar**">
				<type name="utf8" c:type="gchar*"/>
			</array>
		</property>
		<method name="get_argv" c:identifier="frida_spawn_options_get_argv">
			<return-value transfer-ownership="none" nullable="1">
				<array length="0" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_argv" c:identifier="frida_spawn_options_set_argv">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<array length="1" c:type="gchar**">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="envp" writable="1">
			<array c:type="gchar**">
				<type name="utf8" c:type="gchar*"/>
			</array>
		</property>
		<method name="get_envp" c:identifier="frida_spawn_options_get_envp">
			<return-value transfer-ownership="none" nullable="1">
				<array length="0" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_envp" c:identifier="frida_spawn_options_set_envp">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<array length="1" c:type="gchar**">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="env" writable="1">
			<array c:type="gchar**">
				<type name="utf8" c:type="gchar*"/>
			</array>
		</property>
		<method name="get_env" c:identifier="frida_spawn_options_get_env">
			<return-value transfer-ownership="none" nullable="1">
				<array length="0" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_env" c:identifier="frida_spawn_options_set_env">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<array length="1" c:type="gchar**">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="cwd" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_cwd" c:identifier="frida_spawn_options_get_cwd">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_cwd" c:identifier="frida_spawn_options_set_cwd">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="stdio" writable="1">
			<type name="Frida.Stdio" c:type="FridaStdio"/>
		</property>
		<method name="get_stdio" c:identifier="frida_spawn_options_get_stdio">
			<return-value transfer-ownership="none">
				<type name="Frida.Stdio" c:type="FridaStdio"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_stdio" c:identifier="frida_spawn_options_set_stdio">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Frida.Stdio" c:type="FridaStdio"/>
				</parameter>
			</parameters>
		</method>
		<property name="aux" writable="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GLib.Variant" c:type="GVariant*"/>
			</type>
		</property>
		<method name="get_aux" c:identifier="frida_spawn_options_get_aux">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Variant" c:type="GVariant*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_aux" c:identifier="frida_spawn_options_set_aux">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SpawnOptionsClass" c:type="FridaSpawnOptionsClass" glib:is-gtype-struct-for="SpawnOptions">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SpawnOptionsPrivate" c:type="FridaSpawnOptionsPrivate" disguised="1"/>
	<class name="SpawnList" c:type="FridaSpawnList" c:symbol-prefix="spawn_list" glib:type-name="FridaSpawnList" glib:get-type="frida_spawn_list_get_type" glib:type-struct="SpawnListClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SpawnListPrivate" c:type="FridaSpawnListPrivate*"/>
		</field>
		<method name="size" c:identifier="frida_spawn_list_size">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnList" c:type="FridaSpawnList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get" c:identifier="frida_spawn_list_get">
			<return-value transfer-ownership="full">
				<type name="Frida.Spawn" c:type="FridaSpawn*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnList" c:type="FridaSpawnList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SpawnListClass" c:type="FridaSpawnListClass" glib:is-gtype-struct-for="SpawnList">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SpawnListPrivate" c:type="FridaSpawnListPrivate" disguised="1"/>
	<class name="Spawn" c:type="FridaSpawn" c:symbol-prefix="spawn" glib:type-name="FridaSpawn" glib:get-type="frida_spawn_get_type" glib:type-struct="SpawnClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SpawnPrivate" c:type="FridaSpawnPrivate*"/>
		</field>
		<property name="pid" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_pid" c:identifier="frida_spawn_get_pid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Spawn" c:type="FridaSpawn*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="identifier" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_identifier" c:identifier="frida_spawn_get_identifier">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Spawn" c:type="FridaSpawn*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="SpawnClass" c:type="FridaSpawnClass" glib:is-gtype-struct-for="Spawn">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SpawnPrivate" c:type="FridaSpawnPrivate" disguised="1"/>
	<class name="ChildList" c:type="FridaChildList" c:symbol-prefix="child_list" glib:type-name="FridaChildList" glib:get-type="frida_child_list_get_type" glib:type-struct="ChildListClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ChildListPrivate" c:type="FridaChildListPrivate*"/>
		</field>
		<method name="size" c:identifier="frida_child_list_size">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ChildList" c:type="FridaChildList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get" c:identifier="frida_child_list_get">
			<return-value transfer-ownership="full">
				<type name="Frida.Child" c:type="FridaChild*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ChildList" c:type="FridaChildList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="ChildListClass" c:type="FridaChildListClass" glib:is-gtype-struct-for="ChildList">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ChildListPrivate" c:type="FridaChildListPrivate" disguised="1"/>
	<class name="Child" c:type="FridaChild" c:symbol-prefix="child" glib:type-name="FridaChild" glib:get-type="frida_child_get_type" glib:type-struct="ChildClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ChildPrivate" c:type="FridaChildPrivate*"/>
		</field>
		<property name="pid" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_pid" c:identifier="frida_child_get_pid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Child" c:type="FridaChild*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="parent-pid" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_parent_pid" c:identifier="frida_child_get_parent_pid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Child" c:type="FridaChild*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="origin" writable="1" construct-only="1">
			<type name="Frida.ChildOrigin" c:type="FridaChildOrigin"/>
		</property>
		<method name="get_origin" c:identifier="frida_child_get_origin">
			<return-value transfer-ownership="none">
				<type name="Frida.ChildOrigin" c:type="FridaChildOrigin"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Child" c:type="FridaChild*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="identifier" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_identifier" c:identifier="frida_child_get_identifier">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Child" c:type="FridaChild*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="path" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_path" c:identifier="frida_child_get_path">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Child" c:type="FridaChild*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="argv" writable="1" construct-only="1">
			<array c:type="gchar**">
				<type name="utf8" c:type="gchar*"/>
			</array>
		</property>
		<method name="get_argv" c:identifier="frida_child_get_argv">
			<return-value transfer-ownership="none" nullable="1">
				<array length="0" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Child" c:type="FridaChild*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<property name="envp" writable="1" construct-only="1">
			<array c:type="gchar**">
				<type name="utf8" c:type="gchar*"/>
			</array>
		</property>
		<method name="get_envp" c:identifier="frida_child_get_envp">
			<return-value transfer-ownership="none" nullable="1">
				<array length="0" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Child" c:type="FridaChild*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="ChildClass" c:type="FridaChildClass" glib:is-gtype-struct-for="Child">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ChildPrivate" c:type="FridaChildPrivate" disguised="1"/>
	<class name="Crash" c:type="FridaCrash" c:symbol-prefix="crash" glib:type-name="FridaCrash" glib:get-type="frida_crash_get_type" glib:type-struct="CrashClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="CrashPrivate" c:type="FridaCrashPrivate*"/>
		</field>
		<property name="pid" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_pid" c:identifier="frida_crash_get_pid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Crash" c:type="FridaCrash*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="process-name" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_process_name" c:identifier="frida_crash_get_process_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Crash" c:type="FridaCrash*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="summary" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_summary" c:identifier="frida_crash_get_summary">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Crash" c:type="FridaCrash*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="report" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_report" c:identifier="frida_crash_get_report">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Crash" c:type="FridaCrash*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="parameters" writable="1" construct-only="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GLib.Variant" c:type="GVariant*"/>
			</type>
		</property>
		<method name="get_parameters" c:identifier="frida_crash_get_parameters">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Variant" c:type="GVariant*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Crash" c:type="FridaCrash*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="CrashClass" c:type="FridaCrashClass" glib:is-gtype-struct-for="Crash">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="CrashPrivate" c:type="FridaCrashPrivate" disguised="1"/>
	<class name="Bus" c:type="FridaBus" c:symbol-prefix="bus" glib:type-name="FridaBus" glib:get-type="frida_bus_get_type" glib:type-struct="BusClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BusPrivate" c:type="FridaBusPrivate*"/>
		</field>
		<method name="is_detached" c:identifier="frida_bus_is_detached">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Bus" c:type="FridaBus*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="attach" c:identifier="frida_bus_attach">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Bus" c:type="FridaBus*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="attach_finish" c:identifier="frida_bus_attach_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Bus" c:type="FridaBus*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="attach_sync" c:identifier="frida_bus_attach_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Bus" c:type="FridaBus*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="post" c:identifier="frida_bus_post">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Bus" c:type="FridaBus*"/>
				</instance-parameter>
				<parameter name="json" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</method>
		<property name="device" writable="1" construct-only="1">
			<type name="Frida.Device" c:type="FridaDevice*"/>
		</property>
		<method name="get_device" c:identifier="frida_bus_get_device">
			<return-value transfer-ownership="none">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Bus" c:type="FridaBus*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="detached">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="message">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="json" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="BusClass" c:type="FridaBusClass" glib:is-gtype-struct-for="Bus">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="BusPrivate" c:type="FridaBusPrivate" disguised="1"/>
	<class name="Session" c:type="FridaSession" c:symbol-prefix="session" glib:type-name="FridaSession" glib:get-type="frida_session_get_type" glib:type-struct="SessionClass" parent="GObject.Object">
		<implements name="Frida.AgentMessageSink"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SessionPrivate" c:type="FridaSessionPrivate*"/>
		</field>
		<field name="active_session" writable="1">
			<type name="Frida.AgentSession" c:type="FridaAgentSession*"/>
		</field>
		<method name="is_detached" c:identifier="frida_session_is_detached">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="detach" c:identifier="frida_session_detach">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="detach_finish" c:identifier="frida_session_detach_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="detach_sync" c:identifier="frida_session_detach_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="resume" c:identifier="frida_session_resume">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="resume_finish" c:identifier="frida_session_resume_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="resume_sync" c:identifier="frida_session_resume_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_child_gating" c:identifier="frida_session_enable_child_gating">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_child_gating_finish" c:identifier="frida_session_enable_child_gating_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_child_gating_sync" c:identifier="frida_session_enable_child_gating_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_child_gating" c:identifier="frida_session_disable_child_gating">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_child_gating_finish" c:identifier="frida_session_disable_child_gating_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_child_gating_sync" c:identifier="frida_session_disable_child_gating_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_script" c:identifier="frida_session_create_script">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="source" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ScriptOptions" c:type="FridaScriptOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_script_finish" c:identifier="frida_session_create_script_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Script" c:type="FridaScript*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_script_sync" c:identifier="frida_session_create_script_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Script" c:type="FridaScript*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="source" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ScriptOptions" c:type="FridaScriptOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_script_from_bytes" c:identifier="frida_session_create_script_from_bytes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="bytes" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ScriptOptions" c:type="FridaScriptOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_script_from_bytes_finish" c:identifier="frida_session_create_script_from_bytes_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Script" c:type="FridaScript*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_script_from_bytes_sync" c:identifier="frida_session_create_script_from_bytes_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Script" c:type="FridaScript*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="bytes" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ScriptOptions" c:type="FridaScriptOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="compile_script" c:identifier="frida_session_compile_script">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="source" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ScriptOptions" c:type="FridaScriptOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="compile_script_finish" c:identifier="frida_session_compile_script_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="compile_script_sync" c:identifier="frida_session_compile_script_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="source" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ScriptOptions" c:type="FridaScriptOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="snapshot_script" c:identifier="frida_session_snapshot_script">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="embed_script" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.SnapshotOptions" c:type="FridaSnapshotOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="snapshot_script_finish" c:identifier="frida_session_snapshot_script_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="snapshot_script_sync" c:identifier="frida_session_snapshot_script_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="embed_script" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.SnapshotOptions" c:type="FridaSnapshotOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="setup_peer_connection" c:identifier="frida_session_setup_peer_connection">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.PeerOptions" c:type="FridaPeerOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="setup_peer_connection_finish" c:identifier="frida_session_setup_peer_connection_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="setup_peer_connection_sync" c:identifier="frida_session_setup_peer_connection_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.PeerOptions" c:type="FridaPeerOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="join_portal" c:identifier="frida_session_join_portal">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.PortalOptions" c:type="FridaPortalOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="join_portal_finish" c:identifier="frida_session_join_portal_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.PortalMembership" c:type="FridaPortalMembership*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="join_portal_sync" c:identifier="frida_session_join_portal_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.PortalMembership" c:type="FridaPortalMembership*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.PortalOptions" c:type="FridaPortalOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="_release_script" c:identifier="_frida_session_release_script">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="script_id" transfer-ownership="none">
					<type name="Frida.AgentScriptId" c:type="FridaAgentScriptId"/>
				</parameter>
			</parameters>
		</method>
		<property name="pid" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_pid" c:identifier="frida_session_get_pid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="id" writable="1" construct-only="1">
			<type name="Frida.AgentSessionId" c:type="FridaAgentSessionId"/>
		</property>
		<method name="get_id" c:identifier="frida_session_get_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="Frida.AgentSessionId" c:type="FridaAgentSessionId*"/>
				</parameter>
			</parameters>
		</method>
		<property name="session">
			<type name="Frida.AgentSession" c:type="FridaAgentSession*"/>
		</property>
		<method name="get_session" c:identifier="frida_session_get_session">
			<return-value transfer-ownership="none">
				<type name="Frida.AgentSession" c:type="FridaAgentSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="persist-timeout" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_persist_timeout" c:identifier="frida_session_get_persist_timeout">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="device" writable="1" construct-only="1">
			<type name="Frida.Device" c:type="FridaDevice*"/>
		</property>
		<method name="get_device" c:identifier="frida_session_get_device">
			<return-value transfer-ownership="none">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="detached">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="reason" transfer-ownership="none">
					<type name="Frida.SessionDetachReason" c:type="FridaSessionDetachReason"/>
				</parameter>
				<parameter name="crash" transfer-ownership="none" nullable="1">
					<type name="Frida.Crash" c:type="FridaCrash*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="SessionClass" c:type="FridaSessionClass" glib:is-gtype-struct-for="Session">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SessionPrivate" c:type="FridaSessionPrivate" disguised="1"/>
	<class name="Script" c:type="FridaScript" c:symbol-prefix="script" glib:type-name="FridaScript" glib:get-type="frida_script_get_type" glib:type-struct="ScriptClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ScriptPrivate" c:type="FridaScriptPrivate*"/>
		</field>
		<method name="is_destroyed" c:identifier="frida_script_is_destroyed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="load" c:identifier="frida_script_load">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="load_finish" c:identifier="frida_script_load_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="load_sync" c:identifier="frida_script_load_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unload" c:identifier="frida_script_unload">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unload_finish" c:identifier="frida_script_unload_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unload_sync" c:identifier="frida_script_unload_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="eternalize" c:identifier="frida_script_eternalize">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="eternalize_finish" c:identifier="frida_script_eternalize_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="eternalize_sync" c:identifier="frida_script_eternalize_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="post" c:identifier="frida_script_post">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="json" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_debugger" c:identifier="frida_script_enable_debugger">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="port" transfer-ownership="none">
					<type name="guint16" c:type="guint16"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_debugger_finish" c:identifier="frida_script_enable_debugger_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_debugger_sync" c:identifier="frida_script_enable_debugger_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="port" transfer-ownership="none">
					<type name="guint16" c:type="guint16"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_debugger" c:identifier="frida_script_disable_debugger">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_debugger_finish" c:identifier="frida_script_disable_debugger_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_debugger_sync" c:identifier="frida_script_disable_debugger_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<property name="id" writable="1" construct-only="1">
			<type name="Frida.AgentScriptId" c:type="FridaAgentScriptId"/>
		</property>
		<method name="get_id" c:identifier="frida_script_get_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="Frida.AgentScriptId" c:type="FridaAgentScriptId*"/>
				</parameter>
			</parameters>
		</method>
		<property name="session" writable="1" construct-only="1">
			<type name="Frida.Session" c:type="FridaSession*"/>
		</property>
		<method name="get_session" c:identifier="frida_script_get_session">
			<return-value transfer-ownership="none">
				<type name="Frida.Session" c:type="FridaSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="destroyed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="message">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="json" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="ScriptClass" c:type="FridaScriptClass" glib:is-gtype-struct-for="Script">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ScriptPrivate" c:type="FridaScriptPrivate" disguised="1"/>
	<class name="PortalMembership" c:type="FridaPortalMembership" c:symbol-prefix="portal_membership" glib:type-name="FridaPortalMembership" glib:get-type="frida_portal_membership_get_type" glib:type-struct="PortalMembershipClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="PortalMembershipPrivate" c:type="FridaPortalMembershipPrivate*"/>
		</field>
		<method name="terminate" c:identifier="frida_portal_membership_terminate">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalMembership" c:type="FridaPortalMembership*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="terminate_finish" c:identifier="frida_portal_membership_terminate_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalMembership" c:type="FridaPortalMembership*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="terminate_sync" c:identifier="frida_portal_membership_terminate_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalMembership" c:type="FridaPortalMembership*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<property name="id" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_id" c:identifier="frida_portal_membership_get_id">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalMembership" c:type="FridaPortalMembership*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="session" writable="1" construct-only="1">
			<type name="Frida.Session" c:type="FridaSession*"/>
		</property>
		<method name="get_session" c:identifier="frida_portal_membership_get_session">
			<return-value transfer-ownership="none">
				<type name="Frida.Session" c:type="FridaSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalMembership" c:type="FridaPortalMembership*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="PortalMembershipClass" c:type="FridaPortalMembershipClass" glib:is-gtype-struct-for="PortalMembership">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="PortalMembershipPrivate" c:type="FridaPortalMembershipPrivate" disguised="1"/>
	<class name="ControlService" c:type="FridaControlService" c:symbol-prefix="control_service" glib:type-name="FridaControlService" glib:get-type="frida_control_service_get_type" glib:type-struct="ControlServiceClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ControlServicePrivate" c:type="FridaControlServicePrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_control_service_new">
			<return-value transfer-ownership="full">
				<type name="Frida.ControlService" c:type="FridaControlService*"/>
			</return-value>
			<parameters>
				<parameter name="endpoint_params" transfer-ownership="none">
					<type name="Frida.EndpointParameters" c:type="FridaEndpointParameters*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="with_host_session" c:identifier="frida_control_service_new_with_host_session">
			<return-value transfer-ownership="full">
				<type name="Frida.ControlService" c:type="FridaControlService*"/>
			</return-value>
			<parameters>
				<parameter name="host_session" transfer-ownership="none">
					<type name="Frida.HostSession" c:type="FridaHostSession*"/>
				</parameter>
				<parameter name="endpoint_params" transfer-ownership="none">
					<type name="Frida.EndpointParameters" c:type="FridaEndpointParameters*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="start" c:identifier="frida_control_service_start">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlService" c:type="FridaControlService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="start_finish" c:identifier="frida_control_service_start_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlService" c:type="FridaControlService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="start_sync" c:identifier="frida_control_service_start_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlService" c:type="FridaControlService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop" c:identifier="frida_control_service_stop">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlService" c:type="FridaControlService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop_finish" c:identifier="frida_control_service_stop_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlService" c:type="FridaControlService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop_sync" c:identifier="frida_control_service_stop_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlService" c:type="FridaControlService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<property name="host-session" writable="1" construct-only="1">
			<type name="Frida.HostSession" c:type="FridaHostSession*"/>
		</property>
		<method name="get_host_session" c:identifier="frida_control_service_get_host_session">
			<return-value transfer-ownership="none">
				<type name="Frida.HostSession" c:type="FridaHostSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlService" c:type="FridaControlService*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="endpoint-params" writable="1" construct-only="1">
			<type name="Frida.EndpointParameters" c:type="FridaEndpointParameters*"/>
		</property>
		<method name="get_endpoint_params" c:identifier="frida_control_service_get_endpoint_params">
			<return-value transfer-ownership="none">
				<type name="Frida.EndpointParameters" c:type="FridaEndpointParameters*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlService" c:type="FridaControlService*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="options" writable="1" construct-only="1">
			<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
		</property>
		<method name="get_options" c:identifier="frida_control_service_get_options">
			<return-value transfer-ownership="none">
				<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlService" c:type="FridaControlService*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="ControlServiceClass" c:type="FridaControlServiceClass" glib:is-gtype-struct-for="ControlService">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ControlServicePrivate" c:type="FridaControlServicePrivate" disguised="1"/>
	<class name="ControlServiceOptions" c:type="FridaControlServiceOptions" c:symbol-prefix="control_service_options" glib:type-name="FridaControlServiceOptions" glib:get-type="frida_control_service_options_get_type" glib:type-struct="ControlServiceOptionsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ControlServiceOptionsPrivate" c:type="FridaControlServiceOptionsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_control_service_options_new">
			<return-value transfer-ownership="full">
				<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
			</return-value>
		</constructor>
		<property name="sysroot" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_sysroot" c:identifier="frida_control_service_options_get_sysroot">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_sysroot" c:identifier="frida_control_service_options_set_sysroot">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="enable-preload" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_enable_preload" c:identifier="frida_control_service_options_get_enable_preload">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_enable_preload" c:identifier="frida_control_service_options_set_enable_preload">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="report-crashes" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_report_crashes" c:identifier="frida_control_service_options_get_report_crashes">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_report_crashes" c:identifier="frida_control_service_options_set_report_crashes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="ControlServiceOptionsClass" c:type="FridaControlServiceOptionsClass" glib:is-gtype-struct-for="ControlServiceOptions">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ControlServiceOptionsPrivate" c:type="FridaControlServiceOptionsPrivate" disguised="1"/>
	<class name="PortalService" c:type="FridaPortalService" c:symbol-prefix="portal_service" glib:type-name="FridaPortalService" glib:get-type="frida_portal_service_get_type" glib:type-struct="PortalServiceClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="PortalServicePrivate" c:type="FridaPortalServicePrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_portal_service_new">
			<return-value transfer-ownership="full">
				<type name="Frida.PortalService" c:type="FridaPortalService*"/>
			</return-value>
			<parameters>
				<parameter name="cluster_params" transfer-ownership="none">
					<type name="Frida.EndpointParameters" c:type="FridaEndpointParameters*"/>
				</parameter>
				<parameter name="control_params" transfer-ownership="none" nullable="1">
					<type name="Frida.EndpointParameters" c:type="FridaEndpointParameters*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="start" c:identifier="frida_portal_service_start">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="start_finish" c:identifier="frida_portal_service_start_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="start_sync" c:identifier="frida_portal_service_start_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop" c:identifier="frida_portal_service_stop">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop_finish" c:identifier="frida_portal_service_stop_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop_sync" c:identifier="frida_portal_service_stop_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="kick" c:identifier="frida_portal_service_kick">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<method name="post" c:identifier="frida_portal_service_post">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="json" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</method>
		<method name="narrowcast" c:identifier="frida_portal_service_narrowcast">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="tag" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="json" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</method>
		<method name="broadcast" c:identifier="frida_portal_service_broadcast">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="json" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_tags" c:identifier="frida_portal_service_enumerate_tags">
			<return-value transfer-ownership="full" nullable="1">
				<array length="1" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="tag" c:identifier="frida_portal_service_tag">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="tag" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="untag" c:identifier="frida_portal_service_untag">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="tag" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="device">
			<type name="Frida.Device" c:type="FridaDevice*"/>
		</property>
		<method name="get_device" c:identifier="frida_portal_service_get_device">
			<return-value transfer-ownership="none">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="cluster-params" writable="1" construct-only="1">
			<type name="Frida.EndpointParameters" c:type="FridaEndpointParameters*"/>
		</property>
		<method name="get_cluster_params" c:identifier="frida_portal_service_get_cluster_params">
			<return-value transfer-ownership="none">
				<type name="Frida.EndpointParameters" c:type="FridaEndpointParameters*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="control-params" writable="1" construct-only="1">
			<type name="Frida.EndpointParameters" c:type="FridaEndpointParameters*"/>
		</property>
		<method name="get_control_params" c:identifier="frida_portal_service_get_control_params">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Frida.EndpointParameters" c:type="FridaEndpointParameters*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="node-connected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="remote_address" transfer-ownership="none">
					<type name="Gio.SocketAddress" c:type="GSocketAddress*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="node-joined">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="application" transfer-ownership="none">
					<type name="Frida.Application" c:type="FridaApplication*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="node-left">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="application" transfer-ownership="none">
					<type name="Frida.Application" c:type="FridaApplication*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="node-disconnected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="remote_address" transfer-ownership="none">
					<type name="Gio.SocketAddress" c:type="GSocketAddress*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="controller-connected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="remote_address" transfer-ownership="none">
					<type name="Gio.SocketAddress" c:type="GSocketAddress*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="controller-disconnected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="remote_address" transfer-ownership="none">
					<type name="Gio.SocketAddress" c:type="GSocketAddress*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="authenticated">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="session_info" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="subscribe">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="message">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="json" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="PortalServiceClass" c:type="FridaPortalServiceClass" glib:is-gtype-struct-for="PortalService">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="PortalServicePrivate" c:type="FridaPortalServicePrivate" disguised="1"/>
	<class name="HostSessionService" c:type="FridaHostSessionService" c:symbol-prefix="host_session_service" glib:type-name="FridaHostSessionService" glib:get-type="frida_host_session_service_get_type" glib:type-struct="HostSessionServiceClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="HostSessionServicePrivate" c:type="FridaHostSessionServicePrivate*"/>
		</field>
		<constructor name="with_default_backends" c:identifier="frida_host_session_service_new_with_default_backends">
			<return-value transfer-ownership="full">
				<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
			</return-value>
		</constructor>
		<constructor name="with_local_backend_only" c:identifier="frida_host_session_service_new_with_local_backend_only">
			<return-value transfer-ownership="full">
				<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
			</return-value>
		</constructor>
		<constructor name="with_socket_backend_only" c:identifier="frida_host_session_service_new_with_socket_backend_only">
			<return-value transfer-ownership="full">
				<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
			</return-value>
		</constructor>
		<method name="start" c:identifier="frida_host_session_service_start">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="start_finish" c:identifier="frida_host_session_service_start_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop" c:identifier="frida_host_session_service_stop">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop_finish" c:identifier="frida_host_session_service_stop_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_backend" c:identifier="frida_host_session_service_add_backend">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
				</instance-parameter>
				<parameter name="backend" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove_backend" c:identifier="frida_host_session_service_remove_backend">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
				</instance-parameter>
				<parameter name="backend" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_host_session_service_new">
			<return-value transfer-ownership="full">
				<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
			</return-value>
		</constructor>
		<glib:signal name="provider-available">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="provider" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="provider-unavailable">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="provider" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="HostSessionServiceClass" c:type="FridaHostSessionServiceClass" glib:is-gtype-struct-for="HostSessionService">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="HostSessionServicePrivate" c:type="FridaHostSessionServicePrivate" disguised="1"/>
	<class name="HostSessionOptions" c:type="FridaHostSessionOptions" c:symbol-prefix="host_session_options" glib:type-name="FridaHostSessionOptions" glib:get-type="frida_host_session_options_get_type" glib:type-struct="HostSessionOptionsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="HostSessionOptionsPrivate" c:type="FridaHostSessionOptionsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_host_session_options_new">
			<return-value transfer-ownership="full">
				<type name="Frida.HostSessionOptions" c:type="FridaHostSessionOptions*"/>
			</return-value>
		</constructor>
		<property name="map" writable="1">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GObject.Value" c:type="GValue*"/>
			</type>
		</property>
		<method name="get_map" c:identifier="frida_host_session_options_get_map">
			<return-value transfer-ownership="none">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GObject.Value" c:type="GValue*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionOptions" c:type="FridaHostSessionOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_map" c:identifier="frida_host_session_options_set_map">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionOptions" c:type="FridaHostSessionOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GObject.Value" c:type="GValue*"/>
					</type>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="HostSessionOptionsClass" c:type="FridaHostSessionOptionsClass" glib:is-gtype-struct-for="HostSessionOptions">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="HostSessionOptionsPrivate" c:type="FridaHostSessionOptionsPrivate" disguised="1"/>
	<class name="BaseDBusHostSession" c:type="FridaBaseDBusHostSession" c:symbol-prefix="base_dbus_host_session" glib:type-name="FridaBaseDBusHostSession" glib:get-type="frida_base_dbus_host_session_get_type" glib:type-struct="BaseDBusHostSessionClass" parent="GObject.Object" abstract="1">
		<implements name="Frida.HostSession"/>
		<implements name="Frida.AgentController"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BaseDBusHostSessionPrivate" c:type="FridaBaseDBusHostSessionPrivate*"/>
		</field>
		<field name="injector" writable="1">
			<type name="Frida.Injector" c:type="FridaInjector*"/>
		</field>
		<field name="injectee_by_pid" writable="1">
			<type name="Gee.HashMap" c:type="GeeHashMap*">
				<type name="guint" c:type="guint"/>
				<type name="guint" c:type="guint"/>
			</type>
		</field>
		<field name="io_cancellable" writable="1">
			<type name="Gio.Cancellable" c:type="GCancellable*"/>
		</field>
		<method name="preload" c:identifier="frida_base_dbus_host_session_preload">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="preload_finish" c:identifier="frida_base_dbus_host_session_preload_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="preload" invoker="preload">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="preload_finish" invoker="preload_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="close" c:identifier="frida_base_dbus_host_session_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_base_dbus_host_session_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="close" invoker="close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="close_finish" invoker="close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_system_session_provider" c:identifier="frida_base_dbus_host_session_create_system_session_provider">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_system_session_provider_finish" c:identifier="frida_base_dbus_host_session_create_system_session_provider_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.AgentSessionProvider" c:type="FridaAgentSessionProvider*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="connection" direction="out" transfer-ownership="full">
					<type name="Gio.DBusConnection" c:type="GDBusConnection**"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_system_session_provider" invoker="create_system_session_provider">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="create_system_session_provider_finish" invoker="create_system_session_provider_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.AgentSessionProvider" c:type="FridaAgentSessionProvider*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="connection" direction="out" transfer-ownership="full">
					<type name="Gio.DBusConnection" c:type="GDBusConnection**"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_frontmost_application" c:identifier="frida_base_dbus_host_session_get_frontmost_application">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_frontmost_application_finish" c:identifier="frida_base_dbus_host_session_get_frontmost_application_finish" throws="1">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result" direction="out" transfer-ownership="full" caller-allocates="1">
					<type name="Frida.HostApplicationInfo" c:type="FridaHostApplicationInfo*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_frontmost_application" invoker="get_frontmost_application">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="get_frontmost_application_finish" invoker="get_frontmost_application_finish" throws="1">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result" direction="out" transfer-ownership="full" caller-allocates="1">
					<type name="Frida.HostApplicationInfo" c:type="FridaHostApplicationInfo*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="enumerate_applications" c:identifier="frida_base_dbus_host_session_enumerate_applications">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_applications_finish" c:identifier="frida_base_dbus_host_session_enumerate_applications_finish" throws="1">
			<return-value transfer-ownership="full">
				<array length="1" c:type="FridaHostApplicationInfo*">
					<type name="Frida.HostApplicationInfo" c:type="FridaHostApplicationInfo"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="enumerate_applications" invoker="enumerate_applications">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="enumerate_applications_finish" invoker="enumerate_applications_finish" throws="1">
			<return-value transfer-ownership="full">
				<array length="1" c:type="FridaHostApplicationInfo*">
					<type name="Frida.HostApplicationInfo" c:type="FridaHostApplicationInfo"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="enumerate_processes" c:identifier="frida_base_dbus_host_session_enumerate_processes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_processes_finish" c:identifier="frida_base_dbus_host_session_enumerate_processes_finish" throws="1">
			<return-value transfer-ownership="full">
				<array length="1" c:type="FridaHostProcessInfo*">
					<type name="Frida.HostProcessInfo" c:type="FridaHostProcessInfo"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="enumerate_processes" invoker="enumerate_processes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="enumerate_processes_finish" invoker="enumerate_processes_finish" throws="1">
			<return-value transfer-ownership="full">
				<array length="1" c:type="FridaHostProcessInfo*">
					<type name="Frida.HostProcessInfo" c:type="FridaHostProcessInfo"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="enable_spawn_gating" c:identifier="frida_base_dbus_host_session_enable_spawn_gating">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_spawn_gating_finish" c:identifier="frida_base_dbus_host_session_enable_spawn_gating_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="enable_spawn_gating" invoker="enable_spawn_gating">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="enable_spawn_gating_finish" invoker="enable_spawn_gating_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="disable_spawn_gating" c:identifier="frida_base_dbus_host_session_disable_spawn_gating">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_spawn_gating_finish" c:identifier="frida_base_dbus_host_session_disable_spawn_gating_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="disable_spawn_gating" invoker="disable_spawn_gating">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="disable_spawn_gating_finish" invoker="disable_spawn_gating_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="enumerate_pending_spawn" c:identifier="frida_base_dbus_host_session_enumerate_pending_spawn">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_pending_spawn_finish" c:identifier="frida_base_dbus_host_session_enumerate_pending_spawn_finish" throws="1">
			<return-value transfer-ownership="full">
				<array length="1" c:type="FridaHostSpawnInfo*">
					<type name="Frida.HostSpawnInfo" c:type="FridaHostSpawnInfo"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="enumerate_pending_spawn" invoker="enumerate_pending_spawn">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="enumerate_pending_spawn_finish" invoker="enumerate_pending_spawn_finish" throws="1">
			<return-value transfer-ownership="full">
				<array length="1" c:type="FridaHostSpawnInfo*">
					<type name="Frida.HostSpawnInfo" c:type="FridaHostSpawnInfo"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="spawn" c:identifier="frida_base_dbus_host_session_spawn">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="program" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="Frida.HostSpawnOptions" c:type="FridaHostSpawnOptions"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="spawn_finish" c:identifier="frida_base_dbus_host_session_spawn_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="spawn" invoker="spawn">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="program" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="Frida.HostSpawnOptions" c:type="FridaHostSpawnOptions"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="spawn_finish" invoker="spawn_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="try_handle_child" c:identifier="frida_base_dbus_host_session_try_handle_child">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="info" transfer-ownership="none">
					<type name="Frida.HostChildInfo" c:type="FridaHostChildInfo"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="try_handle_child" invoker="try_handle_child">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="info" transfer-ownership="none">
					<type name="Frida.HostChildInfo" c:type="FridaHostChildInfo"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="notify_child_resumed" c:identifier="frida_base_dbus_host_session_notify_child_resumed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="notify_child_resumed" invoker="notify_child_resumed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="notify_child_gating_changed" c:identifier="frida_base_dbus_host_session_notify_child_gating_changed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="subscriber_count" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="notify_child_gating_changed" invoker="notify_child_gating_changed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="subscriber_count" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="prepare_exec_transition" c:identifier="frida_base_dbus_host_session_prepare_exec_transition">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="prepare_exec_transition_finish" c:identifier="frida_base_dbus_host_session_prepare_exec_transition_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="prepare_exec_transition" invoker="prepare_exec_transition">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="prepare_exec_transition_finish" invoker="prepare_exec_transition_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="await_exec_transition" c:identifier="frida_base_dbus_host_session_await_exec_transition">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="await_exec_transition_finish" c:identifier="frida_base_dbus_host_session_await_exec_transition_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="await_exec_transition" invoker="await_exec_transition">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="await_exec_transition_finish" invoker="await_exec_transition_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="cancel_exec_transition" c:identifier="frida_base_dbus_host_session_cancel_exec_transition">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="cancel_exec_transition_finish" c:identifier="frida_base_dbus_host_session_cancel_exec_transition_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="cancel_exec_transition" invoker="cancel_exec_transition">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="cancel_exec_transition_finish" invoker="cancel_exec_transition_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="process_is_alive" c:identifier="frida_base_dbus_host_session_process_is_alive">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="process_is_alive" invoker="process_is_alive">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="input" c:identifier="frida_base_dbus_host_session_input">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<array length="2" c:type="guint8*">
						<type name="guint8" c:type="guint8"/>
					</array>
				</parameter>
				<parameter name="data_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="input_finish" c:identifier="frida_base_dbus_host_session_input_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="input" invoker="input">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<array length="2" c:type="guint8*">
						<type name="guint8" c:type="guint8"/>
					</array>
				</parameter>
				<parameter name="data_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="input_finish" invoker="input_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="perform_resume" c:identifier="frida_base_dbus_host_session_perform_resume">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="perform_resume_finish" c:identifier="frida_base_dbus_host_session_perform_resume_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="perform_resume" invoker="perform_resume">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="perform_resume_finish" invoker="perform_resume_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="still_attached_to" c:identifier="frida_base_dbus_host_session_still_attached_to">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<method name="kill" c:identifier="frida_base_dbus_host_session_kill">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="kill_finish" c:identifier="frida_base_dbus_host_session_kill_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="kill" invoker="kill">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="kill_finish" invoker="kill_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="on_uninjected" c:identifier="frida_base_dbus_host_session_on_uninjected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="on_uninjected" invoker="on_uninjected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="perform_attach_to" c:identifier="frida_base_dbus_host_session_perform_attach_to">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="perform_attach_to_finish" c:identifier="frida_base_dbus_host_session_perform_attach_to_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Future" c:type="FridaFuture*">
					<type name="Gio.IOStream" c:type="GIOStream*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="transport" direction="out" transfer-ownership="full" optional="1">
					<type name="GObject.Object" c:type="GObject**"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="perform_attach_to" invoker="perform_attach_to">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="perform_attach_to_finish" invoker="perform_attach_to_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Future" c:type="FridaFuture*">
					<type name="Gio.IOStream" c:type="GIOStream*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="transport" direction="out" transfer-ownership="full" optional="1">
					<type name="GObject.Object" c:type="GObject**"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_emulated_agent_path" c:identifier="frida_base_dbus_host_session_get_emulated_agent_path" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_emulated_agent_path" invoker="get_emulated_agent_path" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="make_agent_parameters" c:identifier="frida_base_dbus_host_session_make_agent_parameters" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="remote_address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
			</parameters>
		</method>
		<method name="link_agent_session" c:identifier="frida_base_dbus_host_session_link_agent_session">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="Frida.AgentSessionId" c:type="FridaAgentSessionId"/>
				</parameter>
				<parameter name="sink" transfer-ownership="none">
					<type name="Frida.AgentMessageSink" c:type="FridaAgentMessageSink*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="link_agent_session_finish" c:identifier="frida_base_dbus_host_session_link_agent_session_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.AgentSession" c:type="FridaAgentSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unlink_agent_session" c:identifier="frida_base_dbus_host_session_unlink_agent_session">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="Frida.AgentSessionId" c:type="FridaAgentSessionId"/>
				</parameter>
			</parameters>
		</method>
		<method name="can_pass_file_descriptors_to_agent_session" c:identifier="frida_base_dbus_host_session_can_pass_file_descriptors_to_agent_session" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="Frida.AgentSessionId" c:type="FridaAgentSessionId"/>
				</parameter>
			</parameters>
		</method>
		<method name="obtain_session_provider" c:identifier="frida_base_dbus_host_session_obtain_session_provider" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.AgentSessionProvider" c:type="FridaAgentSessionProvider*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="Frida.AgentSessionId" c:type="FridaAgentSessionId"/>
				</parameter>
			</parameters>
		</method>
		<method name="try_collect_crash" c:identifier="frida_base_dbus_host_session_try_collect_crash">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="try_collect_crash_finish" c:identifier="frida_base_dbus_host_session_try_collect_crash_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.CrashInfo" c:type="FridaCrashInfo*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="try_collect_crash" invoker="try_collect_crash">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="try_collect_crash_finish" invoker="try_collect_crash_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.CrashInfo" c:type="FridaCrashInfo*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</class>
	<record name="BaseDBusHostSessionClass" c:type="FridaBaseDBusHostSessionClass" glib:is-gtype-struct-for="BaseDBusHostSession">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="preload">
			<callback name="preload" c:type="preload">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="preload_finish">
			<callback name="preload_finish" c:type="preload_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="close">
			<callback name="close" c:type="close">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="close_finish">
			<callback name="close_finish" c:type="close_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_system_session_provider">
			<callback name="create_system_session_provider" c:type="create_system_session_provider">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_system_session_provider_finish">
			<callback name="create_system_session_provider_finish" c:type="create_system_session_provider_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="Frida.AgentSessionProvider" c:type="FridaAgentSessionProvider*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
					<parameter name="connection" direction="out" transfer-ownership="full">
						<type name="Gio.DBusConnection" c:type="GDBusConnection**"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_frontmost_application">
			<callback name="get_frontmost_application" c:type="get_frontmost_application">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="options" transfer-ownership="none">
						<type name="GLib.HashTable" c:type="GHashTable*">
							<type name="utf8" c:type="gchar*"/>
							<type name="GLib.Variant" c:type="GVariant*"/>
						</type>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_frontmost_application_finish">
			<callback name="get_frontmost_application_finish" c:type="get_frontmost_application_finish" throws="1">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
					<parameter name="result" direction="out" transfer-ownership="full" caller-allocates="1">
						<type name="Frida.HostApplicationInfo" c:type="FridaHostApplicationInfo*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enumerate_applications">
			<callback name="enumerate_applications" c:type="enumerate_applications">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="options" transfer-ownership="none">
						<type name="GLib.HashTable" c:type="GHashTable*">
							<type name="utf8" c:type="gchar*"/>
							<type name="GLib.Variant" c:type="GVariant*"/>
						</type>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enumerate_applications_finish">
			<callback name="enumerate_applications_finish" c:type="enumerate_applications_finish" throws="1">
				<return-value transfer-ownership="full">
					<array length="1" c:type="FridaHostApplicationInfo*">
						<type name="Frida.HostApplicationInfo" c:type="FridaHostApplicationInfo"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enumerate_processes">
			<callback name="enumerate_processes" c:type="enumerate_processes">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="options" transfer-ownership="none">
						<type name="GLib.HashTable" c:type="GHashTable*">
							<type name="utf8" c:type="gchar*"/>
							<type name="GLib.Variant" c:type="GVariant*"/>
						</type>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enumerate_processes_finish">
			<callback name="enumerate_processes_finish" c:type="enumerate_processes_finish" throws="1">
				<return-value transfer-ownership="full">
					<array length="1" c:type="FridaHostProcessInfo*">
						<type name="Frida.HostProcessInfo" c:type="FridaHostProcessInfo"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enable_spawn_gating">
			<callback name="enable_spawn_gating" c:type="enable_spawn_gating">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enable_spawn_gating_finish">
			<callback name="enable_spawn_gating_finish" c:type="enable_spawn_gating_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="disable_spawn_gating">
			<callback name="disable_spawn_gating" c:type="disable_spawn_gating">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="disable_spawn_gating_finish">
			<callback name="disable_spawn_gating_finish" c:type="disable_spawn_gating_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enumerate_pending_spawn">
			<callback name="enumerate_pending_spawn" c:type="enumerate_pending_spawn">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enumerate_pending_spawn_finish">
			<callback name="enumerate_pending_spawn_finish" c:type="enumerate_pending_spawn_finish" throws="1">
				<return-value transfer-ownership="full">
					<array length="1" c:type="FridaHostSpawnInfo*">
						<type name="Frida.HostSpawnInfo" c:type="FridaHostSpawnInfo"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="spawn">
			<callback name="spawn" c:type="spawn">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="program" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="options" transfer-ownership="none">
						<type name="Frida.HostSpawnOptions" c:type="FridaHostSpawnOptions"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="spawn_finish">
			<callback name="spawn_finish" c:type="spawn_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="guint" c:type="guint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="try_handle_child">
			<callback name="try_handle_child" c:type="try_handle_child">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="info" transfer-ownership="none">
						<type name="Frida.HostChildInfo" c:type="FridaHostChildInfo"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="notify_child_resumed">
			<callback name="notify_child_resumed" c:type="notify_child_resumed">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="notify_child_gating_changed">
			<callback name="notify_child_gating_changed" c:type="notify_child_gating_changed">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="subscriber_count" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="prepare_exec_transition">
			<callback name="prepare_exec_transition" c:type="prepare_exec_transition">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="prepare_exec_transition_finish">
			<callback name="prepare_exec_transition_finish" c:type="prepare_exec_transition_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="await_exec_transition">
			<callback name="await_exec_transition" c:type="await_exec_transition">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="await_exec_transition_finish">
			<callback name="await_exec_transition_finish" c:type="await_exec_transition_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="cancel_exec_transition">
			<callback name="cancel_exec_transition" c:type="cancel_exec_transition">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="cancel_exec_transition_finish">
			<callback name="cancel_exec_transition_finish" c:type="cancel_exec_transition_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="process_is_alive">
			<callback name="process_is_alive" c:type="process_is_alive">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="input">
			<callback name="input" c:type="input">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<array length="3" c:type="guint8*">
							<type name="guint8" c:type="guint8"/>
						</array>
					</parameter>
					<parameter name="data_length1" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="input_finish">
			<callback name="input_finish" c:type="input_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="perform_resume">
			<callback name="perform_resume" c:type="perform_resume">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="perform_resume_finish">
			<callback name="perform_resume_finish" c:type="perform_resume_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="kill">
			<callback name="kill" c:type="kill">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="kill_finish">
			<callback name="kill_finish" c:type="kill_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="on_uninjected">
			<callback name="on_uninjected" c:type="on_uninjected">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="id" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="perform_attach_to">
			<callback name="perform_attach_to" c:type="perform_attach_to">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="options" transfer-ownership="none">
						<type name="GLib.HashTable" c:type="GHashTable*">
							<type name="utf8" c:type="gchar*"/>
							<type name="GLib.Variant" c:type="GVariant*"/>
						</type>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="perform_attach_to_finish">
			<callback name="perform_attach_to_finish" c:type="perform_attach_to_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="Frida.Future" c:type="FridaFuture*">
						<type name="Gio.IOStream" c:type="GIOStream*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
					<parameter name="transport" direction="out" transfer-ownership="full" optional="1">
						<type name="GObject.Object" c:type="GObject**"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_emulated_agent_path">
			<callback name="get_emulated_agent_path" c:type="get_emulated_agent_path" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="try_collect_crash">
			<callback name="try_collect_crash" c:type="try_collect_crash">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="try_collect_crash_finish">
			<callback name="try_collect_crash_finish" c:type="try_collect_crash_finish" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="Frida.CrashInfo" c:type="FridaCrashInfo*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="BaseDBusHostSessionPrivate" c:type="FridaBaseDBusHostSessionPrivate" disguised="1"/>
	<class name="InternalAgent" c:type="FridaInternalAgent" c:symbol-prefix="internal_agent" glib:type-name="FridaInternalAgent" glib:get-type="frida_internal_agent_get_type" glib:type-struct="InternalAgentClass" parent="GObject.Object" abstract="1">
		<implements name="Frida.AgentMessageSink"/>
		<implements name="Frida.RpcPeer"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="InternalAgentPrivate" c:type="FridaInternalAgentPrivate*"/>
		</field>
		<field name="attach_options" writable="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GLib.Variant" c:type="GVariant*"/>
			</type>
		</field>
		<field name="target_pid" writable="1">
			<type name="guint" c:type="guint"/>
		</field>
		<field name="session_id" writable="1">
			<type name="Frida.AgentSessionId" c:type="FridaAgentSessionId"/>
		</field>
		<field name="session" writable="1">
			<type name="Frida.AgentSession" c:type="FridaAgentSession*"/>
		</field>
		<field name="script" writable="1">
			<type name="Frida.AgentScriptId" c:type="FridaAgentScriptId"/>
		</field>
		<method name="close" c:identifier="frida_internal_agent_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_internal_agent_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_target_pid" c:identifier="frida_internal_agent_get_target_pid">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_target_pid_finish" c:identifier="frida_internal_agent_get_target_pid_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_target_pid" invoker="get_target_pid">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="get_target_pid_finish" invoker="get_target_pid_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="load_source" c:identifier="frida_internal_agent_load_source">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="load_source_finish" c:identifier="frida_internal_agent_load_source_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="load_source" invoker="load_source">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="load_source_finish" invoker="load_source_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="load_snapshot" c:identifier="frida_internal_agent_load_snapshot">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="load_snapshot_finish" c:identifier="frida_internal_agent_load_snapshot_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="transport" direction="out" transfer-ownership="full">
					<type name="Frida.SnapshotTransport" c:type="FridaSnapshotTransport*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="load_snapshot" invoker="load_snapshot">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="load_snapshot_finish" invoker="load_snapshot_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="transport" direction="out" transfer-ownership="full">
					<type name="Frida.SnapshotTransport" c:type="FridaSnapshotTransport*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="on_event" c:identifier="frida_internal_agent_on_event">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="event" transfer-ownership="none">
					<type name="Json.Array" c:type="JsonArray*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="on_event" invoker="on_event">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="event" transfer-ownership="none">
					<type name="Json.Array" c:type="JsonArray*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="call" c:identifier="frida_internal_agent_call">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="method" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="args" transfer-ownership="none">
					<array length="2" c:type="JsonNode**">
						<type name="Json.Node" c:type="JsonNode*"/>
					</array>
				</parameter>
				<parameter name="args_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="call_finish" c:identifier="frida_internal_agent_call_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Json.Node" c:type="JsonNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="post" c:identifier="frida_internal_agent_post">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="Json.Node" c:type="JsonNode*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="post_finish" c:identifier="frida_internal_agent_post_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="ensure_loaded" c:identifier="frida_internal_agent_ensure_loaded">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="ensure_loaded_finish" c:identifier="frida_internal_agent_ensure_loaded_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="perform_unload" c:identifier="frida_internal_agent_perform_unload">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="perform_unload_finish" c:identifier="frida_internal_agent_perform_unload_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="perform_unload" invoker="perform_unload">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="perform_unload_finish" invoker="perform_unload_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="load_script" c:identifier="frida_internal_agent_load_script">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="load_script_finish" c:identifier="frida_internal_agent_load_script_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="load_script" invoker="load_script">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="load_script_finish" invoker="load_script_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="destroy_script" c:identifier="frida_internal_agent_destroy_script">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="destroy_script_finish" c:identifier="frida_internal_agent_destroy_script_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="destroy_script" invoker="destroy_script">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="destroy_script_finish" invoker="destroy_script_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="wait_for_unload" c:identifier="frida_internal_agent_wait_for_unload">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="wait_for_unload_finish" c:identifier="frida_internal_agent_wait_for_unload_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="host-session" writable="1" construct-only="1">
			<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
		</property>
		<method name="get_host_session" c:identifier="frida_internal_agent_get_host_session">
			<return-value transfer-ownership="none">
				<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="script-runtime" writable="1" construct-only="1">
			<type name="Frida.ScriptRuntime" c:type="FridaScriptRuntime"/>
		</property>
		<method name="get_script_runtime" c:identifier="frida_internal_agent_get_script_runtime">
			<return-value transfer-ownership="none">
				<type name="Frida.ScriptRuntime" c:type="FridaScriptRuntime"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="unloaded">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</class>
	<record name="InternalAgentClass" c:type="FridaInternalAgentClass" glib:is-gtype-struct-for="InternalAgent">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="get_target_pid">
			<callback name="get_target_pid" c:type="get_target_pid">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_target_pid_finish">
			<callback name="get_target_pid_finish" c:type="get_target_pid_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="guint" c:type="guint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="load_source">
			<callback name="load_source" c:type="load_source">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="load_source_finish">
			<callback name="load_source_finish" c:type="load_source_finish" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="load_snapshot">
			<callback name="load_snapshot" c:type="load_snapshot">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="load_snapshot_finish">
			<callback name="load_snapshot_finish" c:type="load_snapshot_finish" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
					<parameter name="transport" direction="out" transfer-ownership="full">
						<type name="Frida.SnapshotTransport" c:type="FridaSnapshotTransport*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="on_event">
			<callback name="on_event" c:type="on_event">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="type" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="event" transfer-ownership="none">
						<type name="Json.Array" c:type="JsonArray*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="perform_unload">
			<callback name="perform_unload" c:type="perform_unload">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="perform_unload_finish">
			<callback name="perform_unload_finish" c:type="perform_unload_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="load_script">
			<callback name="load_script" c:type="load_script">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="load_script_finish">
			<callback name="load_script_finish" c:type="load_script_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="destroy_script">
			<callback name="destroy_script" c:type="destroy_script">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="destroy_script_finish">
			<callback name="destroy_script_finish" c:type="destroy_script_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="InternalAgentPrivate" c:type="FridaInternalAgentPrivate" disguised="1"/>
	<class name="AgentContainer" c:type="FridaAgentContainer" c:symbol-prefix="agent_container" glib:type-name="FridaAgentContainer" glib:get-type="frida_agent_container_get_type" glib:type-struct="AgentContainerClass" parent="GObject.Object">
		<implements name="Frida.AgentSessionProvider"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="AgentContainerPrivate" c:type="FridaAgentContainerPrivate*"/>
		</field>
		<function name="create" c:identifier="frida_agent_container_create">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="agent_filename" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="create_finish" c:identifier="frida_agent_container_create_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.AgentContainer" c:type="FridaAgentContainer*"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<method name="destroy" c:identifier="frida_agent_container_destroy">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentContainer" c:type="FridaAgentContainer*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="destroy_finish" c:identifier="frida_agent_container_destroy_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentContainer" c:type="FridaAgentContainer*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_agent_container_new">
			<return-value transfer-ownership="full">
				<type name="Frida.AgentContainer" c:type="FridaAgentContainer*"/>
			</return-value>
		</constructor>
		<property name="connection" writable="1">
			<type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
		</property>
		<method name="get_connection" c:identifier="frida_agent_container_get_connection">
			<return-value transfer-ownership="none">
				<type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentContainer" c:type="FridaAgentContainer*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="AgentContainerClass" c:type="FridaAgentContainerClass" glib:is-gtype-struct-for="AgentContainer">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="AgentContainerPrivate" c:type="FridaAgentContainerPrivate" disguised="1"/>
	<class name="ApplicationEnumerator" c:type="FridaApplicationEnumerator" c:symbol-prefix="application_enumerator" glib:type-name="FridaApplicationEnumerator" glib:get-type="frida_application_enumerator_get_type" glib:type-struct="ApplicationEnumeratorClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ApplicationEnumeratorPrivate" c:type="FridaApplicationEnumeratorPrivate*"/>
		</field>
		<method name="enumerate_applications" c:identifier="frida_application_enumerator_enumerate_applications">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ApplicationEnumerator" c:type="FridaApplicationEnumerator*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="Frida.ApplicationQueryOptions" c:type="FridaApplicationQueryOptions*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_applications_finish" c:identifier="frida_application_enumerator_enumerate_applications_finish">
			<return-value transfer-ownership="full">
				<array length="1" c:type="FridaHostApplicationInfo*">
					<type name="Frida.HostApplicationInfo" c:type="FridaHostApplicationInfo"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ApplicationEnumerator" c:type="FridaApplicationEnumerator*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_application_enumerator_new">
			<return-value transfer-ownership="full">
				<type name="Frida.ApplicationEnumerator" c:type="FridaApplicationEnumerator*"/>
			</return-value>
		</constructor>
	</class>
	<record name="ApplicationEnumeratorClass" c:type="FridaApplicationEnumeratorClass" glib:is-gtype-struct-for="ApplicationEnumerator">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ApplicationEnumeratorPrivate" c:type="FridaApplicationEnumeratorPrivate" disguised="1"/>
	<class name="ProcessEnumerator" c:type="FridaProcessEnumerator" c:symbol-prefix="process_enumerator" glib:type-name="FridaProcessEnumerator" glib:get-type="frida_process_enumerator_get_type" glib:type-struct="ProcessEnumeratorClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ProcessEnumeratorPrivate" c:type="FridaProcessEnumeratorPrivate*"/>
		</field>
		<method name="enumerate_processes" c:identifier="frida_process_enumerator_enumerate_processes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ProcessEnumerator" c:type="FridaProcessEnumerator*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="Frida.ProcessQueryOptions" c:type="FridaProcessQueryOptions*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_processes_finish" c:identifier="frida_process_enumerator_enumerate_processes_finish">
			<return-value transfer-ownership="full">
				<array length="1" c:type="FridaHostProcessInfo*">
					<type name="Frida.HostProcessInfo" c:type="FridaHostProcessInfo"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ProcessEnumerator" c:type="FridaProcessEnumerator*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_process_enumerator_new">
			<return-value transfer-ownership="full">
				<type name="Frida.ProcessEnumerator" c:type="FridaProcessEnumerator*"/>
			</return-value>
		</constructor>
	</class>
	<record name="ProcessEnumeratorClass" c:type="FridaProcessEnumeratorClass" glib:is-gtype-struct-for="ProcessEnumerator">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ProcessEnumeratorPrivate" c:type="FridaProcessEnumeratorPrivate" disguised="1"/>
	<class name="TemporaryDirectory" c:type="FridaTemporaryDirectory" c:symbol-prefix="temporary_directory" glib:type-name="FridaTemporaryDirectory" glib:get-type="frida_temporary_directory_get_type" glib:type-struct="TemporaryDirectoryClass" glib:fundamental="1" glib:ref-func="frida_temporary_directory_ref" glib:unref-func="frida_temporary_directory_unref" glib:set-value-func="frida_value_set_temporary_directory" glib:get-value-func="frida_value_get_temporary_directory">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="TemporaryDirectoryPrivate" c:type="FridaTemporaryDirectoryPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_temporary_directory_new">
			<return-value transfer-ownership="full">
				<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
			</return-value>
		</constructor>
		<constructor name="with_file" c:identifier="frida_temporary_directory_new_with_file">
			<return-value transfer-ownership="full">
				<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="is_ours" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</constructor>
		<function name="always_use" c:identifier="frida_temporary_directory_always_use">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<function name="use_sysroot" c:identifier="frida_temporary_directory_use_sysroot">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="root" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<method name="destroy" c:identifier="frida_temporary_directory_destroy">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</instance-parameter>
			</parameters>
		</method>
		<function name="make_name" c:identifier="frida_temporary_directory_make_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</function>
		<method name="get_path" c:identifier="frida_temporary_directory_get_path">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_is_ours" c:identifier="frida_temporary_directory_get_is_ours">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</instance-parameter>
			</parameters>
		</method>
		<function name="get_system_default" c:identifier="frida_temporary_directory_get_system_default">
			<return-value transfer-ownership="full">
				<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
			</return-value>
		</function>
	</class>
	<record name="TemporaryDirectoryClass" c:type="FridaTemporaryDirectoryClass" glib:is-gtype-struct-for="TemporaryDirectory">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="TemporaryDirectoryPrivate" c:type="FridaTemporaryDirectoryPrivate" disguised="1"/>
	<class name="TemporaryFile" c:type="FridaTemporaryFile" c:symbol-prefix="temporary_file" glib:type-name="FridaTemporaryFile" glib:get-type="frida_temporary_file_get_type" glib:type-struct="TemporaryFileClass" glib:fundamental="1" glib:ref-func="frida_temporary_file_ref" glib:unref-func="frida_temporary_file_unref" glib:set-value-func="frida_value_set_temporary_file" glib:get-value-func="frida_value_get_temporary_file">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="TemporaryFilePrivate" c:type="FridaTemporaryFilePrivate*"/>
		</field>
		<constructor name="from_stream" c:identifier="frida_temporary_file_new_from_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.TemporaryFile" c:type="FridaTemporaryFile*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="istream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="directory" transfer-ownership="none" nullable="1">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="new" c:identifier="frida_temporary_file_new">
			<return-value transfer-ownership="full">
				<type name="Frida.TemporaryFile" c:type="FridaTemporaryFile*"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="directory" transfer-ownership="none">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="destroy" c:identifier="frida_temporary_file_destroy">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.TemporaryFile" c:type="FridaTemporaryFile*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_path" c:identifier="frida_temporary_file_get_path">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.TemporaryFile" c:type="FridaTemporaryFile*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_parent" c:identifier="frida_temporary_file_get_parent">
			<return-value transfer-ownership="none">
				<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.TemporaryFile" c:type="FridaTemporaryFile*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="TemporaryFileClass" c:type="FridaTemporaryFileClass" glib:is-gtype-struct-for="TemporaryFile">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="TemporaryFilePrivate" c:type="FridaTemporaryFilePrivate" disguised="1"/>
	<class name="FileMonitor" c:type="FridaFileMonitor" c:symbol-prefix="file_monitor" glib:type-name="FridaFileMonitor" glib:get-type="frida_file_monitor_get_type" glib:type-struct="FileMonitorClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FileMonitorPrivate" c:type="FridaFileMonitorPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_file_monitor_new">
			<return-value transfer-ownership="full">
				<type name="Frida.FileMonitor" c:type="FridaFileMonitor*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="enable" c:identifier="frida_file_monitor_enable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FileMonitor" c:type="FridaFileMonitor*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_finish" c:identifier="frida_file_monitor_enable_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FileMonitor" c:type="FridaFileMonitor*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_sync" c:identifier="frida_file_monitor_enable_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FileMonitor" c:type="FridaFileMonitor*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable" c:identifier="frida_file_monitor_disable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FileMonitor" c:type="FridaFileMonitor*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_finish" c:identifier="frida_file_monitor_disable_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FileMonitor" c:type="FridaFileMonitor*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_sync" c:identifier="frida_file_monitor_disable_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FileMonitor" c:type="FridaFileMonitor*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<property name="path" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_path" c:identifier="frida_file_monitor_get_path">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FileMonitor" c:type="FridaFileMonitor*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="change">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="file_path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="other_file_path" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="event" transfer-ownership="none">
					<type name="Gio.FileMonitorEvent" c:type="GFileMonitorEvent"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="FileMonitorClass" c:type="FridaFileMonitorClass" glib:is-gtype-struct-for="FileMonitor">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FileMonitorPrivate" c:type="FridaFileMonitorPrivate" disguised="1"/>
	<class name="LinuxHostSessionBackend" c:type="FridaLinuxHostSessionBackend" c:symbol-prefix="linux_host_session_backend" glib:type-name="FridaLinuxHostSessionBackend" glib:get-type="frida_linux_host_session_backend_get_type" glib:type-struct="LinuxHostSessionBackendClass" parent="GObject.Object">
		<implements name="Frida.HostSessionBackend"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LinuxHostSessionBackendPrivate" c:type="FridaLinuxHostSessionBackendPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_linux_host_session_backend_new">
			<return-value transfer-ownership="full">
				<type name="Frida.LinuxHostSessionBackend" c:type="FridaLinuxHostSessionBackend*"/>
			</return-value>
		</constructor>
	</class>
	<record name="LinuxHostSessionBackendClass" c:type="FridaLinuxHostSessionBackendClass" glib:is-gtype-struct-for="LinuxHostSessionBackend">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="LinuxHostSessionBackendPrivate" c:type="FridaLinuxHostSessionBackendPrivate" disguised="1"/>
	<class name="LinuxHostSessionProvider" c:type="FridaLinuxHostSessionProvider" c:symbol-prefix="linux_host_session_provider" glib:type-name="FridaLinuxHostSessionProvider" glib:get-type="frida_linux_host_session_provider_get_type" glib:type-struct="LinuxHostSessionProviderClass" parent="GObject.Object">
		<implements name="Frida.HostSessionProvider"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LinuxHostSessionProviderPrivate" c:type="FridaLinuxHostSessionProviderPrivate*"/>
		</field>
		<method name="close" c:identifier="frida_linux_host_session_provider_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.LinuxHostSessionProvider" c:type="FridaLinuxHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_linux_host_session_provider_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.LinuxHostSessionProvider" c:type="FridaLinuxHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_linux_host_session_provider_new">
			<return-value transfer-ownership="full">
				<type name="Frida.LinuxHostSessionProvider" c:type="FridaLinuxHostSessionProvider*"/>
			</return-value>
		</constructor>
	</class>
	<record name="LinuxHostSessionProviderClass" c:type="FridaLinuxHostSessionProviderClass" glib:is-gtype-struct-for="LinuxHostSessionProvider">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="LinuxHostSessionProviderPrivate" c:type="FridaLinuxHostSessionProviderPrivate" disguised="1"/>
	<class name="LinuxHostSession" c:type="FridaLinuxHostSession" c:symbol-prefix="linux_host_session" glib:type-name="FridaLinuxHostSession" glib:get-type="frida_linux_host_session_get_type" glib:type-struct="LinuxHostSessionClass" parent="Frida.BaseDBusHostSession">
		<field name="parent_instance" readable="0" private="1">
			<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LinuxHostSessionPrivate" c:type="FridaLinuxHostSessionPrivate*"/>
		</field>
		<field name="system_server_agent" writable="1">
			<type name="Frida.SystemServerAgent" c:type="FridaSystemServerAgent*"/>
		</field>
		<constructor name="new" c:identifier="frida_linux_host_session_new">
			<return-value transfer-ownership="full">
				<type name="Frida.LinuxHostSession" c:type="FridaLinuxHostSession*"/>
			</return-value>
			<parameters>
				<parameter name="helper" transfer-ownership="full">
					<type name="Frida.LinuxHelper" c:type="FridaLinuxHelper*"/>
				</parameter>
				<parameter name="tempdir" transfer-ownership="full">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</parameter>
				<parameter name="report_crashes" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="helper" writable="1" construct-only="1">
			<type name="Frida.LinuxHelper" c:type="FridaLinuxHelper*"/>
		</property>
		<method name="get_helper" c:identifier="frida_linux_host_session_get_helper">
			<return-value transfer-ownership="none">
				<type name="Frida.LinuxHelper" c:type="FridaLinuxHelper*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.LinuxHostSession" c:type="FridaLinuxHostSession*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="tempdir" writable="1" construct-only="1">
			<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
		</property>
		<method name="get_tempdir" c:identifier="frida_linux_host_session_get_tempdir">
			<return-value transfer-ownership="none">
				<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.LinuxHostSession" c:type="FridaLinuxHostSession*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="report-crashes" writable="1" construct-only="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_report_crashes" c:identifier="frida_linux_host_session_get_report_crashes">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.LinuxHostSession" c:type="FridaLinuxHostSession*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="LinuxHostSessionClass" c:type="FridaLinuxHostSessionClass" glib:is-gtype-struct-for="LinuxHostSession">
		<field name="parent_class" readable="0" private="1">
			<type name="Frida.BaseDBusHostSessionClass" c:type="FridaBaseDBusHostSessionClass"/>
		</field>
	</record>
	<record name="LinuxHostSessionPrivate" c:type="FridaLinuxHostSessionPrivate" disguised="1"/>
	<class name="Linjector" c:type="FridaLinjector" c:symbol-prefix="linjector" glib:type-name="FridaLinjector" glib:get-type="frida_linjector_get_type" glib:type-struct="LinjectorClass" parent="GObject.Object">
		<implements name="Frida.Injector"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LinjectorPrivate" c:type="FridaLinjectorPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_linjector_new">
			<return-value transfer-ownership="full">
				<type name="Frida.Linjector" c:type="FridaLinjector*"/>
			</return-value>
			<parameters>
				<parameter name="helper" transfer-ownership="none">
					<type name="Frida.LinuxHelper" c:type="FridaLinuxHelper*"/>
				</parameter>
				<parameter name="close_helper" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="tempdir" transfer-ownership="none">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="inject_library_resource" c:identifier="frida_linjector_inject_library_resource">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="agent" transfer-ownership="none">
					<type name="Frida.AgentDescriptor" c:type="FridaAgentDescriptor*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="features" transfer-ownership="none">
					<type name="Frida.AgentFeatures" c:type="FridaAgentFeatures"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="7" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_resource_finish" c:identifier="frida_linjector_inject_library_resource_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_fd" c:identifier="frida_linjector_inject_library_fd">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="library_so" transfer-ownership="none">
					<type name="GLib.UnixInputStream" c:type="GUnixInputStream*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="features" transfer-ownership="none">
					<type name="Frida.AgentFeatures" c:type="FridaAgentFeatures"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="7" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_fd_finish" c:identifier="frida_linjector_inject_library_fd_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request_control_channel" c:identifier="frida_linjector_request_control_channel">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request_control_channel_finish" c:identifier="frida_linjector_request_control_channel_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.IOStream" c:type="GIOStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="any_still_injected" c:identifier="frida_linjector_any_still_injected">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="is_still_injected" c:identifier="frida_linjector_is_still_injected">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<property name="helper" writable="1" construct-only="1">
			<type name="Frida.LinuxHelper" c:type="FridaLinuxHelper*"/>
		</property>
		<method name="get_helper" c:identifier="frida_linjector_get_helper">
			<return-value transfer-ownership="none">
				<type name="Frida.LinuxHelper" c:type="FridaLinuxHelper*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="close-helper" writable="1" construct-only="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_close_helper" c:identifier="frida_linjector_get_close_helper">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="tempdir" writable="1" construct-only="1">
			<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
		</property>
		<method name="get_tempdir" c:identifier="frida_linjector_get_tempdir">
			<return-value transfer-ownership="none">
				<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="LinjectorClass" c:type="FridaLinjectorClass" glib:is-gtype-struct-for="Linjector">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="LinjectorPrivate" c:type="FridaLinjectorPrivate" disguised="1"/>
	<class name="AgentDescriptor" c:type="FridaAgentDescriptor" c:symbol-prefix="agent_descriptor" glib:type-name="FridaAgentDescriptor" glib:get-type="frida_agent_descriptor_get_type" glib:type-struct="AgentDescriptorClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="AgentDescriptorPrivate" c:type="FridaAgentDescriptorPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_agent_descriptor_new">
			<return-value transfer-ownership="full">
				<type name="Frida.AgentDescriptor" c:type="FridaAgentDescriptor*"/>
			</return-value>
			<parameters>
				<parameter name="name_template" transfer-ownership="none">
					<type name="Frida.PathTemplate" c:type="FridaPathTemplate"/>
				</parameter>
				<parameter name="so32" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="so64" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="resources" transfer-ownership="none">
					<array length="4" c:type="FridaAgentResource**">
						<type name="Frida.AgentResource" c:type="FridaAgentResource*"/>
					</array>
				</parameter>
				<parameter name="resources_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="mode" transfer-ownership="none">
					<type name="Frida.AgentMode" c:type="FridaAgentMode"/>
				</parameter>
				<parameter name="tempdir" transfer-ownership="none" nullable="1">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_path_template" c:identifier="frida_agent_descriptor_get_path_template" throws="1">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentDescriptor" c:type="FridaAgentDescriptor*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="full" caller-allocates="1">
					<type name="Frida.PathTemplate" c:type="FridaPathTemplate*"/>
				</parameter>
			</parameters>
		</method>
		<property name="name-template" writable="1" construct-only="1">
			<type name="Frida.PathTemplate" c:type="FridaPathTemplate"/>
		</property>
		<method name="get_name_template" c:identifier="frida_agent_descriptor_get_name_template">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentDescriptor" c:type="FridaAgentDescriptor*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="Frida.PathTemplate" c:type="FridaPathTemplate*"/>
				</parameter>
			</parameters>
		</method>
		<property name="resources" writable="1" construct-only="1">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="Frida.AgentResource" c:type="FridaAgentResource*"/>
			</type>
		</property>
		<method name="get_resources" c:identifier="frida_agent_descriptor_get_resources">
			<return-value transfer-ownership="none">
				<type name="Gee.Collection" c:type="GeeCollection*">
					<type name="Frida.AgentResource" c:type="FridaAgentResource*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentDescriptor" c:type="FridaAgentDescriptor*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="mode" writable="1" construct-only="1">
			<type name="Frida.AgentMode" c:type="FridaAgentMode"/>
		</property>
		<method name="get_mode" c:identifier="frida_agent_descriptor_get_mode">
			<return-value transfer-ownership="none">
				<type name="Frida.AgentMode" c:type="FridaAgentMode"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentDescriptor" c:type="FridaAgentDescriptor*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="tempdir" writable="1" construct-only="1">
			<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
		</property>
		<method name="get_tempdir" c:identifier="frida_agent_descriptor_get_tempdir">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentDescriptor" c:type="FridaAgentDescriptor*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="AgentDescriptorClass" c:type="FridaAgentDescriptorClass" glib:is-gtype-struct-for="AgentDescriptor">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="AgentDescriptorPrivate" c:type="FridaAgentDescriptorPrivate" disguised="1"/>
	<class name="AgentResource" c:type="FridaAgentResource" c:symbol-prefix="agent_resource" glib:type-name="FridaAgentResource" glib:get-type="frida_agent_resource_get_type" glib:type-struct="AgentResourceClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="AgentResourcePrivate" c:type="FridaAgentResourcePrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_agent_resource_new">
			<return-value transfer-ownership="full">
				<type name="Frida.AgentResource" c:type="FridaAgentResource*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="blob" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="tempdir" transfer-ownership="none" nullable="1">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_file" c:identifier="frida_agent_resource_get_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.TemporaryFile" c:type="FridaTemporaryFile*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentResource" c:type="FridaAgentResource*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_memfd" c:identifier="frida_agent_resource_get_memfd" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.UnixInputStream" c:type="GUnixInputStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentResource" c:type="FridaAgentResource*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="name" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="frida_agent_resource_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentResource" c:type="FridaAgentResource*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="blob" writable="1" construct-only="1">
			<type name="GLib.Bytes" c:type="GBytes*"/>
		</property>
		<method name="get_blob" c:identifier="frida_agent_resource_get_blob">
			<return-value transfer-ownership="none">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentResource" c:type="FridaAgentResource*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="tempdir" writable="1" construct-only="1">
			<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
		</property>
		<method name="get_tempdir" c:identifier="frida_agent_resource_get_tempdir">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentResource" c:type="FridaAgentResource*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="AgentResourceClass" c:type="FridaAgentResourceClass" glib:is-gtype-struct-for="AgentResource">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="AgentResourcePrivate" c:type="FridaAgentResourcePrivate" disguised="1"/>
	<class name="LinuxHelperProcess" c:type="FridaLinuxHelperProcess" c:symbol-prefix="linux_helper_process" glib:type-name="FridaLinuxHelperProcess" glib:get-type="frida_linux_helper_process_get_type" glib:type-struct="LinuxHelperProcessClass" parent="GObject.Object">
		<implements name="Frida.LinuxHelper"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LinuxHelperProcessPrivate" c:type="FridaLinuxHelperProcessPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_linux_helper_process_new">
			<return-value transfer-ownership="full">
				<type name="Frida.LinuxHelperProcess" c:type="FridaLinuxHelperProcess*"/>
			</return-value>
			<parameters>
				<parameter name="tempdir" transfer-ownership="none">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="tempdir" writable="1" construct-only="1">
			<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
		</property>
		<method name="get_tempdir" c:identifier="frida_linux_helper_process_get_tempdir">
			<return-value transfer-ownership="none">
				<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.LinuxHelperProcess" c:type="FridaLinuxHelperProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="LinuxHelperProcessClass" c:type="FridaLinuxHelperProcessClass" glib:is-gtype-struct-for="LinuxHelperProcess">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="LinuxHelperProcessPrivate" c:type="FridaLinuxHelperProcessPrivate" disguised="1"/>
	<class name="SocketHostSessionBackend" c:type="FridaSocketHostSessionBackend" c:symbol-prefix="socket_host_session_backend" glib:type-name="FridaSocketHostSessionBackend" glib:get-type="frida_socket_host_session_backend_get_type" glib:type-struct="SocketHostSessionBackendClass" parent="GObject.Object">
		<implements name="Frida.HostSessionBackend"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SocketHostSessionBackendPrivate" c:type="FridaSocketHostSessionBackendPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_socket_host_session_backend_new">
			<return-value transfer-ownership="full">
				<type name="Frida.SocketHostSessionBackend" c:type="FridaSocketHostSessionBackend*"/>
			</return-value>
		</constructor>
	</class>
	<record name="SocketHostSessionBackendClass" c:type="FridaSocketHostSessionBackendClass" glib:is-gtype-struct-for="SocketHostSessionBackend">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SocketHostSessionBackendPrivate" c:type="FridaSocketHostSessionBackendPrivate" disguised="1"/>
	<class name="SocketHostSessionProvider" c:type="FridaSocketHostSessionProvider" c:symbol-prefix="socket_host_session_provider" glib:type-name="FridaSocketHostSessionProvider" glib:get-type="frida_socket_host_session_provider_get_type" glib:type-struct="SocketHostSessionProviderClass" parent="GObject.Object">
		<implements name="Frida.HostSessionProvider"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SocketHostSessionProviderPrivate" c:type="FridaSocketHostSessionProviderPrivate*"/>
		</field>
		<method name="close" c:identifier="frida_socket_host_session_provider_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SocketHostSessionProvider" c:type="FridaSocketHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_socket_host_session_provider_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SocketHostSessionProvider" c:type="FridaSocketHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_socket_host_session_provider_new">
			<return-value transfer-ownership="full">
				<type name="Frida.SocketHostSessionProvider" c:type="FridaSocketHostSessionProvider*"/>
			</return-value>
		</constructor>
	</class>
	<record name="SocketHostSessionProviderClass" c:type="FridaSocketHostSessionProviderClass" glib:is-gtype-struct-for="SocketHostSessionProvider">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SocketHostSessionProviderPrivate" c:type="FridaSocketHostSessionProviderPrivate" disguised="1"/>
	<class name="FruityHostSessionBackend" c:type="FridaFruityHostSessionBackend" c:symbol-prefix="fruity_host_session_backend" glib:type-name="FridaFruityHostSessionBackend" glib:get-type="frida_fruity_host_session_backend_get_type" glib:type-struct="FruityHostSessionBackendClass" parent="GObject.Object">
		<implements name="Frida.HostSessionBackend"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityHostSessionBackendPrivate" c:type="FridaFruityHostSessionBackendPrivate*"/>
		</field>
		<function name="_extract_details_for_device" c:identifier="_frida_fruity_host_session_backend_extract_details_for_device" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="product_id" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="udid" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="name" direction="out" transfer-ownership="full">
					<type name="utf8" c:type="gchar**"/>
				</parameter>
				<parameter name="icon" direction="out" transfer-ownership="full" optional="1">
					<type name="GLib.Variant" c:type="GVariant**"/>
				</parameter>
			</parameters>
		</function>
		<constructor name="new" c:identifier="frida_fruity_host_session_backend_new">
			<return-value transfer-ownership="full">
				<type name="Frida.FruityHostSessionBackend" c:type="FridaFruityHostSessionBackend*"/>
			</return-value>
		</constructor>
	</class>
	<record name="FruityHostSessionBackendClass" c:type="FridaFruityHostSessionBackendClass" glib:is-gtype-struct-for="FruityHostSessionBackend">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityHostSessionBackendPrivate" c:type="FridaFruityHostSessionBackendPrivate" disguised="1"/>
	<class name="FruityHostSessionProvider" c:type="FridaFruityHostSessionProvider" c:symbol-prefix="fruity_host_session_provider" glib:type-name="FridaFruityHostSessionProvider" glib:get-type="frida_fruity_host_session_provider_get_type" glib:type-struct="FruityHostSessionProviderClass" parent="GObject.Object">
		<implements name="Frida.HostSessionProvider"/>
		<implements name="Frida.ChannelProvider"/>
		<implements name="Frida.FruityLockdownProvider"/>
		<implements name="Frida.Pairable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityHostSessionProviderPrivate" c:type="FridaFruityHostSessionProviderPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_host_session_provider_new">
			<return-value transfer-ownership="full">
				<type name="Frida.FruityHostSessionProvider" c:type="FridaFruityHostSessionProvider*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="icon" transfer-ownership="none" nullable="1">
					<type name="GLib.Variant" c:type="GVariant*"/>
				</parameter>
				<parameter name="details" transfer-ownership="none">
					<type name="FridaFruity.DeviceDetails" c:type="FridaFruityDeviceDetails*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="close" c:identifier="frida_fruity_host_session_provider_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FruityHostSessionProvider" c:type="FridaFruityHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_fruity_host_session_provider_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FruityHostSessionProvider" c:type="FridaFruityHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="device-name" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_device_name" c:identifier="frida_fruity_host_session_provider_get_device_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FruityHostSessionProvider" c:type="FridaFruityHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="device-icon" writable="1" construct-only="1">
			<type name="GLib.Variant" c:type="GVariant*"/>
		</property>
		<method name="get_device_icon" c:identifier="frida_fruity_host_session_provider_get_device_icon">
			<return-value transfer-ownership="none" nullable="1">
				<type name="GLib.Variant" c:type="GVariant*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FruityHostSessionProvider" c:type="FridaFruityHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="device-details" writable="1" construct-only="1">
			<type name="FridaFruity.DeviceDetails" c:type="FridaFruityDeviceDetails*"/>
		</property>
		<method name="get_device_details" c:identifier="frida_fruity_host_session_provider_get_device_details">
			<return-value transfer-ownership="none">
				<type name="FridaFruity.DeviceDetails" c:type="FridaFruityDeviceDetails*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FruityHostSessionProvider" c:type="FridaFruityHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityHostSessionProviderClass" c:type="FridaFruityHostSessionProviderClass" glib:is-gtype-struct-for="FruityHostSessionProvider">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityHostSessionProviderPrivate" c:type="FridaFruityHostSessionProviderPrivate" disguised="1"/>
	<class name="FruityHostSession" c:type="FridaFruityHostSession" c:symbol-prefix="fruity_host_session" glib:type-name="FridaFruityHostSession" glib:get-type="frida_fruity_host_session_get_type" glib:type-struct="FruityHostSessionClass" parent="GObject.Object">
		<implements name="Frida.HostSession"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FruityHostSessionPrivate" c:type="FridaFruityHostSessionPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_fruity_host_session_new">
			<return-value transfer-ownership="full">
				<type name="Frida.FruityHostSession" c:type="FridaFruityHostSession*"/>
			</return-value>
			<parameters>
				<parameter name="channel_provider" transfer-ownership="none">
					<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
				</parameter>
				<parameter name="lockdown_provider" transfer-ownership="none">
					<type name="Frida.FruityLockdownProvider" c:type="FridaFruityLockdownProvider*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="close" c:identifier="frida_fruity_host_session_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FruityHostSession" c:type="FridaFruityHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_fruity_host_session_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FruityHostSession" c:type="FridaFruityHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="link_agent_session" c:identifier="frida_fruity_host_session_link_agent_session">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FruityHostSession" c:type="FridaFruityHostSession*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="Frida.AgentSessionId" c:type="FridaAgentSessionId"/>
				</parameter>
				<parameter name="sink" transfer-ownership="none">
					<type name="Frida.AgentMessageSink" c:type="FridaAgentMessageSink*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="link_agent_session_finish" c:identifier="frida_fruity_host_session_link_agent_session_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.AgentSession" c:type="FridaAgentSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FruityHostSession" c:type="FridaFruityHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="channel-provider" writable="1" construct-only="1">
			<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
		</property>
		<method name="get_channel_provider" c:identifier="frida_fruity_host_session_get_channel_provider">
			<return-value transfer-ownership="none">
				<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FruityHostSession" c:type="FridaFruityHostSession*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="lockdown-provider" writable="1" construct-only="1">
			<type name="Frida.FruityLockdownProvider" c:type="FridaFruityLockdownProvider*"/>
		</property>
		<method name="get_lockdown_provider" c:identifier="frida_fruity_host_session_get_lockdown_provider">
			<return-value transfer-ownership="none">
				<type name="Frida.FruityLockdownProvider" c:type="FridaFruityLockdownProvider*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FruityHostSession" c:type="FridaFruityHostSession*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="FruityHostSessionClass" c:type="FridaFruityHostSessionClass" glib:is-gtype-struct-for="FruityHostSession">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FruityHostSessionPrivate" c:type="FridaFruityHostSessionPrivate" disguised="1"/>
	<class name="DroidyHostSessionBackend" c:type="FridaDroidyHostSessionBackend" c:symbol-prefix="droidy_host_session_backend" glib:type-name="FridaDroidyHostSessionBackend" glib:get-type="frida_droidy_host_session_backend_get_type" glib:type-struct="DroidyHostSessionBackendClass" parent="GObject.Object">
		<implements name="Frida.HostSessionBackend"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DroidyHostSessionBackendPrivate" c:type="FridaDroidyHostSessionBackendPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_droidy_host_session_backend_new">
			<return-value transfer-ownership="full">
				<type name="Frida.DroidyHostSessionBackend" c:type="FridaDroidyHostSessionBackend*"/>
			</return-value>
		</constructor>
	</class>
	<record name="DroidyHostSessionBackendClass" c:type="FridaDroidyHostSessionBackendClass" glib:is-gtype-struct-for="DroidyHostSessionBackend">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DroidyHostSessionBackendPrivate" c:type="FridaDroidyHostSessionBackendPrivate" disguised="1"/>
	<class name="DroidyHostSessionProvider" c:type="FridaDroidyHostSessionProvider" c:symbol-prefix="droidy_host_session_provider" glib:type-name="FridaDroidyHostSessionProvider" glib:get-type="frida_droidy_host_session_provider_get_type" glib:type-struct="DroidyHostSessionProviderClass" parent="GObject.Object">
		<implements name="Frida.HostSessionProvider"/>
		<implements name="Frida.ChannelProvider"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DroidyHostSessionProviderPrivate" c:type="FridaDroidyHostSessionProviderPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_droidy_host_session_provider_new">
			<return-value transfer-ownership="full">
				<type name="Frida.DroidyHostSessionProvider" c:type="FridaDroidyHostSessionProvider*"/>
			</return-value>
			<parameters>
				<parameter name="details" transfer-ownership="none">
					<type name="FridaDroidy.DeviceDetails" c:type="FridaDroidyDeviceDetails*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="close" c:identifier="frida_droidy_host_session_provider_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DroidyHostSessionProvider" c:type="FridaDroidyHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_droidy_host_session_provider_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DroidyHostSessionProvider" c:type="FridaDroidyHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="device-details" writable="1" construct-only="1">
			<type name="FridaDroidy.DeviceDetails" c:type="FridaDroidyDeviceDetails*"/>
		</property>
		<method name="get_device_details" c:identifier="frida_droidy_host_session_provider_get_device_details">
			<return-value transfer-ownership="none">
				<type name="FridaDroidy.DeviceDetails" c:type="FridaDroidyDeviceDetails*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DroidyHostSessionProvider" c:type="FridaDroidyHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="DroidyHostSessionProviderClass" c:type="FridaDroidyHostSessionProviderClass" glib:is-gtype-struct-for="DroidyHostSessionProvider">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DroidyHostSessionProviderPrivate" c:type="FridaDroidyHostSessionProviderPrivate" disguised="1"/>
	<class name="DroidyHostSession" c:type="FridaDroidyHostSession" c:symbol-prefix="droidy_host_session" glib:type-name="FridaDroidyHostSession" glib:get-type="frida_droidy_host_session_get_type" glib:type-struct="DroidyHostSessionClass" parent="GObject.Object">
		<implements name="Frida.HostSession"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DroidyHostSessionPrivate" c:type="FridaDroidyHostSessionPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_droidy_host_session_new">
			<return-value transfer-ownership="full">
				<type name="Frida.DroidyHostSession" c:type="FridaDroidyHostSession*"/>
			</return-value>
			<parameters>
				<parameter name="device_details" transfer-ownership="none">
					<type name="FridaDroidy.DeviceDetails" c:type="FridaDroidyDeviceDetails*"/>
				</parameter>
				<parameter name="channel_provider" transfer-ownership="none">
					<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="close" c:identifier="frida_droidy_host_session_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DroidyHostSession" c:type="FridaDroidyHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_droidy_host_session_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DroidyHostSession" c:type="FridaDroidyHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="link_agent_session" c:identifier="frida_droidy_host_session_link_agent_session">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DroidyHostSession" c:type="FridaDroidyHostSession*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="Frida.AgentSessionId" c:type="FridaAgentSessionId"/>
				</parameter>
				<parameter name="sink" transfer-ownership="none">
					<type name="Frida.AgentMessageSink" c:type="FridaAgentMessageSink*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="link_agent_session_finish" c:identifier="frida_droidy_host_session_link_agent_session_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.AgentSession" c:type="FridaAgentSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DroidyHostSession" c:type="FridaDroidyHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="device-details" writable="1" construct-only="1">
			<type name="FridaDroidy.DeviceDetails" c:type="FridaDroidyDeviceDetails*"/>
		</property>
		<method name="get_device_details" c:identifier="frida_droidy_host_session_get_device_details">
			<return-value transfer-ownership="none">
				<type name="FridaDroidy.DeviceDetails" c:type="FridaDroidyDeviceDetails*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DroidyHostSession" c:type="FridaDroidyHostSession*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="channel-provider" writable="1" construct-only="1">
			<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
		</property>
		<method name="get_channel_provider" c:identifier="frida_droidy_host_session_get_channel_provider">
			<return-value transfer-ownership="none">
				<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DroidyHostSession" c:type="FridaDroidyHostSession*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="DroidyHostSessionClass" c:type="FridaDroidyHostSessionClass" glib:is-gtype-struct-for="DroidyHostSession">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DroidyHostSessionPrivate" c:type="FridaDroidyHostSessionPrivate" disguised="1"/>
	<class name="DroidyHostSessionHelperClient" c:type="FridaDroidyHostSessionHelperClient" c:symbol-prefix="helper_client" glib:type-name="FridaDroidyHostSessionHelperClient" glib:get-type="frida_droidy_host_session_helper_client_get_type" glib:type-struct="DroidyHostSessionHelperClientClass" parent="GObject.Object">
		<implements name="Gio.AsyncInitable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DroidyHostSessionHelperClientPrivate" c:type="FridaDroidyHostSessionHelperClientPrivate*"/>
		</field>
		<function name="open" c:identifier="frida_droidy_host_session_helper_client_open">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="device_serial" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="instance_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="open_finish" c:identifier="frida_droidy_host_session_helper_client_open_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.DroidyHostSessionHelperClient" c:type="FridaDroidyHostSessionHelperClient*"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<method name="close" c:identifier="frida_droidy_host_session_helper_client_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DroidyHostSessionHelperClient" c:type="FridaDroidyHostSessionHelperClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_droidy_host_session_helper_client_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DroidyHostSessionHelperClient" c:type="FridaDroidyHostSessionHelperClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request" c:identifier="frida_droidy_host_session_helper_client_request">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DroidyHostSessionHelperClient" c:type="FridaDroidyHostSessionHelperClient*"/>
				</instance-parameter>
				<parameter name="stanza" transfer-ownership="none">
					<type name="Json.Node" c:type="JsonNode*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request_finish" c:identifier="frida_droidy_host_session_helper_client_request_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Json.Node" c:type="JsonNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DroidyHostSessionHelperClient" c:type="FridaDroidyHostSessionHelperClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="device-serial" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_device_serial" c:identifier="frida_droidy_host_session_helper_client_get_device_serial">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DroidyHostSessionHelperClient" c:type="FridaDroidyHostSessionHelperClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="instance-id" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_instance_id" c:identifier="frida_droidy_host_session_helper_client_get_instance_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DroidyHostSessionHelperClient" c:type="FridaDroidyHostSessionHelperClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="closed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</class>
	<record name="DroidyHostSessionHelperClientClass" c:type="FridaDroidyHostSessionHelperClientClass" glib:is-gtype-struct-for="DroidyHostSessionHelperClient">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DroidyHostSessionHelperClientPrivate" c:type="FridaDroidyHostSessionHelperClientPrivate" disguised="1"/>
	<class name="BareboneHostSessionBackend" c:type="FridaBareboneHostSessionBackend" c:symbol-prefix="barebone_host_session_backend" glib:type-name="FridaBareboneHostSessionBackend" glib:get-type="frida_barebone_host_session_backend_get_type" glib:type-struct="BareboneHostSessionBackendClass" parent="GObject.Object">
		<implements name="Frida.HostSessionBackend"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BareboneHostSessionBackendPrivate" c:type="FridaBareboneHostSessionBackendPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_barebone_host_session_backend_new">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.BareboneHostSessionBackend" c:type="FridaBareboneHostSessionBackend*"/>
			</return-value>
		</constructor>
	</class>
	<record name="BareboneHostSessionBackendClass" c:type="FridaBareboneHostSessionBackendClass" glib:is-gtype-struct-for="BareboneHostSessionBackend">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="BareboneHostSessionBackendPrivate" c:type="FridaBareboneHostSessionBackendPrivate" disguised="1"/>
	<class name="BareboneHostSessionProvider" c:type="FridaBareboneHostSessionProvider" c:symbol-prefix="barebone_host_session_provider" glib:type-name="FridaBareboneHostSessionProvider" glib:get-type="frida_barebone_host_session_provider_get_type" glib:type-struct="BareboneHostSessionProviderClass" parent="GObject.Object">
		<implements name="Frida.HostSessionProvider"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BareboneHostSessionProviderPrivate" c:type="FridaBareboneHostSessionProviderPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_barebone_host_session_provider_new">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.BareboneHostSessionProvider" c:type="FridaBareboneHostSessionProvider*"/>
			</return-value>
			<parameters>
				<parameter name="connectable" transfer-ownership="none">
					<type name="Gio.SocketConnectable" c:type="GSocketConnectable*"/>
				</parameter>
				<parameter name="heap_base_pa" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="close" c:identifier="frida_barebone_host_session_provider_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.BareboneHostSessionProvider" c:type="FridaBareboneHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_barebone_host_session_provider_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.BareboneHostSessionProvider" c:type="FridaBareboneHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="connectable" writable="1" construct-only="1">
			<type name="Gio.SocketConnectable" c:type="GSocketConnectable*"/>
		</property>
		<method name="get_connectable" c:identifier="frida_barebone_host_session_provider_get_connectable">
			<return-value transfer-ownership="none">
				<type name="Gio.SocketConnectable" c:type="GSocketConnectable*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.BareboneHostSessionProvider" c:type="FridaBareboneHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="heap-base-pa" writable="1" construct-only="1">
			<type name="guint64" c:type="guint64"/>
		</property>
		<method name="get_heap_base_pa" c:identifier="frida_barebone_host_session_provider_get_heap_base_pa">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.BareboneHostSessionProvider" c:type="FridaBareboneHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="BareboneHostSessionProviderClass" c:type="FridaBareboneHostSessionProviderClass" glib:is-gtype-struct-for="BareboneHostSessionProvider">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="BareboneHostSessionProviderPrivate" c:type="FridaBareboneHostSessionProviderPrivate" disguised="1"/>
	<class name="BareboneHostSession" c:type="FridaBareboneHostSession" c:symbol-prefix="barebone_host_session" glib:type-name="FridaBareboneHostSession" glib:get-type="frida_barebone_host_session_get_type" glib:type-struct="BareboneHostSessionClass" parent="GObject.Object">
		<implements name="Frida.HostSession"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BareboneHostSessionPrivate" c:type="FridaBareboneHostSessionPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_barebone_host_session_new">
			<return-value transfer-ownership="full">
				<type name="FridaBarebone.BareboneHostSession" c:type="FridaBareboneHostSession*"/>
			</return-value>
			<parameters>
				<parameter name="services" transfer-ownership="none">
					<type name="FridaBarebone.Services" c:type="FridaBareboneServices*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="close" c:identifier="frida_barebone_host_session_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.BareboneHostSession" c:type="FridaBareboneHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_barebone_host_session_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.BareboneHostSession" c:type="FridaBareboneHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="link_agent_session" c:identifier="frida_barebone_host_session_link_agent_session">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.BareboneHostSession" c:type="FridaBareboneHostSession*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="Frida.AgentSessionId" c:type="FridaAgentSessionId"/>
				</parameter>
				<parameter name="sink" transfer-ownership="none">
					<type name="Frida.AgentMessageSink" c:type="FridaAgentMessageSink*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="link_agent_session_finish" c:identifier="frida_barebone_host_session_link_agent_session_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.AgentSession" c:type="FridaAgentSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.BareboneHostSession" c:type="FridaBareboneHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="services" writable="1" construct-only="1">
			<type name="FridaBarebone.Services" c:type="FridaBareboneServices*"/>
		</property>
		<method name="get_services" c:identifier="frida_barebone_host_session_get_services">
			<return-value transfer-ownership="none">
				<type name="FridaBarebone.Services" c:type="FridaBareboneServices*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaBarebone.BareboneHostSession" c:type="FridaBareboneHostSession*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="BareboneHostSessionClass" c:type="FridaBareboneHostSessionClass" glib:is-gtype-struct-for="BareboneHostSession">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="BareboneHostSessionPrivate" c:type="FridaBareboneHostSessionPrivate" disguised="1"/>
	<class name="Compiler" c:type="FridaCompiler" c:symbol-prefix="compiler" glib:type-name="FridaCompiler" glib:get-type="frida_compiler_get_type" glib:type-struct="CompilerClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="CompilerPrivate" c:type="FridaCompilerPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_compiler_new">
			<return-value transfer-ownership="full">
				<type name="Frida.Compiler" c:type="FridaCompiler*"/>
			</return-value>
			<parameters>
				<parameter name="manager" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="build" c:identifier="frida_compiler_build">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Compiler" c:type="FridaCompiler*"/>
				</instance-parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.BuildOptions" c:type="FridaBuildOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="build_finish" c:identifier="frida_compiler_build_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Compiler" c:type="FridaCompiler*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="build_sync" c:identifier="frida_compiler_build_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Compiler" c:type="FridaCompiler*"/>
				</instance-parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.BuildOptions" c:type="FridaBuildOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="watch" c:identifier="frida_compiler_watch">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Compiler" c:type="FridaCompiler*"/>
				</instance-parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.WatchOptions" c:type="FridaWatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="watch_finish" c:identifier="frida_compiler_watch_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Compiler" c:type="FridaCompiler*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="watch_sync" c:identifier="frida_compiler_watch_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Compiler" c:type="FridaCompiler*"/>
				</instance-parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.WatchOptions" c:type="FridaWatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<property name="manager" writable="1" construct-only="1">
			<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
		</property>
		<method name="get_manager" c:identifier="frida_compiler_get_manager">
			<return-value transfer-ownership="none">
				<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Compiler" c:type="FridaCompiler*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="starting">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="finished">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="output">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="bundle" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="diagnostics">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="diagnostics" transfer-ownership="none">
					<type name="GLib.Variant" c:type="GVariant*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="CompilerClass" c:type="FridaCompilerClass" glib:is-gtype-struct-for="Compiler">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="CompilerPrivate" c:type="FridaCompilerPrivate" disguised="1"/>
	<class name="CompilerOptions" c:type="FridaCompilerOptions" c:symbol-prefix="compiler_options" glib:type-name="FridaCompilerOptions" glib:get-type="frida_compiler_options_get_type" glib:type-struct="CompilerOptionsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="CompilerOptionsPrivate" c:type="FridaCompilerOptionsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_compiler_options_new">
			<return-value transfer-ownership="full">
				<type name="Frida.CompilerOptions" c:type="FridaCompilerOptions*"/>
			</return-value>
		</constructor>
		<property name="project-root" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_project_root" c:identifier="frida_compiler_options_get_project_root">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.CompilerOptions" c:type="FridaCompilerOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_project_root" c:identifier="frida_compiler_options_set_project_root">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.CompilerOptions" c:type="FridaCompilerOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="source-maps" writable="1">
			<type name="Frida.SourceMaps" c:type="FridaSourceMaps"/>
		</property>
		<method name="get_source_maps" c:identifier="frida_compiler_options_get_source_maps">
			<return-value transfer-ownership="none">
				<type name="Frida.SourceMaps" c:type="FridaSourceMaps"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.CompilerOptions" c:type="FridaCompilerOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_source_maps" c:identifier="frida_compiler_options_set_source_maps">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.CompilerOptions" c:type="FridaCompilerOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Frida.SourceMaps" c:type="FridaSourceMaps"/>
				</parameter>
			</parameters>
		</method>
		<property name="compression" writable="1">
			<type name="Frida.JsCompression" c:type="FridaJsCompression"/>
		</property>
		<method name="get_compression" c:identifier="frida_compiler_options_get_compression">
			<return-value transfer-ownership="none">
				<type name="Frida.JsCompression" c:type="FridaJsCompression"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.CompilerOptions" c:type="FridaCompilerOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_compression" c:identifier="frida_compiler_options_set_compression">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.CompilerOptions" c:type="FridaCompilerOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Frida.JsCompression" c:type="FridaJsCompression"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="CompilerOptionsClass" c:type="FridaCompilerOptionsClass" glib:is-gtype-struct-for="CompilerOptions">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="CompilerOptionsPrivate" c:type="FridaCompilerOptionsPrivate" disguised="1"/>
	<class name="BuildOptions" c:type="FridaBuildOptions" c:symbol-prefix="build_options" glib:type-name="FridaBuildOptions" glib:get-type="frida_build_options_get_type" glib:type-struct="BuildOptionsClass" parent="Frida.CompilerOptions">
		<field name="parent_instance" readable="0" private="1">
			<type name="Frida.CompilerOptions" c:type="FridaCompilerOptions"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BuildOptionsPrivate" c:type="FridaBuildOptionsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_build_options_new">
			<return-value transfer-ownership="full">
				<type name="Frida.BuildOptions" c:type="FridaBuildOptions*"/>
			</return-value>
		</constructor>
	</class>
	<record name="BuildOptionsClass" c:type="FridaBuildOptionsClass" glib:is-gtype-struct-for="BuildOptions">
		<field name="parent_class" readable="0" private="1">
			<type name="Frida.CompilerOptionsClass" c:type="FridaCompilerOptionsClass"/>
		</field>
	</record>
	<record name="BuildOptionsPrivate" c:type="FridaBuildOptionsPrivate" disguised="1"/>
	<class name="WatchOptions" c:type="FridaWatchOptions" c:symbol-prefix="watch_options" glib:type-name="FridaWatchOptions" glib:get-type="frida_watch_options_get_type" glib:type-struct="WatchOptionsClass" parent="Frida.CompilerOptions">
		<field name="parent_instance" readable="0" private="1">
			<type name="Frida.CompilerOptions" c:type="FridaCompilerOptions"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="WatchOptionsPrivate" c:type="FridaWatchOptionsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_watch_options_new">
			<return-value transfer-ownership="full">
				<type name="Frida.WatchOptions" c:type="FridaWatchOptions*"/>
			</return-value>
		</constructor>
	</class>
	<record name="WatchOptionsClass" c:type="FridaWatchOptionsClass" glib:is-gtype-struct-for="WatchOptions">
		<field name="parent_class" readable="0" private="1">
			<type name="Frida.CompilerOptionsClass" c:type="FridaCompilerOptionsClass"/>
		</field>
	</record>
	<record name="WatchOptionsPrivate" c:type="FridaWatchOptionsPrivate" disguised="1"/>
	<interface name="Injector" c:type="FridaInjector" c:symbol-prefix="injector" glib:type-name="FridaInjector" glib:get-type="frida_injector_get_type" glib:type-struct="InjectorIface">
		<prerequisite name="GObject.Object"/>
		<function name="new" c:identifier="frida_injector_new">
			<return-value transfer-ownership="full">
				<type name="Frida.Injector" c:type="FridaInjector*"/>
			</return-value>
		</function>
		<function name="new_inprocess" c:identifier="frida_injector_new_inprocess">
			<return-value transfer-ownership="full">
				<type name="Frida.Injector" c:type="FridaInjector*"/>
			</return-value>
		</function>
		<method name="close" c:identifier="frida_injector_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_injector_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="close" invoker="close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="close_finish" invoker="close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="close_sync" c:identifier="frida_injector_close_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_file" c:identifier="frida_injector_inject_library_file">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_file_finish" c:identifier="frida_injector_inject_library_file_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="inject_library_file" invoker="inject_library_file">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="inject_library_file_finish" invoker="inject_library_file_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="inject_library_file_sync" c:identifier="frida_injector_inject_library_file_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_blob" c:identifier="frida_injector_inject_library_blob">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="blob" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_blob_finish" c:identifier="frida_injector_inject_library_blob_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="inject_library_blob" invoker="inject_library_blob">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="blob" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="inject_library_blob_finish" invoker="inject_library_blob_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="inject_library_blob_sync" c:identifier="frida_injector_inject_library_blob_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="blob" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="demonitor" c:identifier="frida_injector_demonitor">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="demonitor_finish" c:identifier="frida_injector_demonitor_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="demonitor" invoker="demonitor">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="demonitor_finish" invoker="demonitor_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="demonitor_sync" c:identifier="frida_injector_demonitor_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="demonitor_and_clone_state" c:identifier="frida_injector_demonitor_and_clone_state">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="demonitor_and_clone_state_finish" c:identifier="frida_injector_demonitor_and_clone_state_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="demonitor_and_clone_state" invoker="demonitor_and_clone_state">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="demonitor_and_clone_state_finish" invoker="demonitor_and_clone_state_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="demonitor_and_clone_state_sync" c:identifier="frida_injector_demonitor_and_clone_state_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="recreate_thread" c:identifier="frida_injector_recreate_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="recreate_thread_finish" c:identifier="frida_injector_recreate_thread_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="recreate_thread" invoker="recreate_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="recreate_thread_finish" invoker="recreate_thread_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="recreate_thread_sync" c:identifier="frida_injector_recreate_thread_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<glib:signal name="uninjected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</glib:signal>
	</interface>
	<record name="InjectorIface" c:type="FridaInjectorIface" glib:is-gtype-struct-for="Injector">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="close">
			<callback name="close" c:type="close">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="close_finish">
			<callback name="close_finish" c:type="close_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="inject_library_file">
			<callback name="inject_library_file" c:type="inject_library_file">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="path" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="entrypoint" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="7" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="inject_library_file_finish">
			<callback name="inject_library_file_finish" c:type="inject_library_file_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="guint" c:type="guint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="inject_library_blob">
			<callback name="inject_library_blob" c:type="inject_library_blob">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="blob" transfer-ownership="none">
						<type name="GLib.Bytes" c:type="GBytes*"/>
					</parameter>
					<parameter name="entrypoint" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="7" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="inject_library_blob_finish">
			<callback name="inject_library_blob_finish" c:type="inject_library_blob_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="guint" c:type="guint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="demonitor">
			<callback name="demonitor" c:type="demonitor">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="id" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="demonitor_finish">
			<callback name="demonitor_finish" c:type="demonitor_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="demonitor_and_clone_state">
			<callback name="demonitor_and_clone_state" c:type="demonitor_and_clone_state">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="id" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="demonitor_and_clone_state_finish">
			<callback name="demonitor_and_clone_state_finish" c:type="demonitor_and_clone_state_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="guint" c:type="guint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="recreate_thread">
			<callback name="recreate_thread" c:type="recreate_thread">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="id" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="recreate_thread_finish">
			<callback name="recreate_thread_finish" c:type="recreate_thread_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="HostSessionProvider" c:type="FridaHostSessionProvider" c:symbol-prefix="host_session_provider" glib:type-name="FridaHostSessionProvider" glib:get-type="frida_host_session_provider_get_type" glib:type-struct="HostSessionProviderIface">
		<prerequisite name="GObject.Object"/>
		<method name="create" c:identifier="frida_host_session_provider_create">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.HostSessionOptions" c:type="FridaHostSessionOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_finish" c:identifier="frida_host_session_provider_create_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.HostSession" c:type="FridaHostSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create" invoker="create">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.HostSessionOptions" c:type="FridaHostSessionOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="create_finish" invoker="create_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.HostSession" c:type="FridaHostSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="destroy" c:identifier="frida_host_session_provider_destroy">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="session" transfer-ownership="none">
					<type name="Frida.HostSession" c:type="FridaHostSession*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="destroy_finish" c:identifier="frida_host_session_provider_destroy_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="destroy" invoker="destroy">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="session" transfer-ownership="none">
					<type name="Frida.HostSession" c:type="FridaHostSession*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="destroy_finish" invoker="destroy_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="link_agent_session" c:identifier="frida_host_session_provider_link_agent_session">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="host_session" transfer-ownership="none">
					<type name="Frida.HostSession" c:type="FridaHostSession*"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="Frida.AgentSessionId" c:type="FridaAgentSessionId"/>
				</parameter>
				<parameter name="sink" transfer-ownership="none">
					<type name="Frida.AgentMessageSink" c:type="FridaAgentMessageSink*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="link_agent_session_finish" c:identifier="frida_host_session_provider_link_agent_session_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.AgentSession" c:type="FridaAgentSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="link_agent_session" invoker="link_agent_session">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="host_session" transfer-ownership="none">
					<type name="Frida.HostSession" c:type="FridaHostSession*"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="Frida.AgentSessionId" c:type="FridaAgentSessionId"/>
				</parameter>
				<parameter name="sink" transfer-ownership="none">
					<type name="Frida.AgentMessageSink" c:type="FridaAgentMessageSink*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="link_agent_session_finish" invoker="link_agent_session_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.AgentSession" c:type="FridaAgentSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="id">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_id" c:identifier="frida_host_session_provider_get_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_id" invoker="get_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="frida_host_session_provider_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_name" invoker="get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="icon">
			<type name="GLib.Variant" c:type="GVariant*"/>
		</property>
		<method name="get_icon" c:identifier="frida_host_session_provider_get_icon">
			<return-value transfer-ownership="none" nullable="1">
				<type name="GLib.Variant" c:type="GVariant*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_icon" invoker="get_icon">
			<return-value transfer-ownership="none" nullable="1">
				<type name="GLib.Variant" c:type="GVariant*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="kind">
			<type name="Frida.HostSessionProviderKind" c:type="FridaHostSessionProviderKind"/>
		</property>
		<method name="get_kind" c:identifier="frida_host_session_provider_get_kind">
			<return-value transfer-ownership="none">
				<type name="Frida.HostSessionProviderKind" c:type="FridaHostSessionProviderKind"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_kind" invoker="get_kind">
			<return-value transfer-ownership="none">
				<type name="Frida.HostSessionProviderKind" c:type="FridaHostSessionProviderKind"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="host-session-detached">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="session" transfer-ownership="none">
					<type name="Frida.HostSession" c:type="FridaHostSession*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="agent-session-detached">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="id" transfer-ownership="none">
					<type name="Frida.AgentSessionId" c:type="FridaAgentSessionId"/>
				</parameter>
				<parameter name="reason" transfer-ownership="none">
					<type name="Frida.SessionDetachReason" c:type="FridaSessionDetachReason"/>
				</parameter>
				<parameter name="crash" transfer-ownership="none">
					<type name="Frida.CrashInfo" c:type="FridaCrashInfo"/>
				</parameter>
			</parameters>
		</glib:signal>
	</interface>
	<record name="HostSessionProviderIface" c:type="FridaHostSessionProviderIface" glib:is-gtype-struct-for="HostSessionProvider">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="create">
			<callback name="create" c:type="create">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
					<parameter name="options" transfer-ownership="none" nullable="1">
						<type name="Frida.HostSessionOptions" c:type="FridaHostSessionOptions*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_finish">
			<callback name="create_finish" c:type="create_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="Frida.HostSession" c:type="FridaHostSession*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="destroy">
			<callback name="destroy" c:type="destroy">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
					<parameter name="session" transfer-ownership="none">
						<type name="Frida.HostSession" c:type="FridaHostSession*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="destroy_finish">
			<callback name="destroy_finish" c:type="destroy_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="link_agent_session">
			<callback name="link_agent_session" c:type="link_agent_session">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
					<parameter name="host_session" transfer-ownership="none">
						<type name="Frida.HostSession" c:type="FridaHostSession*"/>
					</parameter>
					<parameter name="id" transfer-ownership="none">
						<type name="Frida.AgentSessionId" c:type="FridaAgentSessionId"/>
					</parameter>
					<parameter name="sink" transfer-ownership="none">
						<type name="Frida.AgentMessageSink" c:type="FridaAgentMessageSink*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="link_agent_session_finish">
			<callback name="link_agent_session_finish" c:type="link_agent_session_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="Frida.AgentSession" c:type="FridaAgentSession*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_id">
			<callback name="get_id" c:type="get_id">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_name">
			<callback name="get_name" c:type="get_name">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_icon">
			<callback name="get_icon" c:type="get_icon">
				<return-value transfer-ownership="none" nullable="1">
					<type name="GLib.Variant" c:type="GVariant*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_kind">
			<callback name="get_kind" c:type="get_kind">
				<return-value transfer-ownership="none">
					<type name="Frida.HostSessionProviderKind" c:type="FridaHostSessionProviderKind"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="ChannelProvider" c:type="FridaChannelProvider" c:symbol-prefix="channel_provider" glib:type-name="FridaChannelProvider" glib:get-type="frida_channel_provider_get_type" glib:type-struct="ChannelProviderIface">
		<prerequisite name="GObject.Object"/>
		<method name="open_channel" c:identifier="frida_channel_provider_open_channel">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="open_channel_finish" c:identifier="frida_channel_provider_open_channel_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.IOStream" c:type="GIOStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="open_channel" invoker="open_channel">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="open_channel_finish" invoker="open_channel_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.IOStream" c:type="GIOStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="ChannelProviderIface" c:type="FridaChannelProviderIface" glib:is-gtype-struct-for="ChannelProvider">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="open_channel">
			<callback name="open_channel" c:type="open_channel">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
					</parameter>
					<parameter name="address" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="open_channel_finish">
			<callback name="open_channel_finish" c:type="open_channel_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="Gio.IOStream" c:type="GIOStream*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.ChannelProvider" c:type="FridaChannelProvider*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Pairable" c:type="FridaPairable" c:symbol-prefix="pairable" glib:type-name="FridaPairable" glib:get-type="frida_pairable_get_type" glib:type-struct="PairableIface">
		<prerequisite name="GObject.Object"/>
		<method name="unpair" c:identifier="frida_pairable_unpair">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Pairable" c:type="FridaPairable*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unpair_finish" c:identifier="frida_pairable_unpair_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Pairable" c:type="FridaPairable*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="unpair" invoker="unpair">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Pairable" c:type="FridaPairable*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="unpair_finish" invoker="unpair_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Pairable" c:type="FridaPairable*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="PairableIface" c:type="FridaPairableIface" glib:is-gtype-struct-for="Pairable">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="unpair">
			<callback name="unpair" c:type="unpair">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Pairable" c:type="FridaPairable*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="unpair_finish">
			<callback name="unpair_finish" c:type="unpair_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Pairable" c:type="FridaPairable*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="HostSessionBackend" c:type="FridaHostSessionBackend" c:symbol-prefix="host_session_backend" glib:type-name="FridaHostSessionBackend" glib:get-type="frida_host_session_backend_get_type" glib:type-struct="HostSessionBackendIface">
		<prerequisite name="GObject.Object"/>
		<method name="start" c:identifier="frida_host_session_backend_start">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="start_finish" c:identifier="frida_host_session_backend_start_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="start" invoker="start">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="start_finish" invoker="start_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="stop" c:identifier="frida_host_session_backend_stop">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop_finish" c:identifier="frida_host_session_backend_stop_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="stop" invoker="stop">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="stop_finish" invoker="stop_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="provider-available">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="provider" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="provider-unavailable">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="provider" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</interface>
	<record name="HostSessionBackendIface" c:type="FridaHostSessionBackendIface" glib:is-gtype-struct-for="HostSessionBackend">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="start">
			<callback name="start" c:type="start">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="start_finish">
			<callback name="start_finish" c:type="start_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="stop">
			<callback name="stop" c:type="stop">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="stop_finish">
			<callback name="stop_finish" c:type="stop_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="FruityLockdownProvider" c:type="FridaFruityLockdownProvider" c:symbol-prefix="fruity_lockdown_provider" glib:type-name="FridaFruityLockdownProvider" glib:get-type="frida_fruity_lockdown_provider_get_type" glib:type-struct="FruityLockdownProviderIface">
		<prerequisite name="GObject.Object"/>
		<method name="get_lockdown_client" c:identifier="frida_fruity_lockdown_provider_get_lockdown_client">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FruityLockdownProvider" c:type="FridaFruityLockdownProvider*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_lockdown_client_finish" c:identifier="frida_fruity_lockdown_provider_get_lockdown_client_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FruityLockdownProvider" c:type="FridaFruityLockdownProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_lockdown_client" invoker="get_lockdown_client">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FruityLockdownProvider" c:type="FridaFruityLockdownProvider*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="get_lockdown_client_finish" invoker="get_lockdown_client_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FruityLockdownProvider" c:type="FridaFruityLockdownProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="FruityLockdownProviderIface" c:type="FridaFruityLockdownProviderIface" glib:is-gtype-struct-for="FruityLockdownProvider">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_lockdown_client">
			<callback name="get_lockdown_client" c:type="get_lockdown_client">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.FruityLockdownProvider" c:type="FridaFruityLockdownProvider*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_lockdown_client_finish">
			<callback name="get_lockdown_client_finish" c:type="get_lockdown_client_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="FridaFruity.LockdownClient" c:type="FridaFruityLockdownClient*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.FruityLockdownProvider" c:type="FridaFruityLockdownProvider*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<function name="init" c:identifier="frida_init">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
	</function>
	<function name="init_with_runtime" c:identifier="frida_init_with_runtime">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="runtime" transfer-ownership="none">
				<type name="Frida.Runtime" c:type="FridaRuntime"/>
			</parameter>
		</parameters>
	</function>
	<function name="shutdown" c:identifier="frida_shutdown">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
	</function>
	<function name="deinit" c:identifier="frida_deinit">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
	</function>
	<function name="get_main_context" c:identifier="frida_get_main_context">
		<return-value transfer-ownership="none">
			<type name="GLib.MainContext" c:type="GMainContext*"/>
		</return-value>
	</function>
	<function name="unref" c:identifier="frida_unref">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="obj" transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
	<function name="version" c:identifier="frida_version">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="major" direction="out" transfer-ownership="full">
				<type name="guint" c:type="guint*"/>
			</parameter>
			<parameter name="minor" direction="out" transfer-ownership="full">
				<type name="guint" c:type="guint*"/>
			</parameter>
			<parameter name="micro" direction="out" transfer-ownership="full">
				<type name="guint" c:type="guint*"/>
			</parameter>
			<parameter name="nano" direction="out" transfer-ownership="full">
				<type name="guint" c:type="guint*"/>
			</parameter>
		</parameters>
	</function>
	<function name="version_string" c:identifier="frida_version_string">
		<return-value transfer-ownership="none">
			<type name="utf8" c:type="const gchar*"/>
		</return-value>
	</function>
	<function name="on_pending_garbage" c:identifier="frida_on_pending_garbage">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="data" transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
</namespace>
</repository>
